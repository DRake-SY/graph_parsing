{
    "get_software_versions": {
        "name_process": "get_software_versions",
        "string_process": "\nprocess get_software_versions {\n    publishDir \"${params.outdir}/pipeline_info\", mode: 'copy',\n        saveAs: { filename ->\n                      if (filename.indexOf(\".csv\") > 0) filename\n                      else null\n                }\n\n    output:\n    file 'software_versions_mqc.yaml' into ch_software_versions_yaml\n    file \"software_versions.csv\"\n\n    script:\n                                                                     \n                                                  \n                   \n                                                  \n                                                                                \n                                                                                   \n      \n                             \n                                                     \n                    \n                          \n                                              \n    \"\"\"\n    echo $workflow.manifest.version > v_pipeline.txt\n    echo $workflow.nextflow.version > v_nextflow.txt\n    fastqc --version > v_fastqc.txt\n    multiqc --version > v_multiqc.txt\n    fastp --version > v_fastp.txt\n    diamond version > v_diamond.txt\n    samtools --version > v_samtools.txt\n    sourmash -v &> v_sourmash.txt\n    pip show sencha &> v_sencha.txt\n    scrape_software_versions.py &> software_versions_mqc.yaml\n    \"\"\"\n}",
        "nb_lignes_process": 36,
        "string_script": "    \"\"\"\n    echo $workflow.manifest.version > v_pipeline.txt\n    echo $workflow.nextflow.version > v_nextflow.txt\n    fastqc --version > v_fastqc.txt\n    multiqc --version > v_multiqc.txt\n    fastp --version > v_fastp.txt\n    diamond version > v_diamond.txt\n    samtools --version > v_samtools.txt\n    sourmash -v &> v_sourmash.txt\n    pip show sencha &> v_sencha.txt\n    scrape_software_versions.py &> software_versions_mqc.yaml\n    \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "FastQC",
            "MultiQC",
            "fastPHASE",
            "Diamond",
            "SAMtools",
            "sourmash",
            "PPIP"
        ],
        "tools_url": [
            "https://bio.tools/fastqc",
            "https://bio.tools/multiqc",
            "https://bio.tools/fastphase",
            "https://bio.tools/diamond",
            "https://bio.tools/samtools",
            "https://bio.tools/sourmash",
            "https://bio.tools/ppip"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            },
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            },
            {
                "name": "fastPHASE",
                "uri": "https://bio.tools/fastphase",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3056",
                            "term": "Population genetics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3454",
                                    "term": "Phasing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Imputation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Data imputation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "fastPHASE is a program to estimate missing genotypes and unobserved haplotypes. It is an implementation of the model described in Scheet & Stephens (2006). This is a cluster-based model for haplotype variation, and gains its utility from implicitly modeling the genealogy of chromosomes in a random sample from a population as a tree but summarizing all haplotype variation in the \"tips\" of the trees.",
                "homepage": "http://scheet.org/software.html"
            },
            {
                "name": "Diamond",
                "uri": "https://bio.tools/diamond",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Proteins"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0258",
                                    "term": "Sequence alignment analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Sequence aligner for protein and translated DNA searches and functions as a drop-in replacement for the NCBI BLAST software tools. It is suitable for protein-protein search as well as DNA-protein search on short reads and longer sequences including contigs and assemblies, providing a speedup of BLAST ranging up to x20,000.",
                "homepage": "https://github.com/bbuchfink/diamond"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "sourmash",
                "uri": "https://bio.tools/sourmash",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3307",
                            "term": "Computational biology"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0346",
                                    "term": "Sequence similarity search"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0289",
                                    "term": "Sequence distance matrix generation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0289",
                                    "term": "Sequence distance calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0289",
                                    "term": "Phylogenetic distance matrix generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0289",
                                    "term": "Sequence distance matrix construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2975",
                                "term": "Nucleic acid sequence (raw)"
                            }
                        ],
                        "output": []
                    }
                ],
                "description": "Compute and compare MinHash signatures for DNA data sets.",
                "homepage": "https://sourmash.readthedocs.io/en/latest/"
            },
            {
                "name": "PPIP",
                "uri": "https://bio.tools/ppip",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0121",
                            "term": "Proteomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3644",
                                    "term": "de Novo sequencing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3631",
                                    "term": "Peptide identification"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3631",
                                    "term": "Peptide-spectrum-matching"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0943",
                                "term": "Mass spectrum"
                            },
                            {
                                "uri": "http://edamontology.org/data_2603",
                                "term": "Expression data"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2974",
                                "term": "Protein sequence (raw)"
                            }
                        ]
                    }
                ],
                "description": "An automated software for identification of bioactive endogenous peptides",
                "homepage": "https://github.com/Shawn-Xu/PPIP"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [
            "ch_software_versions_yaml"
        ],
        "nb_outputs": 1,
        "name_workflow": "czbiohub__nf-predictorthologs",
        "directive": [
            "publishDir \"${params.outdir}/pipeline_info\", mode: 'copy' , saveAs: { filename -> if (filename.indexOf(\".csv\") > 0) filename else null }"
        ],
        "when": "",
        "stub": ""
    },
    "sambamba_dedup": {
        "name_process": "sambamba_dedup",
        "string_process": " process sambamba_dedup {\n        tag \"${prefix}\"\n        label \"process_high\"\n        publishDir \"${params.outdir}/sambamba_dedup\", mode: 'copy'\n\n        input:\n        file(bam) from ch_bam_for_dedup\n\n        output:\n        set val(prefix), file(bam_dedup) into ch_dedup_bam_for_index, ch_dedup_bam_for_samtools_fastq\n\n        script:\n        buffer_size = task.memory.toMega()\n        prefix = \"${bam.getBaseName()}_dedup\"\n        bam_dedup = \"${prefix}.bam\"\n        \"\"\"\n        sambamba markdup --remove-duplicates --sort-buffer-size ${buffer_size} --nthreads $task.cpus ${bam} ${bam_dedup}\n        \"\"\"\n    }",
        "nb_lignes_process": 17,
        "string_script": "        buffer_size = task.memory.toMega()\n        prefix = \"${bam.getBaseName()}_dedup\"\n        bam_dedup = \"${prefix}.bam\"\n        \"\"\"\n        sambamba markdup --remove-duplicates --sort-buffer-size ${buffer_size} --nthreads $task.cpus ${bam} ${bam_dedup}\n        \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "Sambamba"
        ],
        "tools_url": [
            "https://bio.tools/sambamba"
        ],
        "tools_dico": [
            {
                "name": "Sambamba",
                "uri": "https://bio.tools/sambamba",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This tool is a high performance modern robust and fast tool (and library), written in the D programming language, for working with SAM, BAM and CRAM formats.",
                "homepage": "http://www.open-bio.org/wiki/Sambamba"
            }
        ],
        "inputs": [
            "ch_bam_for_dedup"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_dedup_bam_for_index",
            "ch_dedup_bam_for_samtools_fastq"
        ],
        "nb_outputs": 2,
        "name_workflow": "czbiohub__nf-predictorthologs",
        "directive": [
            "tag \"${prefix}\"",
            "label \"process_high\"",
            "publishDir \"${params.outdir}/sambamba_dedup\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "sambamba_index": {
        "name_process": "sambamba_index",
        "string_process": " process sambamba_index {\n        tag \"${bam_name}\"\n        label \"process_medium\"\n        publishDir \"${params.outdir}/sambamba_index\", mode: 'copy'\n\n        input:\n        set val(bam_name), file(bam_dedup) from ch_dedup_bam_for_index\n\n        output:\n        file(bai_dedup) into ch_dedup_bai\n\n        script:\n        bai_dedup = \"${bam_name}.bai\"\n        \"\"\"\n        sambamba index  --nthreads $task.cpus ${bam_dedup} ${bai_dedup}\n        \"\"\"\n    }",
        "nb_lignes_process": 15,
        "string_script": "        bai_dedup = \"${bam_name}.bai\"\n        \"\"\"\n        sambamba index  --nthreads $task.cpus ${bam_dedup} ${bai_dedup}\n        \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "Sambamba"
        ],
        "tools_url": [
            "https://bio.tools/sambamba"
        ],
        "tools_dico": [
            {
                "name": "Sambamba",
                "uri": "https://bio.tools/sambamba",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This tool is a high performance modern robust and fast tool (and library), written in the D programming language, for working with SAM, BAM and CRAM formats.",
                "homepage": "http://www.open-bio.org/wiki/Sambamba"
            }
        ],
        "inputs": [
            "ch_dedup_bam_for_index"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_dedup_bai"
        ],
        "nb_outputs": 1,
        "name_workflow": "czbiohub__nf-predictorthologs",
        "directive": [
            "tag \"${bam_name}\"",
            "label \"process_medium\"",
            "publishDir \"${params.outdir}/sambamba_index\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "samtools_fastq_no_intersect": {
        "name_process": "samtools_fastq_no_intersect",
        "string_process": " process samtools_fastq_no_intersect {\n    tag \"$bam_name\"\n    label \"process_low\"\n    publishDir \"${params.outdir}/intersect_fastqs\", mode: 'copy'\n\n    input:\n    set val(bam_name), file(bam_dedup) from ch_dedup_bam_for_samtools_fastq\n\n    output:\n    set val(bam_name), file(fastq) into ch_intersected\n\n    script:\n    fastq = \"${bam_name}.fastq.gz\"\n    \"\"\"\n      samtools fastq -N ${bam_dedup} \\\\\n      | gzip -c > ${fastq}\n    \"\"\"\n    }",
        "nb_lignes_process": 16,
        "string_script": "    fastq = \"${bam_name}.fastq.gz\"\n    \"\"\"\n      samtools fastq -N ${bam_dedup} \\\\\n      | gzip -c > ${fastq}\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "FastQC",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/fastqc",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "ch_dedup_bam_for_samtools_fastq"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_intersected"
        ],
        "nb_outputs": 1,
        "name_workflow": "czbiohub__nf-predictorthologs",
        "directive": [
            "tag \"$bam_name\"",
            "label \"process_low\"",
            "publishDir \"${params.outdir}/intersect_fastqs\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "samtools_view_fastq": {
        "name_process": "samtools_view_fastq",
        "string_process": " process samtools_view_fastq {\n    tag \"$interval_name\"\n    label \"process_low\"\n    publishDir \"${params.outdir}/intersect_fastqs\", mode: 'copy'\n\n    input:\n    set val(interval_name), val(chrom), val(chromStart), val(chromEnd), file(bam), file(bai) from ch_bed_bam_bai\n\n    output:\n    set val(interval_name), file(fastq) into ch_intersected\n\n    script:\n    fastq = \"${interval_name}.fastq.gz\"\n    \"\"\"\n    samtools view -hu $bam '${chrom}:${chromStart}-${chromEnd}' \\\\\n      | samtools fastq -N - \\\\\n      | gzip -c > ${fastq}\n    \"\"\"\n    }",
        "nb_lignes_process": 17,
        "string_script": "    fastq = \"${interval_name}.fastq.gz\"\n    \"\"\"\n    samtools view -hu $bam '${chrom}:${chromStart}-${chromEnd}' \\\\\n      | samtools fastq -N - \\\\\n      | gzip -c > ${fastq}\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "FastQC",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/fastqc",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "ch_bed_bam_bai"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_intersected"
        ],
        "nb_outputs": 1,
        "name_workflow": "czbiohub__nf-predictorthologs",
        "directive": [
            "tag \"$interval_name\"",
            "label \"process_low\"",
            "publishDir \"${params.outdir}/intersect_fastqs\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "fastqc": {
        "name_process": "fastqc",
        "string_process": " process fastqc {\n      tag \"$name\"\n      label 'process_medium'\n      publishDir \"${params.outdir}/fastqc\", mode: 'copy',\n          saveAs: { filename ->\n                        filename.indexOf(\".zip\") > 0 ? \"zips/$filename\" : \"$filename\"\n                  }\n\n      input:\n      set val(name), file(reads) from ch_read_files_fastqc\n\n      output:\n      file \"*_fastqc.{zip,html}\" into ch_fastqc_results\n\n      script:\n      \"\"\"\n      fastqc --quiet --threads $task.cpus $reads\n      \"\"\"\n  }",
        "nb_lignes_process": 17,
        "string_script": "      \"\"\"\n      fastqc --quiet --threads $task.cpus $reads\n      \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "ch_read_files_fastqc"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_fastqc_results"
        ],
        "nb_outputs": 1,
        "name_workflow": "czbiohub__nf-predictorthologs",
        "directive": [
            "tag \"$name\"",
            "label 'process_medium'",
            "publishDir \"${params.outdir}/fastqc\", mode: 'copy' , saveAs: { filename -> filename.indexOf(\".zip\") > 0 ? \"zips/$filename\" : \"$filename\" }"
        ],
        "when": "",
        "stub": ""
    },
    "fastp": {
        "name_process": "fastp",
        "string_process": " process fastp {\n      label 'process_low'\n      tag \"$name\"\n      publishDir \"${params.outdir}/fastp\", mode: 'copy',\n        saveAs: {filename ->\n                    if (filename.indexOf(\".fastq.gz\") == -1) \"logs/$filename\"\n                    else if (reads[1] == null) \"single_end/$filename\"\n                    else if (reads[1] != null) \"paired_end/$filename\"\n                    else null\n                }\n\n      input:\n      set val(name), file(reads) from ch_read_files_trimming\n\n      output:\n      set val(name), file(\"*trimmed.fastq.gz\") into ch_reads_trimmed\n      file \"*fastp.json\" into ch_fastp_results\n      file \"*fastp.html\" into ch_fastp_html\n\n      script:\n                                        \n      if (reads[1] == null) {\n          \"\"\"\n          fastp \\\\\n              --low_complexity_filter \\\\\n              --trim_poly_x \\\\\n              --in1 ${reads} \\\\\n              --out1 ${name}_R1_trimmed.fastq.gz \\\\\n              --json ${name}_fastp.json \\\\\n              --html ${name}_fastp.html\n          \"\"\"\n      } else if (reads[1] != null ){\n                                                    \n          \"\"\"\n          fastp \\\\\n              --low_complexity_filter \\\\\n              --trim_poly_x \\\\\n              --in1 ${reads[0]} \\\\\n              --in2 ${reads[1]} \\\\\n              --out1 ${name}_R1_trimmed.fastq.gz \\\\\n              --out2 ${name}_R2_trimmed.fastq.gz \\\\\n              --json ${name}_fastp.json \\\\\n              --html ${name}_fastp.html\n          \"\"\"\n      } else {\n        \"\"\"\n        echo name ${name}\n        echo reads: ${reads}\n        echo \"Number of reads is not equal to 1 or 2 --> don't know how to trim non-paired-end and non-single-end reads\"\n        \"\"\"\n      }\n  }",
        "nb_lignes_process": 50,
        "string_script": "      if (reads[1] == null) {\n          \"\"\"\n          fastp \\\\\n              --low_complexity_filter \\\\\n              --trim_poly_x \\\\\n              --in1 ${reads} \\\\\n              --out1 ${name}_R1_trimmed.fastq.gz \\\\\n              --json ${name}_fastp.json \\\\\n              --html ${name}_fastp.html\n          \"\"\"\n      } else if (reads[1] != null ){\n                                                    \n          \"\"\"\n          fastp \\\\\n              --low_complexity_filter \\\\\n              --trim_poly_x \\\\\n              --in1 ${reads[0]} \\\\\n              --in2 ${reads[1]} \\\\\n              --out1 ${name}_R1_trimmed.fastq.gz \\\\\n              --out2 ${name}_R2_trimmed.fastq.gz \\\\\n              --json ${name}_fastp.json \\\\\n              --html ${name}_fastp.html\n          \"\"\"\n      } else {\n        \"\"\"\n        echo name ${name}\n        echo reads: ${reads}\n        echo \"Number of reads is not equal to 1 or 2 --> don't know how to trim non-paired-end and non-single-end reads\"\n        \"\"\"\n      }",
        "nb_lignes_script": 29,
        "language_script": "bash",
        "tools": [
            "fastPHASE"
        ],
        "tools_url": [
            "https://bio.tools/fastphase"
        ],
        "tools_dico": [
            {
                "name": "fastPHASE",
                "uri": "https://bio.tools/fastphase",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3056",
                            "term": "Population genetics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3454",
                                    "term": "Phasing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Imputation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3557",
                                    "term": "Data imputation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "fastPHASE is a program to estimate missing genotypes and unobserved haplotypes. It is an implementation of the model described in Scheet & Stephens (2006). This is a cluster-based model for haplotype variation, and gains its utility from implicitly modeling the genealogy of chromosomes in a random sample from a population as a tree but summarizing all haplotype variation in the \"tips\" of the trees.",
                "homepage": "http://scheet.org/software.html"
            }
        ],
        "inputs": [
            "ch_read_files_trimming"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_reads_trimmed",
            "ch_fastp_results",
            "ch_fastp_html"
        ],
        "nb_outputs": 3,
        "name_workflow": "czbiohub__nf-predictorthologs",
        "directive": [
            "label 'process_low'",
            "tag \"$name\"",
            "publishDir \"${params.outdir}/fastp\", mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\".fastq.gz\") == -1) \"logs/$filename\" else if (reads[1] == null) \"single_end/$filename\" else if (reads[1] != null) \"paired_end/$filename\" else null }"
        ],
        "when": "",
        "stub": ""
    },
    "make_protein_index": {
        "name_process": "make_protein_index",
        "string_process": " process make_protein_index {\n    tag \"${peptides}__${bloom_id}\"\n    label \"process_low\"\n\n    publishDir \"${params.outdir}/sencha/\", mode: 'copy'\n\n    input:\n    file(peptides) from ch_proteome_translate_fasta.collect()\n    set val(molecule), val(ksize) from ch_translate_molecule_ksize\n\n    output:\n    set val(bloom_id), val(molecule),  val(ksize), file(\"${peptides.simpleName}__${bloom_id}.bloomfilter\") into ch_sencha_bloom_filters\n\n    script:\n    bloom_id = \"molecule-${molecule}_ksize-${ksize}\"\n    \"\"\"\n    sencha index \\\\\n      --tablesize ${tablesize} \\\\\n      --molecule ${molecule} \\\\\n      --peptide-ksize ${ksize} \\\\\n      --save-as ${peptides.simpleName}__${bloom_id}.bloomfilter \\\\\n      ${peptides}\n    \"\"\"\n  }",
        "nb_lignes_process": 22,
        "string_script": "    bloom_id = \"molecule-${molecule}_ksize-${ksize}\"\n    \"\"\"\n    sencha index \\\\\n      --tablesize ${tablesize} \\\\\n      --molecule ${molecule} \\\\\n      --peptide-ksize ${ksize} \\\\\n      --save-as ${peptides.simpleName}__${bloom_id}.bloomfilter \\\\\n      ${peptides}\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_proteome_translate_fasta",
            "ch_translate_molecule_ksize"
        ],
        "nb_inputs": 2,
        "outputs": [
            "ch_sencha_bloom_filters"
        ],
        "nb_outputs": 1,
        "name_workflow": "czbiohub__nf-predictorthologs",
        "directive": [
            "tag \"${peptides}__${bloom_id}\"",
            "label \"process_low\"",
            "publishDir \"${params.outdir}/sencha/\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "translate": {
        "name_process": "translate",
        "string_process": " process translate {\n    tag \"${sample_sketch_id}\"\n    label \"process_low\"\n    label \"process_long\"\n    publishDir \"${params.outdir}/translate/${bloom_id}\", mode: 'copy',\n      saveAs: {\n          filename ->\n              if (save_translate_csv && filename.indexOf(\".csv\") > 0) \"$filename\"\n              else if (save_translate_json && filename.indexOf(\".json\") > 0) \"$filename\"\n              else \"$filename\"\n          }\n\n    input:\n    tuple \\\n        val(bloom_id), val(alphabet), val(ksize), file(bloom_filter),  \\\n        val(sample_id), file(reads) \\\n        from ch_sencha_bloom_filters_grouptuple\n\n    output:\n                                                                                                            \n    set val(sample_sketch_id), file(noncoding_nucleotides) into ch_noncoding_nucleotides_potentially_empty\n                                                                                                                  \n    set val(false), val(sample_sketch_id), file(peptides_fasta) into ch_translated_proteins_potentially_empty\n    set val(sample_sketch_id), file(coding_nucleotides) into ch_coding_nucleotides\n    set val(sample_sketch_id), file(coding_scores) into ch_coding_scores_csv\n    set val(sample_sketch_id), file(summary_json) into ch_coding_scores_json\n\n    script:\n    sample_sketch_id = \"${sample_id}__${bloom_id}\"\n    noncoding_nucleotides = \"${sample_sketch_id}__noncoding_reads_nucleotides.fasta\"\n    coding_nucleotides = \"${sample_sketch_id}__coding_reads_nucleotides.fasta\"\n    peptides_fasta = \"${sample_sketch_id}__coding_reads_peptides.fasta\"\n    coding_scores = \"${sample_sketch_id}__coding_scores.csv\"\n    summary_json = \"${sample_sketch_id}__coding_summary.json\"\n    \"\"\"\n    sencha translate \\\\\n      --molecule ${alphabet} \\\\\n      --peptide-ksize ${ksize} \\\\\n      --jaccard-threshold ${jaccard_threshold} \\\\\n      --noncoding-nucleotide-fasta ${noncoding_nucleotides} \\\\\n      --coding-nucleotide-fasta ${coding_nucleotides} \\\\\n      --csv ${coding_scores} \\\\\n      --json-summary ${summary_json} \\\\\n      --peptides-are-bloom-filter \\\\\n      ${bloom_filter} \\\\\n      ${reads} > ${peptides_fasta}\n    \"\"\"\n  }",
        "nb_lignes_process": 46,
        "string_script": "    sample_sketch_id = \"${sample_id}__${bloom_id}\"\n    noncoding_nucleotides = \"${sample_sketch_id}__noncoding_reads_nucleotides.fasta\"\n    coding_nucleotides = \"${sample_sketch_id}__coding_reads_nucleotides.fasta\"\n    peptides_fasta = \"${sample_sketch_id}__coding_reads_peptides.fasta\"\n    coding_scores = \"${sample_sketch_id}__coding_scores.csv\"\n    summary_json = \"${sample_sketch_id}__coding_summary.json\"\n    \"\"\"\n    sencha translate \\\\\n      --molecule ${alphabet} \\\\\n      --peptide-ksize ${ksize} \\\\\n      --jaccard-threshold ${jaccard_threshold} \\\\\n      --noncoding-nucleotide-fasta ${noncoding_nucleotides} \\\\\n      --coding-nucleotide-fasta ${coding_nucleotides} \\\\\n      --csv ${coding_scores} \\\\\n      --json-summary ${summary_json} \\\\\n      --peptides-are-bloom-filter \\\\\n      ${bloom_filter} \\\\\n      ${reads} > ${peptides_fasta}\n    \"\"\"",
        "nb_lignes_script": 18,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bloom_id",
            "alphabet",
            "ksize",
            "bloom_filter",
            "ch_sencha_bloom_filters_grouptuple"
        ],
        "nb_inputs": 5,
        "outputs": [
            "ch_noncoding_nucleotides_potentially_empty",
            "ch_translated_proteins_potentially_empty",
            "ch_coding_nucleotides",
            "ch_coding_scores_csv",
            "ch_coding_scores_json"
        ],
        "nb_outputs": 5,
        "name_workflow": "czbiohub__nf-predictorthologs",
        "directive": [
            "tag \"${sample_sketch_id}\"",
            "label \"process_low\"",
            "label \"process_long\"",
            "publishDir \"${params.outdir}/translate/${bloom_id}\", mode: 'copy' , saveAs: { filename -> if (save_translate_csv && filename.indexOf(\".csv\") > 0) \"$filename\" else if (save_translate_json && filename.indexOf(\".json\") > 0) \"$filename\" else \"$filename\" }"
        ],
        "when": "",
        "stub": ""
    },
    "diff_hash": {
        "name_process": "diff_hash",
        "string_process": " process diff_hash {\n    tag \"${group_cleaned}\"\n    label \"process_medium\"\n\n    publishDir \"${params.outdir}/diff_hash/${group}\", mode: 'copy'\n\n    input:\n    set val(group), file(all_signatures) from ch_groups_with_all_signatures_for_diff_hash\n    file metadata from ch_csv.collect()\n\n    output:\n    file(\"${group_cleaned}.log\")\n    file(\"*__hash_coefficients.csv\")\n    set val(group), file(\"*__informative_hashes.txt\") into ch_informative_hashes_files\n\n    script:\n    group_cleaned = groupCleaner(group)\n    abundance_flag = diff_hash_with_abundance ? '--with-abundance' : ''\n    \"\"\"\n    differential_hash_expression.py \\\\\n        --ksize ${sourmash_ksize} \\\\\n        --input-is-protein \\\\\n        --n-jobs ${task.cpus} \\\\\n        --group1 '${group}' \\\\\n        --${sourmash_molecule} \\\\\n        --no-dna \\\\\n        --metadata-csv ${metadata} \\\\\n        --use-sig-basename \\\\\n        --penalty ${diff_hash_penalty} \\\\\n        --solver ${diff_hash_solver} \\\\\n        --max-group-size 100 \\\\\n        ${abundance_flag} \\\\\n        --inverse-regularization-strength ${diff_hash_inverse_regularization_strength} \\\\\n        > '${group_cleaned}.log'\n    \"\"\"\n  }",
        "nb_lignes_process": 34,
        "string_script": "    group_cleaned = groupCleaner(group)\n    abundance_flag = diff_hash_with_abundance ? '--with-abundance' : ''\n    \"\"\"\n    differential_hash_expression.py \\\\\n        --ksize ${sourmash_ksize} \\\\\n        --input-is-protein \\\\\n        --n-jobs ${task.cpus} \\\\\n        --group1 '${group}' \\\\\n        --${sourmash_molecule} \\\\\n        --no-dna \\\\\n        --metadata-csv ${metadata} \\\\\n        --use-sig-basename \\\\\n        --penalty ${diff_hash_penalty} \\\\\n        --solver ${diff_hash_solver} \\\\\n        --max-group-size 100 \\\\\n        ${abundance_flag} \\\\\n        --inverse-regularization-strength ${diff_hash_inverse_regularization_strength} \\\\\n        > '${group_cleaned}.log'\n    \"\"\"",
        "nb_lignes_script": 18,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_groups_with_all_signatures_for_diff_hash",
            "ch_csv"
        ],
        "nb_inputs": 2,
        "outputs": [
            "ch_informative_hashes_files"
        ],
        "nb_outputs": 1,
        "name_workflow": "czbiohub__nf-predictorthologs",
        "directive": [
            "tag \"${group_cleaned}\"",
            "label \"process_medium\"",
            "publishDir \"${params.outdir}/diff_hash/${group}\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "sigs_with_hash": {
        "name_process": "sigs_with_hash",
        "string_process": " process sigs_with_hash {\n    tag \"${hash_id}\"\n    label \"process_low\"\n\n    publishDir \"${params.outdir}/diff_hash/sigs_with_hash\", mode: 'copy'\n\n    input:\n    val(hash) from ch_informative_hashes_flattened\n    file(sigs) from ch_all_signatures_flattened_for_finding_matches\n\n    output:\n    file(\"*__matches.txt\")\n\n    script:\n    hash_cleaned = hashCleaner(hash)\n    hash_id = \"hash-${hash_cleaned}\"\n    matches = \"${hash_id}__matches.txt\"\n    \"\"\"\n    rg --threads ${task.cpus} --files-with-matches ${hash_cleaned} ${sigs} \\\\\n      > ${matches}\n    \"\"\"\n  }",
        "nb_lignes_process": 20,
        "string_script": "    hash_cleaned = hashCleaner(hash)\n    hash_id = \"hash-${hash_cleaned}\"\n    matches = \"${hash_id}__matches.txt\"\n    \"\"\"\n    rg --threads ${task.cpus} --files-with-matches ${hash_cleaned} ${sigs} \\\\\n      > ${matches}\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "org"
        ],
        "tools_url": [
            "https://bio.tools/org"
        ],
        "tools_dico": [
            {
                "name": "org",
                "uri": "https://bio.tools/org",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2229",
                            "term": "Cell biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0602",
                            "term": "Molecular interactions, pathways and networks"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype resources"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3659",
                                    "term": "Regression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3463",
                                    "term": "Expression correlation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "Gene-set enrichment analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3463",
                                    "term": "Co-expression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "GSEA"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "Functional enrichment analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "Gene-set over-represenation analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Genome-wide mutation profiling and related risk signature for prognosis of papillary renal cell carcinoma.\n\nBackground:The papillary renal cell carcinoma (pRCC) is a rare subtype of renal cell carcinoma with limited investigation. Our study aimed to explore a robust signature to predict the prognosis of pRCC from the perspective of mutation profiles. Methods:In this study, we downloaded the simple nucleotide variation data of 288 pRCC samples from The Cancer Genome Atlas (TCGA) database. \"GenVisR\" package was utilized to visualize gene mutation profiles in pRCC. The PPI network was conducted based on the STRING database and the modification was performed via Cytoscape software (Version 3.7.1). Top 50 mutant genes were selected and Cox regression method was conducted to identify the hub prognostic mutant signature in pRCC using \"survival\" package.\n\n||| HOMEPAGE BROKEN!.\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'pRCC', 'GenVisR' (bio.tools/genvisr)",
                "homepage": "http://org.Hs.eg.db"
            }
        ],
        "inputs": [
            "ch_informative_hashes_flattened",
            "ch_all_signatures_flattened_for_finding_matches"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "czbiohub__nf-predictorthologs",
        "directive": [
            "tag \"${hash_id}\"",
            "label \"process_low\"",
            "publishDir \"${params.outdir}/diff_hash/sigs_with_hash\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "download_refseq": {
        "name_process": "download_refseq",
        "string_process": " process download_refseq {\n    tag \"${refseq_release}\"\n    label \"process_low\"\n\n    publishDir \"${params.outdir}/ncbi_refseq/\", mode: 'copy'\n\n    output:\n                                                                        \n                                                                    \n    file(\"${refseq_release}.fa.gz\") into (ch_diamond_reference_fasta, ch_sourmash_reference_fasta)\n\n    script:\n    \"\"\"\n    rsync \\\\\n          --prune-empty-dirs \\\\\n          --archive \\\\\n          --verbose \\\\\n          --recursive \\\\\n          --include '*protein.faa.gz' \\\\\n          --exclude '/*' \\\\\n          rsync://ftp.ncbi.nlm.nih.gov/refseq/release/${refseq_release}/ .\n    zcat *.protein.faa.gz | gzip -c - > ${refseq_release}.fa.gz\n    \"\"\"\n  }",
        "nb_lignes_process": 22,
        "string_script": "    \"\"\"\n    rsync \\\\\n          --prune-empty-dirs \\\\\n          --archive \\\\\n          --verbose \\\\\n          --recursive \\\\\n          --include '*protein.faa.gz' \\\\\n          --exclude '/*' \\\\\n          rsync://ftp.ncbi.nlm.nih.gov/refseq/release/${refseq_release}/ .\n    zcat *.protein.faa.gz | gzip -c - > ${refseq_release}.fa.gz\n    \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [
            ""
        ],
        "nb_outputs": 1,
        "name_workflow": "czbiohub__nf-predictorthologs",
        "directive": [
            "tag \"${refseq_release}\"",
            "label \"process_low\"",
            "publishDir \"${params.outdir}/ncbi_refseq/\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "hash2kmer": {
        "name_process": "hash2kmer",
        "string_process": " process hash2kmer {\n    tag \"${hash_cleaned}\"\n    label \"process_low\"\n\n    publishDir \"${params.outdir}/hash2kmer/${hash_id}\", mode: 'copy'\n\n    input:\n    tuple val(hash), file(peptide_fastas) from ch_hashes_with_fastas_for_hash2kmer\n\n    output:\n    file(kmers)\n    set val(hash), file(sequences) into ch_seqs_from_hash2kmer, ch_seqs_from_hash2kmer_to_print, ch_seqs_from_hash2kmer_for_bam_of_hashes\n    set val(hash), val(hash_id), file(sequences) into ch_seqs_with_hashes_for_filter_unaligned_reads, ch_seqs_with_hashes_for_bam_of_hashes\n\n    script:\n    hash_cleaned = hashCleaner(hash)\n    hash_id = \"hash-${hash_cleaned}\"\n    kmers = \"${hash_id}__kmer.txt\"\n    sequences = \"${hash_id}__sequences.fasta\"\n    first_flag = params.do_featurecounts_orthology ? '' : '--first'\n    \"\"\"\n    echo ${hash_cleaned} >> hash.txt\n    hash2kmer.py \\\\\n        --ksize ${sourmash_ksize} \\\\\n        --no-dna \\\\\n        --input-is-protein \\\\\n        --output-sequences ${sequences} \\\\\n        --output-kmers ${kmers} \\\\\n        --${sourmash_molecule} \\\\\n        ${first_flag} \\\\\n        hash.txt \\\\\n        ${peptide_fastas}\n    \"\"\"\n  }",
        "nb_lignes_process": 32,
        "string_script": "    hash_cleaned = hashCleaner(hash)\n    hash_id = \"hash-${hash_cleaned}\"\n    kmers = \"${hash_id}__kmer.txt\"\n    sequences = \"${hash_id}__sequences.fasta\"\n    first_flag = params.do_featurecounts_orthology ? '' : '--first'\n    \"\"\"\n    echo ${hash_cleaned} >> hash.txt\n    hash2kmer.py \\\\\n        --ksize ${sourmash_ksize} \\\\\n        --no-dna \\\\\n        --input-is-protein \\\\\n        --output-sequences ${sequences} \\\\\n        --output-kmers ${kmers} \\\\\n        --${sourmash_molecule} \\\\\n        ${first_flag} \\\\\n        hash.txt \\\\\n        ${peptide_fastas}\n    \"\"\"",
        "nb_lignes_script": 17,
        "language_script": "bash",
        "tools": [
            "KmerStream",
            "trimsequences"
        ],
        "tools_url": [
            "https://bio.tools/kmerstream",
            "https://bio.tools/trimsequences"
        ],
        "tools_dico": [
            {
                "name": "KmerStream",
                "uri": "https://bio.tools/kmerstream",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2269",
                            "term": "Statistics and probability"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Streaming algorithm for estimating the number of distinct k-mers present in high throughput sequencing data.",
                "homepage": "https://github.com/pmelsted/KmerStream"
            },
            {
                "name": "trimsequences",
                "uri": "https://bio.tools/trimsequences",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Sequence trimming"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Trimming"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            }
                        ]
                    }
                ],
                "description": "Remove the 5' and/or 3' adaptors of a list of reads.",
                "homepage": "https://urgi.versailles.inra.fr/Tools/REPET"
            }
        ],
        "inputs": [
            "ch_hashes_with_fastas_for_hash2kmer"
        ],
        "nb_inputs": 1,
        "outputs": [
            "kmers",
            "ch_seqs_from_hash2kmer",
            "ch_seqs_from_hash2kmer_to_print",
            "ch_seqs_from_hash2kmer_for_bam_of_hashes",
            "ch_seqs_with_hashes_for_filter_unaligned_reads",
            "ch_seqs_with_hashes_for_bam_of_hashes"
        ],
        "nb_outputs": 6,
        "name_workflow": "czbiohub__nf-predictorthologs",
        "directive": [
            "tag \"${hash_cleaned}\"",
            "label \"process_low\"",
            "publishDir \"${params.outdir}/hash2kmer/${hash_id}\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "diamond_prepare_taxa": {
        "name_process": "diamond_prepare_taxa",
        "string_process": " process diamond_prepare_taxa {\n      tag \"${taxondmp_zip.baseName}\"\n      label \"process_low\"\n\n      publishDir \"${params.outdir}/ncbi_refseq/\", mode: 'copy'\n\n      input:\n      file(taxondmp_zip) from ch_diamond_taxdmp_zip\n\n      output:\n      file(\"nodes.dmp\") into ch_diamond_taxonnodes\n      file(\"names.dmp\") into ch_diamond_taxonnames\n\n      script:\n      \"\"\"\n      7z x ${taxondmp_zip}\n      \"\"\"\n    }",
        "nb_lignes_process": 16,
        "string_script": "      \"\"\"\n      7z x ${taxondmp_zip}\n      \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_diamond_taxdmp_zip"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_diamond_taxonnodes",
            "ch_diamond_taxonnames"
        ],
        "nb_outputs": 2,
        "name_workflow": "czbiohub__nf-predictorthologs",
        "directive": [
            "tag \"${taxondmp_zip.baseName}\"",
            "label \"process_low\"",
            "publishDir \"${params.outdir}/ncbi_refseq/\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "diamond_makedb": {
        "name_process": "diamond_makedb",
        "string_process": " process diamond_makedb {\n     tag \"${reference_proteome.baseName}\"\n     label \"process_medium\"\n     publishDir path: { params.save_reference ? \"${params.outdir}/reference/diamond/\" : params.outdir },\n                saveAs: { params.save_reference ? it : null }, mode: \"${params.publish_dir_mode}\"\n\n     input:\n     file(reference_proteome) from ch_diamond_reference_fasta.collect()\n     file(taxonnodes) from ch_diamond_taxonnodes.collect()\n     file(taxonnames) from ch_diamond_taxonnames.collect()\n     file(taxonmap_gz) from ch_diamond_taxonmap_gz.collect()\n\n     output:\n     file(\"${reference_proteome.simpleName}_db.dmnd\") into ch_diamond_db\n\n     script:\n     \"\"\"\n     diamond makedb \\\\\n         --threads ${task.cpus} \\\\\n         -d ${reference_proteome.simpleName}_db \\\\\n         --taxonmap ${taxonmap_gz} \\\\\n         --taxonnodes ${taxonnodes} \\\\\n         --taxonnames ${taxonnames} \\\\\n         --in ${reference_proteome}\n     \"\"\"\n   }",
        "nb_lignes_process": 24,
        "string_script": "     \"\"\"\n     diamond makedb \\\\\n         --threads ${task.cpus} \\\\\n         -d ${reference_proteome.simpleName}_db \\\\\n         --taxonmap ${taxonmap_gz} \\\\\n         --taxonnodes ${taxonnodes} \\\\\n         --taxonnames ${taxonnames} \\\\\n         --in ${reference_proteome}\n     \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "Diamond"
        ],
        "tools_url": [
            "https://bio.tools/diamond"
        ],
        "tools_dico": [
            {
                "name": "Diamond",
                "uri": "https://bio.tools/diamond",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Proteins"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0258",
                                    "term": "Sequence alignment analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Sequence aligner for protein and translated DNA searches and functions as a drop-in replacement for the NCBI BLAST software tools. It is suitable for protein-protein search as well as DNA-protein search on short reads and longer sequences including contigs and assemblies, providing a speedup of BLAST ranging up to x20,000.",
                "homepage": "https://github.com/bbuchfink/diamond"
            }
        ],
        "inputs": [
            "ch_diamond_reference_fasta",
            "ch_diamond_taxonnodes",
            "ch_diamond_taxonnames",
            "ch_diamond_taxonmap_gz"
        ],
        "nb_inputs": 4,
        "outputs": [
            "ch_diamond_db"
        ],
        "nb_outputs": 1,
        "name_workflow": "czbiohub__nf-predictorthologs",
        "directive": [
            "tag \"${reference_proteome.baseName}\"",
            "label \"process_medium\"",
            "publishDir path: { params.save_reference ? \"${params.outdir}/reference/diamond/\" : params.outdir } , saveAs: { params.save_reference ? it : null }, mode: \"${params.publish_dir_mode}\""
        ],
        "when": "",
        "stub": ""
    },
    "diamond_blastp": {
        "name_process": "diamond_blastp",
        "string_process": " process diamond_blastp {\n    tag \"${group}\"\n    label \"process_low\"\n\n    publishDir \"${params.outdir}/blastp/${subdir}\", mode: 'copy'\n\n    input:\n                                     \n                                                         \n                                               \n                                                                           \n                                                        \n    file(diamond_db) from ch_diamond_db.collect()\n    set val(hash), val(group), file(coding_peptides) from ch_protein_seq_for_diamond\n\n    output:\n    file(tsv) into ch_diamond_blastp_output\n\n    script:\n    group_cleaned = groupCleaner(group)\n    if (hash) {\n      hash_cleaned = hashCleaner(hash)\n      sample_id = \"${group_cleaned}__hash-${hash_cleaned}\"\n      subdir = \"${group_cleaned}\"\n    }\n    else {\n      sample_id = \"${group_cleaned}\"\n      subdir = \"\"\n    }\n    tsv = \"${sample_id}__diamond__${diamond_db.simpleName}.tsv\"\n    output_format = \"--outfmt 6 qseqid sseqid pident evalue bitscore stitle staxids sscinames sskingdoms sphylums\"\n    \"\"\"\n    diamond blastp \\\\\n        ${output_format} \\\\\n        --threads ${task.cpus} \\\\\n        --max-target-seqs 3 \\\\\n        --db ${diamond_db} \\\\\n        --evalue 0.00001  \\\\\n        --query ${coding_peptides} \\\\\n        > ${tsv}\n    \"\"\"\n  }",
        "nb_lignes_process": 40,
        "string_script": "    group_cleaned = groupCleaner(group)\n    if (hash) {\n      hash_cleaned = hashCleaner(hash)\n      sample_id = \"${group_cleaned}__hash-${hash_cleaned}\"\n      subdir = \"${group_cleaned}\"\n    }\n    else {\n      sample_id = \"${group_cleaned}\"\n      subdir = \"\"\n    }\n    tsv = \"${sample_id}__diamond__${diamond_db.simpleName}.tsv\"\n    output_format = \"--outfmt 6 qseqid sseqid pident evalue bitscore stitle staxids sscinames sskingdoms sphylums\"\n    \"\"\"\n    diamond blastp \\\\\n        ${output_format} \\\\\n        --threads ${task.cpus} \\\\\n        --max-target-seqs 3 \\\\\n        --db ${diamond_db} \\\\\n        --evalue 0.00001  \\\\\n        --query ${coding_peptides} \\\\\n        > ${tsv}\n    \"\"\"",
        "nb_lignes_script": 21,
        "language_script": "bash",
        "tools": [
            "tsvr",
            "Diamond"
        ],
        "tools_url": [
            "https://bio.tools/tsvr",
            "https://bio.tools/diamond"
        ],
        "tools_dico": [
            {
                "name": "tsvr",
                "uri": "https://bio.tools/tsvr",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3810",
                            "term": "Agricultural science"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0610",
                            "term": "Ecology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant biology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant science"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plants"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Botany"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A new variance ratio metric to detect the timescale of compensatory dynamics | Abstract Understanding the mechanisms governing ecological stability why a property such as primary productivity is stable in some communities and variable in others has long been a focus of ecology. Compensatory dynamics, in which anti-synchronous fluctuations between populations buffer against fluctuations at the community level, is a key theoretical mechanism of stability. Classically, compensatory dynamics have been quantified using a \u201cvariance ratio\u201d approach that compares the ratio between community variance and aggregate population variance, such that a lower ratio indicates compensation and a higher ratio indicates synchrony among species fluctuations",
                "homepage": "https://github.com/reumandc/tsvr"
            },
            {
                "name": "Diamond",
                "uri": "https://bio.tools/diamond",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Proteins"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0258",
                                    "term": "Sequence alignment analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Sequence aligner for protein and translated DNA searches and functions as a drop-in replacement for the NCBI BLAST software tools. It is suitable for protein-protein search as well as DNA-protein search on short reads and longer sequences including contigs and assemblies, providing a speedup of BLAST ranging up to x20,000.",
                "homepage": "https://github.com/bbuchfink/diamond"
            }
        ],
        "inputs": [
            "ch_diamond_db",
            "ch_protein_seq_for_diamond"
        ],
        "nb_inputs": 2,
        "outputs": [
            "ch_diamond_blastp_output"
        ],
        "nb_outputs": 1,
        "name_workflow": "czbiohub__nf-predictorthologs",
        "directive": [
            "tag \"${group}\"",
            "label \"process_low\"",
            "publishDir \"${params.outdir}/blastp/${subdir}\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "hash2sig": {
        "name_process": "hash2sig",
        "string_process": " process hash2sig {\n      tag \"${hash_id}\"\n      label \"process_low\"\n\n      publishDir \"${params.outdir}/hash2sig/\", mode: 'copy'\n\n      input:\n      val(hash) from ch_hashes_for_hash2sig\n\n      output:\n      set val(hash), val(hash_id), file(\"${sig}\") into ch_hash_sigs_from_hash2sig_to_print, ch_hash_sigs_from_hash2sig_to_join\n\n      script:\n      hash_cleaned = hashCleaner(hash)\n      hash_id = \"hash-${hash_cleaned}\"\n      sig = \"${hash_id}.sig\"\n      \"\"\"\n      echo ${hash_cleaned} >> hash.txt\n      hash2sig.py \\\\\n          --ksize ${sourmash_ksize} \\\\\n          --no-dna \\\\\n          --scaled 1 \\\\\n          --input-is-protein \\\\\n          --${sourmash_molecule} \\\\\n          --output ${sig} \\\\\n          hash.txt\n      \"\"\"\n    }",
        "nb_lignes_process": 26,
        "string_script": "      hash_cleaned = hashCleaner(hash)\n      hash_id = \"hash-${hash_cleaned}\"\n      sig = \"${hash_id}.sig\"\n      \"\"\"\n      echo ${hash_cleaned} >> hash.txt\n      hash2sig.py \\\\\n          --ksize ${sourmash_ksize} \\\\\n          --no-dna \\\\\n          --scaled 1 \\\\\n          --input-is-protein \\\\\n          --${sourmash_molecule} \\\\\n          --output ${sig} \\\\\n          hash.txt\n      \"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [
            "sigQC"
        ],
        "tools_url": [
            "https://bio.tools/sigQC"
        ],
        "tools_dico": [
            {
                "name": "sigQC",
                "uri": "https://bio.tools/sigQC",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0634",
                            "term": "Pathology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Cancer biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "https://en.wikipedia.org/wiki/Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0634",
                            "term": "Disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0634",
                            "term": "https://en.wikipedia.org/wiki/Pathology"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3463",
                                    "term": "Expression correlation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3463",
                                    "term": "Co-expression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "R package enabling a streamlined methodological and standardised approach for the quality control validation of gene signatures on independent data sets.",
                "homepage": "https://cran.r-project.org/package=sigQC"
            }
        ],
        "inputs": [
            "ch_hashes_for_hash2sig"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_hash_sigs_from_hash2sig_to_print",
            "ch_hash_sigs_from_hash2sig_to_join"
        ],
        "nb_outputs": 2,
        "name_workflow": "czbiohub__nf-predictorthologs",
        "directive": [
            "tag \"${hash_id}\"",
            "label \"process_low\"",
            "publishDir \"${params.outdir}/hash2sig/\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "sourmash_db_compute": {
        "name_process": "sourmash_db_compute",
        "string_process": " process sourmash_db_compute {\n   tag \"${sample_id}\"\n   label \"process_low\"\n\n   publishDir \"${params.outdir}/sourmash/compute\", mode: 'copy'\n\n   input:\n   file(reference_proteome) from ch_sourmash_reference_fasta\n\n   output:\n   file(output_log)\n   file(sig) into ch_proteome_sig_for_sourmash_index\n\n   script:\n   sketch_id = \"molecule-${sourmash_molecule}__ksize-${sourmash_ksize}__scaled-1__track_abundance-true\"\n   sample_id = \"${reference_proteome.simpleName}__${sketch_id}\"\n   sig = \"${sample_id}.sig\"\n   output_log = \"${sample_id}.log\"\n   \"\"\"\n   sourmash compute \\\\\n      --ksizes ${sourmash_ksize} \\\\\n      --input-is-protein \\\\\n      --track-abundance \\\\\n      --singleton \\\\\n      --scaled 1 \\\\\n      --no-dna \\\\\n      --${sourmash_molecule} \\\\\n      --output ${sig}\\\\\n      ${reference_proteome} \\\\\n      2> ${output_log}\n   \"\"\"\n }",
        "nb_lignes_process": 30,
        "string_script": "   sketch_id = \"molecule-${sourmash_molecule}__ksize-${sourmash_ksize}__scaled-1__track_abundance-true\"\n   sample_id = \"${reference_proteome.simpleName}__${sketch_id}\"\n   sig = \"${sample_id}.sig\"\n   output_log = \"${sample_id}.log\"\n   \"\"\"\n   sourmash compute \\\\\n      --ksizes ${sourmash_ksize} \\\\\n      --input-is-protein \\\\\n      --track-abundance \\\\\n      --singleton \\\\\n      --scaled 1 \\\\\n      --no-dna \\\\\n      --${sourmash_molecule} \\\\\n      --output ${sig}\\\\\n      ${reference_proteome} \\\\\n      2> ${output_log}\n   \"\"\"",
        "nb_lignes_script": 16,
        "language_script": "bash",
        "tools": [
            "sigQC",
            "sourmash"
        ],
        "tools_url": [
            "https://bio.tools/sigQC",
            "https://bio.tools/sourmash"
        ],
        "tools_dico": [
            {
                "name": "sigQC",
                "uri": "https://bio.tools/sigQC",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0634",
                            "term": "Pathology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "Cancer biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2640",
                            "term": "https://en.wikipedia.org/wiki/Oncology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0634",
                            "term": "Disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0634",
                            "term": "https://en.wikipedia.org/wiki/Pathology"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3463",
                                    "term": "Expression correlation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3463",
                                    "term": "Co-expression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "R package enabling a streamlined methodological and standardised approach for the quality control validation of gene signatures on independent data sets.",
                "homepage": "https://cran.r-project.org/package=sigQC"
            },
            {
                "name": "sourmash",
                "uri": "https://bio.tools/sourmash",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3307",
                            "term": "Computational biology"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0346",
                                    "term": "Sequence similarity search"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0289",
                                    "term": "Sequence distance matrix generation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0289",
                                    "term": "Sequence distance calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0289",
                                    "term": "Phylogenetic distance matrix generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0289",
                                    "term": "Sequence distance matrix construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2975",
                                "term": "Nucleic acid sequence (raw)"
                            }
                        ],
                        "output": []
                    }
                ],
                "description": "Compute and compare MinHash signatures for DNA data sets.",
                "homepage": "https://sourmash.readthedocs.io/en/latest/"
            }
        ],
        "inputs": [
            "ch_sourmash_reference_fasta"
        ],
        "nb_inputs": 1,
        "outputs": [
            "output_log",
            "ch_proteome_sig_for_sourmash_index"
        ],
        "nb_outputs": 2,
        "name_workflow": "czbiohub__nf-predictorthologs",
        "directive": [
            "tag \"${sample_id}\"",
            "label \"process_low\"",
            "publishDir \"${params.outdir}/sourmash/compute\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "sourmash_db_index": {
        "name_process": "sourmash_db_index",
        "string_process": " process sourmash_db_index {\n    tag \"${reference_proteome_sig.baseName}\"\n    label \"process_low\"\n\n    publishDir \"${params.outdir}/sourmash/index\", mode: 'copy'\n\n    input:\n    file(reference_proteome_sig) from ch_proteome_sig_for_sourmash_index.collect()\n\n    output:\n    set file(\".sbt*\"), file(\"*.sbt.json\") into ch_sourmash_index\n\n    script:\n    sketch_id = \"molecule-${sourmash_molecule}__ksize-${sourmash_ksize}__scaled-1__track_abundance-true\"\n    \"\"\"\n    sourmash index \\\\\n        --ksize ${sourmash_ksize} \\\\\n        --${sourmash_molecule} \\\\\n        ${reference_proteome_sig.simpleName} \\\\\n        ${reference_proteome_sig}\n    \"\"\"\n  }",
        "nb_lignes_process": 20,
        "string_script": "    sketch_id = \"molecule-${sourmash_molecule}__ksize-${sourmash_ksize}__scaled-1__track_abundance-true\"\n    \"\"\"\n    sourmash index \\\\\n        --ksize ${sourmash_ksize} \\\\\n        --${sourmash_molecule} \\\\\n        ${reference_proteome_sig.simpleName} \\\\\n        ${reference_proteome_sig}\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "sourmash"
        ],
        "tools_url": [
            "https://bio.tools/sourmash"
        ],
        "tools_dico": [
            {
                "name": "sourmash",
                "uri": "https://bio.tools/sourmash",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3307",
                            "term": "Computational biology"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0346",
                                    "term": "Sequence similarity search"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0289",
                                    "term": "Sequence distance matrix generation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0289",
                                    "term": "Sequence distance calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0289",
                                    "term": "Phylogenetic distance matrix generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0289",
                                    "term": "Sequence distance matrix construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2975",
                                "term": "Nucleic acid sequence (raw)"
                            }
                        ],
                        "output": []
                    }
                ],
                "description": "Compute and compare MinHash signatures for DNA data sets.",
                "homepage": "https://sourmash.readthedocs.io/en/latest/"
            }
        ],
        "inputs": [
            "ch_proteome_sig_for_sourmash_index"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_sourmash_index"
        ],
        "nb_outputs": 1,
        "name_workflow": "czbiohub__nf-predictorthologs",
        "directive": [
            "tag \"${reference_proteome_sig.baseName}\"",
            "label \"process_low\"",
            "publishDir \"${params.outdir}/sourmash/index\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "is_hash_in_unaligned": {
        "name_process": "is_hash_in_unaligned",
        "string_process": " process is_hash_in_unaligned {\n      tag \"${sample_id}\"\n      label \"process_low\"\n\n      publishDir \"${params.outdir}/is_hash_in_unaligned\", mode: 'copy'\n\n      input:\n      set val(group), file(group_unaligned_sigs), val(hash), val(hash_id), file(query_sig) from ch_group_to_hash_sig_with_group_unaligned_sigs\n\n      output:\n      set val(group), val(hash), val(hash_id), file(query_sig), file(matches) into ch_hash_sigs_in_unaligned\n\n      script:\n      group_cleaned = groupCleaner(group)\n      hash_cleaned = hashCleaner(hash)\n      sample_id = \"${group_cleaned}__${hash_id}\"\n      matches = \"${sample_id}__matches.txt\"\n      \"\"\"\n      rg --files-with-matches ${hash_cleaned} ${group_unaligned_sigs} > ${matches}\n      \"\"\"\n    }",
        "nb_lignes_process": 19,
        "string_script": "      group_cleaned = groupCleaner(group)\n      hash_cleaned = hashCleaner(hash)\n      sample_id = \"${group_cleaned}__${hash_id}\"\n      matches = \"${sample_id}__matches.txt\"\n      \"\"\"\n      rg --files-with-matches ${hash_cleaned} ${group_unaligned_sigs} > ${matches}\n      \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "org"
        ],
        "tools_url": [
            "https://bio.tools/org"
        ],
        "tools_dico": [
            {
                "name": "org",
                "uri": "https://bio.tools/org",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2229",
                            "term": "Cell biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0602",
                            "term": "Molecular interactions, pathways and networks"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype resources"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3659",
                                    "term": "Regression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3463",
                                    "term": "Expression correlation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "Gene-set enrichment analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3463",
                                    "term": "Co-expression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "GSEA"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "Functional enrichment analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "Gene-set over-represenation analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Genome-wide mutation profiling and related risk signature for prognosis of papillary renal cell carcinoma.\n\nBackground:The papillary renal cell carcinoma (pRCC) is a rare subtype of renal cell carcinoma with limited investigation. Our study aimed to explore a robust signature to predict the prognosis of pRCC from the perspective of mutation profiles. Methods:In this study, we downloaded the simple nucleotide variation data of 288 pRCC samples from The Cancer Genome Atlas (TCGA) database. \"GenVisR\" package was utilized to visualize gene mutation profiles in pRCC. The PPI network was conducted based on the STRING database and the modification was performed via Cytoscape software (Version 3.7.1). Top 50 mutant genes were selected and Cox regression method was conducted to identify the hub prognostic mutant signature in pRCC using \"survival\" package.\n\n||| HOMEPAGE BROKEN!.\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'pRCC', 'GenVisR' (bio.tools/genvisr)",
                "homepage": "http://org.Hs.eg.db"
            }
        ],
        "inputs": [
            "ch_group_to_hash_sig_with_group_unaligned_sigs"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_hash_sigs_in_unaligned"
        ],
        "nb_outputs": 1,
        "name_workflow": "czbiohub__nf-predictorthologs",
        "directive": [
            "tag \"${sample_id}\"",
            "label \"process_low\"",
            "publishDir \"${params.outdir}/is_hash_in_unaligned\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "sourmash_db_search": {
        "name_process": "sourmash_db_search",
        "string_process": " process sourmash_db_search {\n   tag \"${group_cleaned}\"\n   label \"process_low\"\n\n   publishDir \"${params.outdir}/sourmash/search\", mode: 'copy'\n\n   input:\n   set file(sbt_hidden_files), file(reference_sbt_json) from ch_sourmash_index.collect()\n   set val(group), val(hash), val(hash_id), file(query_sig) from ch_group_hash_sigs_to_query\n\n   output:\n   file(\"${csv_output}\")\n\n   script:\n   group_cleaned = groupCleaner(group)\n   csv_output = \"${group_cleaned}__${hash_id}.csv\"\n   sketch_id = \"molecule-${sourmash_molecule}__ksize-${sourmash_ksize}__scaled-1__track_abundance-true\"\n   \"\"\"\n   sourmash search \\\\\n       --containment \\\\\n       --threshold 1e-100 \\\\\n       --output ${csv_output} \\\\\n       --ksize ${sourmash_ksize} \\\\\n       --${sourmash_molecule} \\\\\n       ${query_sig} \\\\\n       ${reference_sbt_json}\n   \"\"\"\n }",
        "nb_lignes_process": 26,
        "string_script": "   group_cleaned = groupCleaner(group)\n   csv_output = \"${group_cleaned}__${hash_id}.csv\"\n   sketch_id = \"molecule-${sourmash_molecule}__ksize-${sourmash_ksize}__scaled-1__track_abundance-true\"\n   \"\"\"\n   sourmash search \\\\\n       --containment \\\\\n       --threshold 1e-100 \\\\\n       --output ${csv_output} \\\\\n       --ksize ${sourmash_ksize} \\\\\n       --${sourmash_molecule} \\\\\n       ${query_sig} \\\\\n       ${reference_sbt_json}\n   \"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [
            "sourmash"
        ],
        "tools_url": [
            "https://bio.tools/sourmash"
        ],
        "tools_dico": [
            {
                "name": "sourmash",
                "uri": "https://bio.tools/sourmash",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3307",
                            "term": "Computational biology"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0346",
                                    "term": "Sequence similarity search"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0289",
                                    "term": "Sequence distance matrix generation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0289",
                                    "term": "Sequence distance calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0289",
                                    "term": "Phylogenetic distance matrix generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0289",
                                    "term": "Sequence distance matrix construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2975",
                                "term": "Nucleic acid sequence (raw)"
                            }
                        ],
                        "output": []
                    }
                ],
                "description": "Compute and compare MinHash signatures for DNA data sets.",
                "homepage": "https://sourmash.readthedocs.io/en/latest/"
            }
        ],
        "inputs": [
            "ch_sourmash_index",
            "ch_group_hash_sigs_to_query"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "czbiohub__nf-predictorthologs",
        "directive": [
            "tag \"${group_cleaned}\"",
            "label \"process_low\"",
            "publishDir \"${params.outdir}/sourmash/search\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "gunzip_infernal_cm": {
        "name_process": "gunzip_infernal_cm",
        "string_process": " process gunzip_infernal_cm {\n        tag \"$gz\"\n        publishDir path: { params.save_reference ? \"${params.outdir}/reference/infernal\" : params.outdir },\n                   saveAs: { params.save_reference ? it : null }, mode: \"${params.publish_dir_mode}\"\n\n        input:\n        file gz from ch_infernal_db_gz\n\n        output:\n        file \"${gz.baseName}\" into ch_infernal_cm\n\n        script:\n        \"\"\"\n        gunzip -c --verbose --stdout --force ${gz} > ${gz.baseName}\n        \"\"\"\n    }",
        "nb_lignes_process": 14,
        "string_script": "        \"\"\"\n        gunzip -c --verbose --stdout --force ${gz} > ${gz.baseName}\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_infernal_db_gz"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_infernal_cm"
        ],
        "nb_outputs": 1,
        "name_workflow": "czbiohub__nf-predictorthologs",
        "directive": [
            "tag \"$gz\"",
            "publishDir path: { params.save_reference ? \"${params.outdir}/reference/infernal\" : params.outdir } , saveAs: { params.save_reference ? it : null }, mode: \"${params.publish_dir_mode}\""
        ],
        "when": "",
        "stub": ""
    },
    "prepare_infernal_db": {
        "name_process": "prepare_infernal_db",
        "string_process": " process prepare_infernal_db {\n      tag \"${infernal_cm}\"\n      publishDir path: { params.save_reference ? \"${params.outdir}/reference/infernal\" : params.outdir },\n                 saveAs: { params.save_reference ? it : null }, mode: \"${params.publish_dir_mode}\"\n\n      input:\n      file infernal_cm from ch_infernal_cm.collect()\n\n      output:\n      set val(\"${infernal_cm}\"), file(\"${infernal_cm}*\") into ch_infernal_db\n\n      script:\n      \"\"\"\n      cmpress ${infernal_cm}\n      \"\"\"\n  }",
        "nb_lignes_process": 14,
        "string_script": "      \"\"\"\n      cmpress ${infernal_cm}\n      \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_infernal_cm"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_infernal_db"
        ],
        "nb_outputs": 1,
        "name_workflow": "czbiohub__nf-predictorthologs",
        "directive": [
            "tag \"${infernal_cm}\"",
            "publishDir path: { params.save_reference ? \"${params.outdir}/reference/infernal\" : params.outdir } , saveAs: { params.save_reference ? it : null }, mode: \"${params.publish_dir_mode}\""
        ],
        "when": "",
        "stub": ""
    },
    "search_noncoding": {
        "name_process": "search_noncoding",
        "string_process": " process search_noncoding {\n      tag \"${sample_id}\"\n      label \"process_high\"\n      label \"process_long\"\n      publishDir \"${params.outdir}/infernal\", mode: \"${params.publish_dir_mode}\"\n\n      input:\n      set val(db_name), file(db_index) from ch_infernal_db.collect()\n      file rfam_clan_info from ch_rfam_clan_info.collect()\n      set val(sample_id), file (fasta) from ch_noncoding_nucleotides\n\n      output:\n      file txt into ch_infernal_results\n\n      script:\n      txt = \"${sample_id}.txt\"\n      \"\"\"\n      cmscan  \\\\\n          --cut_ga \\\\\n          --nohmmonly \\\\\n          --clanin ${rfam_clan_info} \\\\\n          --fmt 2 \\\\\n          --rfam \\\\\n          --cpu ${task.cpus} \\\\\n          --tblout ${txt} \\\\\n          ${db_name} \\\\\n          ${fasta}\n      \"\"\"\n  }",
        "nb_lignes_process": 27,
        "string_script": "      txt = \"${sample_id}.txt\"\n      \"\"\"\n      cmscan  \\\\\n          --cut_ga \\\\\n          --nohmmonly \\\\\n          --clanin ${rfam_clan_info} \\\\\n          --fmt 2 \\\\\n          --rfam \\\\\n          --cpu ${task.cpus} \\\\\n          --tblout ${txt} \\\\\n          ${db_name} \\\\\n          ${fasta}\n      \"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_infernal_db",
            "ch_rfam_clan_info",
            "ch_noncoding_nucleotides"
        ],
        "nb_inputs": 3,
        "outputs": [
            "ch_infernal_results"
        ],
        "nb_outputs": 1,
        "name_workflow": "czbiohub__nf-predictorthologs",
        "directive": [
            "tag \"${sample_id}\"",
            "label \"process_high\"",
            "label \"process_long\"",
            "publishDir \"${params.outdir}/infernal\", mode: \"${params.publish_dir_mode}\""
        ],
        "when": "",
        "stub": ""
    },
    "multiqc": {
        "name_process": "multiqc",
        "string_process": "\nprocess multiqc {\n    publishDir \"${params.outdir}/MultiQC\", mode: 'copy'\n\n    input:\n    file (multiqc_config) from ch_multiqc_config\n    file (mqc_custom_config) from ch_multiqc_custom_config.collect().ifEmpty([])\n                                                                                  \n    file ('fastqc/*') from ch_fastqc_results.collect().ifEmpty([])\n    file ('software_versions/*') from ch_software_versions_yaml.collect()\n    file (\"fastp/*\") from ch_fastp_results.collect().ifEmpty([])\n    file workflow_summary from create_workflow_summary(summary)\n\n    output:\n    file \"*multiqc_report.html\" into ch_multiqc_report\n    file \"*_data\"\n    file \"multiqc_plots\"\n\n    script:\n    rtitle = custom_runName ? \"--title \\\"$custom_runName\\\"\" : ''\n    rfilename = custom_runName ? \"--filename \" + custom_runName.replaceAll('\\\\W','_').replaceAll('_+','_') + \"_multiqc_report\" : ''\n    custom_config_file = params.multiqc_config ? \"--config $mqc_custom_config\" : ''\n                                                                                       \n    \"\"\"\n    multiqc -f $rtitle $rfilename $custom_config_file -m fastqc -m fastp .\n    touch multiqc_report.html multiqc_plots _data\n    \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "    rtitle = custom_runName ? \"--title \\\"$custom_runName\\\"\" : ''\n    rfilename = custom_runName ? \"--filename \" + custom_runName.replaceAll('\\\\W','_').replaceAll('_+','_') + \"_multiqc_report\" : ''\n    custom_config_file = params.multiqc_config ? \"--config $mqc_custom_config\" : ''\n                                                                                       \n    \"\"\"\n    multiqc -f $rtitle $rfilename $custom_config_file -m fastqc -m fastp .\n    touch multiqc_report.html multiqc_plots _data\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [
            "ch_multiqc_config",
            "ch_multiqc_custom_config",
            "ch_fastqc_results",
            "ch_software_versions_yaml",
            "ch_fastp_results",
            "summary"
        ],
        "nb_inputs": 6,
        "outputs": [
            "ch_multiqc_report"
        ],
        "nb_outputs": 1,
        "name_workflow": "czbiohub__nf-predictorthologs",
        "directive": [
            "publishDir \"${params.outdir}/MultiQC\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "output_documentation": {
        "name_process": "output_documentation",
        "string_process": "\nprocess output_documentation {\n    publishDir \"${params.outdir}/pipeline_info\", mode: 'copy'\n\n    input:\n    file output_docs from ch_output_docs\n\n    output:\n    file \"results_description.html\"\n\n    script:\n    \"\"\"\n    markdown_to_html.py $output_docs -o results_description.html\n    \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "    \"\"\"\n    markdown_to_html.py $output_docs -o results_description.html\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_output_docs"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "czbiohub__nf-predictorthologs",
        "directive": [
            "publishDir \"${params.outdir}/pipeline_info\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    }
}