{
    "createDecoyDb": {
        "name_process": "createDecoyDb",
        "string_process": "\nprocess createDecoyDb {\n\tcontainer 'biocontainers/searchgui:v2.8.6_cv2'\n\n\tinput:\n\tfile \"db.fasta\" from fasta_file\n\n\toutput:\n\tfile \"db_concatenated_target_decoy.fasta\" into fasta_decoy_db\n\n\tscript:\n\t\"\"\"\n\tjava -cp /home/biodocker/bin/SearchGUI-2.8.6/SearchGUI-2.8.6.jar eu.isas.searchgui.cmd.FastaCLI -decoy -in db.fasta\n\t\"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "\t\"\"\"\n\tjava -cp /home/biodocker/bin/SearchGUI-2.8.6/SearchGUI-2.8.6.jar eu.isas.searchgui.cmd.FastaCLI -decoy -in db.fasta\n\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "fasta_file"
        ],
        "nb_inputs": 1,
        "outputs": [
            "fasta_decoy_db"
        ],
        "nb_outputs": 1,
        "name_workflow": "Jokendo-collab__MS_database_search",
        "directive": [
            "container 'biocontainers/searchgui:v2.8.6_cv2'"
        ],
        "when": "",
        "stub": ""
    },
    "createTandemConfig": {
        "name_process": "createTandemConfig",
        "string_process": "\nprocess createTandemConfig {\n\tinput:\n\tfile \"settings.xml\" from xtandem_template\n\n\toutput:\n\tfile \"adapted_settings.xml\" into xtandem_settings\n\n\tscript:\n\t\"\"\"\n\tsed -e 's|FRAG_TOL|${params.frag_tol}|' \\\n\t    -e 's|PREC_TOL|${params.prec_tol}|' \\\n\t    -e 's|MISSED_CLEAV|${params.mc}|' \\\n\t    -e 's|THREADS|$threads|' \\\n\t    ${xtandem_template} > adapted_settings.xml\n\t\"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "\t\"\"\"\n\tsed -e 's|FRAG_TOL|${params.frag_tol}|' \\\n\t    -e 's|PREC_TOL|${params.prec_tol}|' \\\n\t    -e 's|MISSED_CLEAV|${params.mc}|' \\\n\t    -e 's|THREADS|$threads|' \\\n\t    ${xtandem_template} > adapted_settings.xml\n\t\"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "xtandem_template"
        ],
        "nb_inputs": 1,
        "outputs": [
            "xtandem_settings"
        ],
        "nb_outputs": 1,
        "name_workflow": "Jokendo-collab__MS_database_search",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "searchTandem": {
        "name_process": "searchTandem",
        "string_process": "\nprocess searchTandem {\n\tcontainer 'jgriss/tandem:v17-02-01-4'\n\n\tinput:\n\tfile xtandem_settings\n\tfile xtandem_taxonomy\n\tfile fasta_decoy_db\n\tfile mgf_file from mgf_files\n\n\toutput:\n        file \"${mgf_file}.xml.mzid\" into xtandem_result\n\n\tscript:\n\t\"\"\"\n\tsed -e 's|ORG_NAME|${mgf_file}|' ${xtandem_settings} > ${mgf_file}.settings.xml && \\\n\ttandem ${mgf_file}.settings.xml && \\\n\tsed -i 's|value=\"^XXX\"|value=\"_REVERSED\"|' ${mgf_file}.xml.mzid\n\t\"\"\"\t\n}",
        "nb_lignes_process": 18,
        "string_script": "\t\"\"\"\n\tsed -e 's|ORG_NAME|${mgf_file}|' ${xtandem_settings} > ${mgf_file}.settings.xml && \\\n\ttandem ${mgf_file}.settings.xml && \\\n\tsed -i 's|value=\"^XXX\"|value=\"_REVERSED\"|' ${mgf_file}.xml.mzid\n\t\"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "rTANDEM"
        ],
        "tools_url": [
            "https://bio.tools/rtandem"
        ],
        "tools_dico": [
            {
                "name": "rTANDEM",
                "uri": "https://bio.tools/rtandem",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2814",
                            "term": "Protein structure analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_2814",
                            "term": "Protein structure"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3092",
                                    "term": "Protein feature detection"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3092",
                                    "term": "Protein feature prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3092",
                                    "term": "Protein feature recognition"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This package interfaces the tandem protein identification algorithm in R. Identification can be launched in the X!Tandem style, by using as sole parameter the path to a parameter file. But it also provides extended syntax and functions to streamline launching analyses, as well as function to convert results, parameters and taxonomy to/from R. A related package, shinyTANDEM, provides visualization interface for result objects.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/rTANDEM.html"
            }
        ],
        "inputs": [
            "xtandem_settings",
            "xtandem_taxonomy",
            "fasta_decoy_db",
            "mgf_files"
        ],
        "nb_inputs": 4,
        "outputs": [
            "xtandem_result"
        ],
        "nb_outputs": 1,
        "name_workflow": "Jokendo-collab__MS_database_search",
        "directive": [
            "container 'jgriss/tandem:v17-02-01-4'"
        ],
        "when": "",
        "stub": ""
    },
    "createMsgfDbIndex": {
        "name_process": "createMsgfDbIndex",
        "string_process": "\nprocess createMsgfDbIndex {\n\tcontainer 'biocontainers/msgfp:v9949_cv3'\n\t                                                            \n\tvalidExitStatus 0,1\n\t\n\tinput:\n\tfile \"user.fasta\" from fasta_file\n\n\toutput:\n\tfile \"user.revCat*\" into msgf_fasta_index\n\n\tscript:\n\t\"\"\"\n\ttouch /tmp/test.mgf\n\tjava -jar /home/biodocker/bin/MSGFPlus_9949/MSGFPlus.jar -s /tmp/test.mgf -d user.fasta -tda 1\n\t\"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "\t\"\"\"\n\ttouch /tmp/test.mgf\n\tjava -jar /home/biodocker/bin/MSGFPlus_9949/MSGFPlus.jar -s /tmp/test.mgf -d user.fasta -tda 1\n\t\"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "fasta_file"
        ],
        "nb_inputs": 1,
        "outputs": [
            "msgf_fasta_index"
        ],
        "nb_outputs": 1,
        "name_workflow": "Jokendo-collab__MS_database_search",
        "directive": [
            "container 'biocontainers/msgfp:v9949_cv3'",
            "validExitStatus 0,1"
        ],
        "when": "",
        "stub": ""
    },
    "searchMsgf": {
        "name_process": "searchMsgf",
        "string_process": "\nprocess searchMsgf {\n\tcontainer 'biocontainers/msgfp:v9949_cv3'\n\n\tinput:\n\tfile \"user.fasta\" from fasta_file\n\tfile msgf_fasta_index\n\tfile mgf_file_msgf from mgf_files_msgf\n\tfile msgf_mods\n\n\toutput:\n\tfile \"*.mzid\" into msgf_result\n\t\n\tscript:\n\t\"\"\"\n\tjava -jar /home/biodocker/bin/MSGFPlus_9949/MSGFPlus.jar \\\n\t-d user.fasta -s ${mgf_file_msgf} -t ${params.prec_tol}ppm -ti 0,1 -thread ${threads} \\\n\t-tda 1 -inst 3 -e 1 -ntt ${params.mc} -mod ${msgf_mods} -minCharge 2 -maxCharge 4 \\\n\t-addFeatures 1\n\t\"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "\t\"\"\"\n\tjava -jar /home/biodocker/bin/MSGFPlus_9949/MSGFPlus.jar \\\n\t-d user.fasta -s ${mgf_file_msgf} -t ${params.prec_tol}ppm -ti 0,1 -thread ${threads} \\\n\t-tda 1 -inst 3 -e 1 -ntt ${params.mc} -mod ${msgf_mods} -minCharge 2 -maxCharge 4 \\\n\t-addFeatures 1\n\t\"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "fasta_file",
            "msgf_fasta_index",
            "mgf_files_msgf",
            "msgf_mods"
        ],
        "nb_inputs": 4,
        "outputs": [
            "msgf_result"
        ],
        "nb_outputs": 1,
        "name_workflow": "Jokendo-collab__MS_database_search",
        "directive": [
            "container 'biocontainers/msgfp:v9949_cv3'"
        ],
        "when": "",
        "stub": ""
    },
    "annotateMsgf": {
        "name_process": "annotateMsgf",
        "string_process": "\nprocess annotateMsgf {\n\tcontainer 'jgriss/spectra-cluster-py:latest'\n\n\tinput:\n\tset val(mgf_name), file(msgf_file), file(mgf_file) from msgf_combined\n\n\toutput:\n\tfile \"${mgf_name}.msgf.mgf\" into msgf_annotated\n\n\tscript:\n\t\"\"\"\n\tmgf_search_result_annotator --input ${mgf_file} --search ${msgf_file} --output ${mgf_name}.msgf.mgf --format \"MSGF_ident\" --fdr 0.01\n\t\"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "\t\"\"\"\n\tmgf_search_result_annotator --input ${mgf_file} --search ${msgf_file} --output ${mgf_name}.msgf.mgf --format \"MSGF_ident\" --fdr 0.01\n\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "msgf_combined"
        ],
        "nb_inputs": 1,
        "outputs": [
            "msgf_annotated"
        ],
        "nb_outputs": 1,
        "name_workflow": "Jokendo-collab__MS_database_search",
        "directive": [
            "container 'jgriss/spectra-cluster-py:latest'"
        ],
        "when": "",
        "stub": ""
    },
    "annotateTandem": {
        "name_process": "annotateTandem",
        "string_process": "\nprocess annotateTandem {\n\tcontainer 'jgriss/spectra-cluster-py:latest'\n\n\tinput:\n\tset val(mgf_name), file(xtandem_file), file(mgf_file) from xtandem_combined\n\n\toutput:\n\tfile \"${mgf_name}.xt.mgf\" into xtandem_annotated\n\n\tscript:\n\t\"\"\"\n\tmgf_search_result_annotator --input ${mgf_file} --search ${xtandem_file} --output \"${mgf_name}.xt.mgf\" --format xtandem --fdr 0.01\n\t\"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "\t\"\"\"\n\tmgf_search_result_annotator --input ${mgf_file} --search ${xtandem_file} --output \"${mgf_name}.xt.mgf\" --format xtandem --fdr 0.01\n\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "xtandem_combined"
        ],
        "nb_inputs": 1,
        "outputs": [
            "xtandem_annotated"
        ],
        "nb_outputs": 1,
        "name_workflow": "Jokendo-collab__MS_database_search",
        "directive": [
            "container 'jgriss/spectra-cluster-py:latest'"
        ],
        "when": "",
        "stub": ""
    },
    "runClustering": {
        "name_process": "runClustering",
        "string_process": "\nprocess runClustering {\n\tcontainer 'biocontainers/spectra-cluster-cli:vv1.1.2_cv2'\n\tpublishDir \"result\"\n\n\tinput:\n\tfile (\"*\") from annotated_mgf\n\n\toutput:\n\tfile \"*.clustering\" into clustering_result\n\n\tscript:\n\t\"\"\"\n\tif [ `ls -1 *.mgf | grep -c \".xt.mgf\"` -gt 0 ]; then\n\t\tENGINE=\"xtandem\"\n\telse\n\t\tENGINE=\"msgf\"\n\tfi\n\n\tspectra-cluster-cli -major_peak_jobs ${threads} \\\n\t-threshold_start 1 -threshold_end 0.99 -rounds 5 \\\n\t-precursor_tolerance ${params.prec_tol} -precursor_tolerance_unit ppm \\\n\t-fragment_tolerance ${params.frag_tol} -filter mz_150 -output_path \\${ENGINE}.clustering \\\n\t*.mgf\n\t\"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "\t\"\"\"\n\tif [ `ls -1 *.mgf | grep -c \".xt.mgf\"` -gt 0 ]; then\n\t\tENGINE=\"xtandem\"\n\telse\n\t\tENGINE=\"msgf\"\n\tfi\n\n\tspectra-cluster-cli -major_peak_jobs ${threads} \\\n\t-threshold_start 1 -threshold_end 0.99 -rounds 5 \\\n\t-precursor_tolerance ${params.prec_tol} -precursor_tolerance_unit ppm \\\n\t-fragment_tolerance ${params.frag_tol} -filter mz_150 -output_path \\${ENGINE}.clustering \\\n\t*.mgf\n\t\"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "annotated_mgf"
        ],
        "nb_inputs": 1,
        "outputs": [
            "clustering_result"
        ],
        "nb_outputs": 1,
        "name_workflow": "Jokendo-collab__MS_database_search",
        "directive": [
            "container 'biocontainers/spectra-cluster-cli:vv1.1.2_cv2'",
            "publishDir \"result\""
        ],
        "when": "",
        "stub": ""
    },
    "transferIds": {
        "name_process": "transferIds",
        "string_process": "\nprocess transferIds {\n\tcontainer 'jgriss/spectra-cluster-py:latest'\n\tpublishDir \"result\"\n\n\tinput:\n\tfile clustering_file from clustering_result\n\tfile fasta_file\n\n\toutput:\n\tfile '*.spec_counts.tsv' into spectral_counts\n\n\tscript:\n\t\"\"\"\n\tid_transferer_cli --input \"${clustering_file}\" --output psm_quant.tsv \\\n\t\t--min_identified ${params.min_ident} --min_ratio ${params.min_ratio} \\\n\t\t--return_all_identified --only_unidentified\n\tprotein_annotator --input psm_quant.tsv --output ${clustering_file}.spec_counts.tsv \\\n\t\t--fasta \"${fasta_file}\" --ignore_il\n\t\"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "\t\"\"\"\n\tid_transferer_cli --input \"${clustering_file}\" --output psm_quant.tsv \\\n\t\t--min_identified ${params.min_ident} --min_ratio ${params.min_ratio} \\\n\t\t--return_all_identified --only_unidentified\n\tprotein_annotator --input psm_quant.tsv --output ${clustering_file}.spec_counts.tsv \\\n\t\t--fasta \"${fasta_file}\" --ignore_il\n\t\"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "clustering_result",
            "fasta_file"
        ],
        "nb_inputs": 2,
        "outputs": [
            "spectral_counts"
        ],
        "nb_outputs": 1,
        "name_workflow": "Jokendo-collab__MS_database_search",
        "directive": [
            "container 'jgriss/spectra-cluster-py:latest'",
            "publishDir \"result\""
        ],
        "when": "",
        "stub": ""
    }
}