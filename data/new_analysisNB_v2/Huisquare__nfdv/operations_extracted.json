{
    "OPERATION_1": {
        "string": "Channel.fromPath(\"${params.bam_folder}/*.bam\").map{ file -> tuple(file.name, file) }.set{bamChannel}",
        "origin": [
            [
                "\"${params.bam_folder}/*.bam\"",
                "A"
            ]
        ],
        "gives": [
            [
                "bamChannel",
                "P"
            ]
        ]
    },
    "OPERATION_2": {
        "string": "fastaChannel.map{file -> tuple (1,file[0],file[1],file[2],file[3],file[4])}\n            .set{all_fa};",
        "origin": [
            [
                "fastaChannel",
                "P"
            ]
        ],
        "gives": [
            [
                "all_fa",
                "P"
            ]
        ]
    },
    "OPERATION_3": {
        "string": "completeChannel.map { file -> tuple(1,file[0],file[1]) }\n               .set{all_bam};",
        "origin": [
            [
                "completeChannel",
                "P"
            ]
        ],
        "gives": [
            [
                "all_bam",
                "P"
            ]
        ]
    },
    "OPERATION_4": {
        "string": "all_fa.cross(all_bam)\n      .set{all_fa_bam};",
        "origin": [
            [
                "all_fa",
                "P"
            ],
            [
                "all_bam",
                "P"
            ]
        ],
        "gives": [
            [
                "all_fa_bam",
                "P"
            ]
        ]
    },
    "OPERATION_5": {
        "string": "out.println(\"Congrats! The job was successful. Please find your results in $baseDir/${params.resultdir}\");",
        "origin": [
            [
                "out",
                "P"
            ]
        ],
        "gives": []
    },
    "OPERATION_6": {
        "string": "out.println(\"Job was not successful. Please look at the .nextflow.log file for more information on errors.\");",
        "origin": [
            [
                "out",
                "P"
            ]
        ],
        "gives": []
    }
}