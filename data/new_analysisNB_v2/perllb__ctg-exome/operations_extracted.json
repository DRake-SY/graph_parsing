{
    "OPERATION_1": {
        "string": "channel.nf.sc-rna-10x.csv\")\n\n                                                                   \nnewsheet = \"${basedir}/samplesheet.demux.nf.exome.csv\"\n\n                                \nall_lines = sheet.readLines()\nwrite_b = false                                 \nchannel_sheet.text=\"\"     \n\nfor ( line in all_lines ) {\n\n    if ( write_b ) {\n\tchannel_sheet.append(line + \"\\n\")\n    }\n    if (line.contains(\"[Data]\")) {\n\twrite_b = true\n    }\n}\n\n\nprintln \"=============================\"\nprintln \">>> exome dragen pipeline \"\nprintln \"\"\nprintln \"> INPUT: \"\nprintln \"> runfolder\t\t: $runfolder \"\nprintln \"> sample-sheet\t\t: $sheet \"\nprintln \"> run-meta-id\t\t: $metaID \"\nprintln \"> basedir\t\t: $basedir \"\nprintln \"> bcl2fastq args\t: $b2farg \"\nprintln \"\"\nprintln \"> OUTPUT: \"\nprintln \"> output-dir\t\t: $OUTDIR \"\nprintln \"> fastq-dir\t\t: $FQDIR \"\nprintln \"> qc-dir\t\t: $QCDIR \"\nprintln \"> fastqc-dir\t\t: $FQCDIR \"\nprintln \"> ctg-qc-dir\t\t: $CTGQC \"\nprintln \"=============================\"\n\n              \nChannel\n    .fromPath(channel_sheet)\n    .splitCsv(header",
        "origin": [
            [
                "channel_sheet",
                "A"
            ]
        ],
        "gives": []
    },
    "OPERATION_2": {
        "string": "Channel\n    .fromPath(channel_sheet)\n    .splitCsv(header:true)\n    .map { row -> tuple(  row.Sample_Project, row.panel ) }\n    .unique()\n    .tap{infoProjects}\n    .set{ dragen_summary  }",
        "origin": [
            [
                "channel_sheet",
                "A"
            ]
        ],
        "gives": [
            [
                "dragen_summary",
                "P"
            ],
            [
                "infoProjects",
                "P"
            ]
        ]
    },
    "OPERATION_3": {
        "string": "Channel\n\t .from(\"1\")\n    \t .set{ run_analysis }",
        "origin": [
            [
                "\"1\"",
                "V"
            ]
        ],
        "gives": [
            [
                "run_analysis",
                "P"
            ]
        ]
    },
    "OPERATION_4": {
        "string": "infoSamples.subscribe{ println \"Sample: $it\" }",
        "origin": [
            [
                "infoSamples",
                "P"
            ]
        ],
        "gives": []
    },
    "OPERATION_5": {
        "string": "infoProjects.subscribe{ println \"Sample: $it\" }",
        "origin": [
            [
                "infoProjects",
                "P"
            ]
        ],
        "gives": []
    }
}