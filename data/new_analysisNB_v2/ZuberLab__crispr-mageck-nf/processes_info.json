{
    "mageck": {
        "name_process": "mageck",
        "string_process": "\nprocess mageck {\n\n    tag { parameters.name }\n\n    publishDir path: \"${params.outputDir}/${parameters.name}\",\n               mode: 'copy',\n               overwrite: 'true',\n               saveAs: {filename ->\n                   if (filename.indexOf(\".log\") > 0) \"$filename\"\n                   else if (filename.indexOf(\".normalized.txt\") > 0) \"$filename\"\n                   else null\n               }\n                   \n    input:\n    val(parameters) from contrastsMageck\n    each file(counts) from countsMageck\n    each file(cnv) from cnvMageck\n\n    output:\n    set val(\"${parameters.name}\"), file('*.sgrna_summary.txt'), file('*.gene_summary.txt') into resultsMageck\n    file('*.log') into logsMageck\n    file('*.normalized.txt') into normalizedMageck\n\n    script:\n    rra_params = params.min_rra_window > 0 ? \"--additional-rra-parameters '-p ${params.min_rra_window}'\" : ''\n    cnv_file = file(params.cnv).exists() & parameters.cnv_correction != '' ? \"--cnv-norm ${cnv}\" : \"\"\n    cnv_cellline = file(params.cnv).exists() & parameters.cnv_correction != '' ? \"--cell-line ${parameters.cnv_correction}\" : \"\"\n    \n    control = parameters.filter == \"\" ? parameters.control : parameters.filter \n    \n    if( parameters.norm_method == \"quantile\" )\n    \n\t    \"\"\"\n\t    prefilter_counts.R \\\n\t        ${counts} \\\n\t        ${control} \\\n\t        ${params.min_count} > counts_filtered.txt\n\t        \n\t    quantile_normalize_counts.R \\\n\t        counts_filtered.txt > counts_quantile_normalized.txt\n\t        \n\t    VERSION=\\$(mageck -v 2>&1 >/dev/null)\n\t    \n\t    if [ \\$VERSION = \"0.5.5\" ]; then\n\t\n\t\t    mageck test \\\n\t\t        --output-prefix ${parameters.name} \\\n\t\t        --count-table counts_quantile_normalized.txt \\\n\t\t        --control-id ${parameters.control} \\\n\t\t        --treatment-id ${parameters.treatment} \\\n\t\t        --norm-method none \\\n\t\t        --adjust-method ${parameters.fdr_method} \\\n\t\t        --gene-lfc-method ${parameters.lfc_method} \\\n\t\t        --normcounts-to-file\n\t        \n\t    else\n\t\t    mageck test \\\n\t\t\t        --output-prefix ${parameters.name} \\\n\t\t\t        --count-table counts_quantile_normalized.txt \\\n\t\t\t        --control-id ${parameters.control} \\\n\t\t\t        --treatment-id ${parameters.treatment} \\\n\t\t\t        --norm-method none \\\n\t\t\t        --adjust-method ${parameters.fdr_method} \\\n\t\t\t        --gene-lfc-method ${parameters.lfc_method} \\\n\t\t\t        --normcounts-to-file \\\n\t\t\t        ${rra_params} \\\n\t\t\t        ${cnv_file} \\\n\t\t\t        ${cnv_cellline}\n\t    fi\n\t    \"\"\"\n\telse\n\t    \"\"\"\n\t    prefilter_counts.R \\\n\t        ${counts} \\\n\t        ${control} \\\n\t        ${params.min_count} > counts_filtered.txt\n\t        \n\t    VERSION=\\$(mageck -v 2>&1 >/dev/null)\n\t    \n\t    if [ \\$VERSION = \"0.5.5\" ]; then\n\t\n\t\t    mageck test \\\n\t\t        --output-prefix ${parameters.name} \\\n\t\t        --count-table counts_filtered.txt \\\n\t\t        --control-id ${parameters.control} \\\n\t\t        --treatment-id ${parameters.treatment} \\\n\t\t        --norm-method ${parameters.norm_method} \\\n\t\t        --adjust-method ${parameters.fdr_method} \\\n\t\t        --gene-lfc-method ${parameters.lfc_method} \\\n\t\t        --normcounts-to-file \t        \n\t    else\n\t\t    mageck test \\\n\t\t        --output-prefix ${parameters.name} \\\n\t\t        --count-table counts_filtered.txt \\\n\t\t        --control-id ${parameters.control} \\\n\t\t        --treatment-id ${parameters.treatment} \\\n\t\t        --norm-method ${parameters.norm_method} \\\n\t\t        --adjust-method ${parameters.fdr_method} \\\n\t\t        --gene-lfc-method ${parameters.lfc_method} \\\n\t\t        --normcounts-to-file \\\n\t\t        ${rra_params} \\\n\t\t        ${cnv_file} \\\n\t\t        ${cnv_cellline}\n\t    fi\n\t    \"\"\"\n}",
        "nb_lignes_process": 105,
        "string_script": "    rra_params = params.min_rra_window > 0 ? \"--additional-rra-parameters '-p ${params.min_rra_window}'\" : ''\n    cnv_file = file(params.cnv).exists() & parameters.cnv_correction != '' ? \"--cnv-norm ${cnv}\" : \"\"\n    cnv_cellline = file(params.cnv).exists() & parameters.cnv_correction != '' ? \"--cell-line ${parameters.cnv_correction}\" : \"\"\n    \n    control = parameters.filter == \"\" ? parameters.control : parameters.filter \n    \n    if( parameters.norm_method == \"quantile\" )\n    \n\t    \"\"\"\n\t    prefilter_counts.R \\\n\t        ${counts} \\\n\t        ${control} \\\n\t        ${params.min_count} > counts_filtered.txt\n\t        \n\t    quantile_normalize_counts.R \\\n\t        counts_filtered.txt > counts_quantile_normalized.txt\n\t        \n\t    VERSION=\\$(mageck -v 2>&1 >/dev/null)\n\t    \n\t    if [ \\$VERSION = \"0.5.5\" ]; then\n\t\n\t\t    mageck test \\\n\t\t        --output-prefix ${parameters.name} \\\n\t\t        --count-table counts_quantile_normalized.txt \\\n\t\t        --control-id ${parameters.control} \\\n\t\t        --treatment-id ${parameters.treatment} \\\n\t\t        --norm-method none \\\n\t\t        --adjust-method ${parameters.fdr_method} \\\n\t\t        --gene-lfc-method ${parameters.lfc_method} \\\n\t\t        --normcounts-to-file\n\t        \n\t    else\n\t\t    mageck test \\\n\t\t\t        --output-prefix ${parameters.name} \\\n\t\t\t        --count-table counts_quantile_normalized.txt \\\n\t\t\t        --control-id ${parameters.control} \\\n\t\t\t        --treatment-id ${parameters.treatment} \\\n\t\t\t        --norm-method none \\\n\t\t\t        --adjust-method ${parameters.fdr_method} \\\n\t\t\t        --gene-lfc-method ${parameters.lfc_method} \\\n\t\t\t        --normcounts-to-file \\\n\t\t\t        ${rra_params} \\\n\t\t\t        ${cnv_file} \\\n\t\t\t        ${cnv_cellline}\n\t    fi\n\t    \"\"\"\n\telse\n\t    \"\"\"\n\t    prefilter_counts.R \\\n\t        ${counts} \\\n\t        ${control} \\\n\t        ${params.min_count} > counts_filtered.txt\n\t        \n\t    VERSION=\\$(mageck -v 2>&1 >/dev/null)\n\t    \n\t    if [ \\$VERSION = \"0.5.5\" ]; then\n\t\n\t\t    mageck test \\\n\t\t        --output-prefix ${parameters.name} \\\n\t\t        --count-table counts_filtered.txt \\\n\t\t        --control-id ${parameters.control} \\\n\t\t        --treatment-id ${parameters.treatment} \\\n\t\t        --norm-method ${parameters.norm_method} \\\n\t\t        --adjust-method ${parameters.fdr_method} \\\n\t\t        --gene-lfc-method ${parameters.lfc_method} \\\n\t\t        --normcounts-to-file \t        \n\t    else\n\t\t    mageck test \\\n\t\t        --output-prefix ${parameters.name} \\\n\t\t        --count-table counts_filtered.txt \\\n\t\t        --control-id ${parameters.control} \\\n\t\t        --treatment-id ${parameters.treatment} \\\n\t\t        --norm-method ${parameters.norm_method} \\\n\t\t        --adjust-method ${parameters.fdr_method} \\\n\t\t        --gene-lfc-method ${parameters.lfc_method} \\\n\t\t        --normcounts-to-file \\\n\t\t        ${rra_params} \\\n\t\t        ${cnv_file} \\\n\t\t        ${cnv_cellline}\n\t    fi\n\t    \"\"\"",
        "nb_lignes_script": 80,
        "language_script": "bash",
        "tools": [
            "GControl"
        ],
        "tools_url": [
            "https://bio.tools/gcontrol"
        ],
        "tools_dico": [
            {
                "name": "GControl",
                "uri": "https://bio.tools/gcontrol",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3053",
                            "term": "Genetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3056",
                            "term": "Population genetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3439",
                                    "term": "Pathway or network prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2423",
                                    "term": "Prediction and recognition"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Computer program for Bayesian analysis of case-control data that controls for population stratification and cryptic relatedness. The program performs these analyses using Markov chain Monte Carlo algorithms.",
                "homepage": "http://wpicr.wpic.pitt.edu/WPICCompGen/bayesian_genomic_control_softwar.htm"
            }
        ],
        "inputs": [
            "contrastsMageck",
            "countsMageck",
            "cnvMageck"
        ],
        "nb_inputs": 3,
        "outputs": [
            "resultsMageck",
            "logsMageck",
            "normalizedMageck"
        ],
        "nb_outputs": 3,
        "name_workflow": "ZuberLab__crispr-mageck-nf",
        "directive": [
            "tag { parameters.name }",
            "publishDir path: \"${params.outputDir}/${parameters.name}\" , mode: 'copy' , overwrite: 'true' , saveAs: {filename -> if (filename.indexOf(\".log\") > 0) \"$filename\" else if (filename.indexOf(\".normalized.txt\") > 0) \"$filename\" else null }"
        ],
        "when": "",
        "stub": ""
    },
    "postprocess": {
        "name_process": "postprocess",
        "string_process": "\nprocess postprocess {\n\n    tag { name }\n\n    publishDir path: \"${params.outputDir}/${name}\",\n               mode: 'copy',\n               overwrite: 'true'\n\n    input:\n    set val(name), file(guides), file(genes) from resultsMageck\n\n    output:\n    set val(name), file('*_stats.txt') into processedMageck\n    file('*.pdf') into qcMageck\n\n    script:\n    \"\"\"\n    postprocess_mageck.R ${guides} ${genes}\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "    \"\"\"\n    postprocess_mageck.R ${guides} ${genes}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "resultsMageck"
        ],
        "nb_inputs": 1,
        "outputs": [
            "processedMageck",
            "qcMageck"
        ],
        "nb_outputs": 2,
        "name_workflow": "ZuberLab__crispr-mageck-nf",
        "directive": [
            "tag { name }",
            "publishDir path: \"${params.outputDir}/${name}\" , mode: 'copy' , overwrite: 'true'"
        ],
        "when": "",
        "stub": ""
    }
}