//Structure de Base enracinnÃ©
//
digraph  {
checkm_lineage_wf;
ccs_mapping;
ccs_map_filter_sort;
index_bam;
refinem_outliers;
refinem_filter_outlier_bins;
run_gtdb_tk;
OPERATION_1;
OPERATION_2;
OPERATION_3;
metabat2;
filter_bins;
refinem_scaffold_stats;
checkm_unique;
recover_unmapped_reads;
taxonomy_table;
in;
out;
checkm_lineage_wf -> filter_bins  [key=0];
ccs_mapping -> ccs_map_filter_sort  [key=0];
ccs_map_filter_sort -> index_bam  [key=0];
ccs_map_filter_sort -> recover_unmapped_reads  [key=0];
ccs_map_filter_sort -> refinem_scaffold_stats  [key=0];
index_bam -> refinem_scaffold_stats  [key=0];
refinem_outliers -> refinem_filter_outlier_bins  [key=0];
refinem_filter_outlier_bins -> run_gtdb_tk  [key=0];
refinem_filter_outlier_bins -> taxonomy_table  [key=0];
run_gtdb_tk -> taxonomy_table  [key=0];
OPERATION_1 -> checkm_lineage_wf  [key=0];
OPERATION_1 -> filter_bins  [key=0];
OPERATION_2 -> checkm_unique  [key=0];
OPERATION_2 -> refinem_scaffold_stats  [key=0];
OPERATION_2 -> refinem_filter_outlier_bins  [key=0];
OPERATION_3 -> refinem_outliers  [key=0];
metabat2 -> OPERATION_1  [key=0];
filter_bins -> OPERATION_2  [key=0];
refinem_scaffold_stats -> OPERATION_3  [key=0];
checkm_unique -> out  [key=0];
recover_unmapped_reads -> out  [key=0];
taxonomy_table -> out  [key=0];
in -> ccs_mapping  [key=0];
in -> metabat2  [key=0];
}
