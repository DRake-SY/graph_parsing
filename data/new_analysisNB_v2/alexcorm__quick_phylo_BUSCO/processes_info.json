{
    "busco": {
        "name_process": "busco",
        "string_process": "\nprocess busco {\n\tcpus params.busco.cpus\n\tmodule 'busco/3.1.0'\n\t\n\tpublishDir \"${params.outdir}/1-busco\", mode: 'copy'\n\t\n\tinput:\n\tset name, file(fasta) from genomesFasta\n\taugustusConfig\n\tBUSCOodb\n\t\n\toutput:\n\tfile (\"run_${name}/*.{txt,tsv}\") into busco_summary_results\n\tfile (\"run_${name}/single_copy_busco_sequences_${name}.faa\") into busco_single_copy_proteins\n\t\n\tscript:\n\t\n\t\"\"\"\n\texport AUGUSTUS_CONFIG_PATH=${augustusConfig}\n\trun_BUSCO.py -i ${fasta} -o ${name} -m genome -l ${BUSCOodb} --cpu ${params.busco.cpus}\n\tcat run_${name}/single_copy_busco_sequences/*.faa > run_${name}/single_copy_busco_sequences_${name}.faa\n\t\"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "\t\"\"\"\n\texport AUGUSTUS_CONFIG_PATH=${augustusConfig}\n\trun_BUSCO.py -i ${fasta} -o ${name} -m genome -l ${BUSCOodb} --cpu ${params.busco.cpus}\n\tcat run_${name}/single_copy_busco_sequences/*.faa > run_${name}/single_copy_busco_sequences_${name}.faa\n\t\"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "genomesFasta"
        ],
        "nb_inputs": 1,
        "outputs": [
            "busco_summary_results",
            "busco_single_copy_proteins"
        ],
        "nb_outputs": 2,
        "name_workflow": "alexcorm__quick_phylo_BUSCO",
        "directive": [
            "cpus params.busco.cpus",
            "module 'busco/3.1.0'",
            "publishDir \"${params.outdir}/1-busco\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "concat_busco": {
        "name_process": "concat_busco",
        "string_process": "\nprocess concat_busco {\n\t\n\tpublishDir \"${params.outdir}/1-busco\", mode: 'copy'\n\t\n\tinput:\n\tfile fasta from busco_single_copy_proteins.collect()\n\t\n\toutput:\n\tfile \"single_copy_busco_sequences.fasta\" into busco_single_copy_proteins_concat\n\t\n\tscript:\n\t\"\"\"\n\tcat ${fasta} > single_copy_busco_sequences.fasta\n\t\"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "\t\"\"\"\n\tcat ${fasta} > single_copy_busco_sequences.fasta\n\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "busco_single_copy_proteins"
        ],
        "nb_inputs": 1,
        "outputs": [
            "busco_single_copy_proteins_concat"
        ],
        "nb_outputs": 1,
        "name_workflow": "alexcorm__quick_phylo_BUSCO",
        "directive": [
            "publishDir \"${params.outdir}/1-busco\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "filter_single_copy": {
        "name_process": "filter_single_copy",
        "string_process": "\nprocess filter_single_copy {\n\t\n\t                           \n\t\n\tpublishDir \"${params.outdir}/2-single-copy\", mode: 'copy'\n\t\n\tinput:\n\tfile fasta from busco_single_copy_proteins_concat\n\t\n\toutput:\n\tfile \"*.lst\" into busco_single_copy_proteins_list               \n\t                                                    \n\t\n\t                                                                                              \n\tscript:\n\t\"\"\"\n\tsingle_copies_busco.py -f ${fasta} -s params.species\n\t\"\"\"\t\t\n}",
        "nb_lignes_process": 18,
        "string_script": "\t\"\"\"\n\tsingle_copies_busco.py -f ${fasta} -s params.species\n\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "busco_single_copy_proteins_concat"
        ],
        "nb_inputs": 1,
        "outputs": [
            "busco_single_copy_proteins_list"
        ],
        "nb_outputs": 1,
        "name_workflow": "alexcorm__quick_phylo_BUSCO",
        "directive": [
            "publishDir \"${params.outdir}/2-single-copy\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "seqtk": {
        "name_process": "seqtk",
        "string_process": "\nprocess seqtk {\n\t\n\tmodule 'seqtk/1.3-r106'\n\t\n\tpublishDir \"${params.outdir}/2-single-copy\", mode: 'copy'\n\t\n\tinput:\n\tfile lst from busco_single_copy_proteins_list.flatten()\n\tfile fasta from busco_single_copy_proteins_concat\n\n\toutput:\n\tfile \"*.faa\" into busco_single_copy_proteins_toMafft\n\n\tscript:\n\t\"\"\"\n\tseqtk subseq -l 70 ${fasta} ${lst} > ${lst}.faa\n\t\"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "\t\"\"\"\n\tseqtk subseq -l 70 ${fasta} ${lst} > ${lst}.faa\n\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "seqtk"
        ],
        "tools_url": [
            "https://bio.tools/seqtk"
        ],
        "tools_dico": [
            {
                "name": "seqtk",
                "uri": "https://bio.tools/seqtk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2121",
                                    "term": "Sequence file editing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A tool for processing sequences in the FASTA or FASTQ format. It parses both FASTA and FASTQ files which can also be optionally compressed by gzip.",
                "homepage": "https://github.com/lh3/seqtk"
            }
        ],
        "inputs": [
            "busco_single_copy_proteins_list",
            "busco_single_copy_proteins_concat"
        ],
        "nb_inputs": 2,
        "outputs": [
            "busco_single_copy_proteins_toMafft"
        ],
        "nb_outputs": 1,
        "name_workflow": "alexcorm__quick_phylo_BUSCO",
        "directive": [
            "module 'seqtk/1.3-r106'",
            "publishDir \"${params.outdir}/2-single-copy\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "mafft": {
        "name_process": "mafft",
        "string_process": "\nprocess mafft {\n\t\n\tmodule 'mafft/7.407'\n\t\n\tpublishDir \"${params.outdir}/3-mafft\", mode: 'copy'\n\t\n\tinput:\n\tfile faa from busco_single_copy_proteins_toMafft\n\t\n\toutput:\n\tfile \"*.mafft\" into busco_single_copy_proteins_toGblocks\n\t\n\tscript:\n\t\"\"\"\n\tmafft --auto ${faa} > ${faa}.mafft\n\tsleep 4\n\t\"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "\t\"\"\"\n\tmafft --auto ${faa} > ${faa}.mafft\n\tsleep 4\n\t\"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "MAFFT"
        ],
        "tools_url": [
            "https://bio.tools/MAFFT"
        ],
        "tools_dico": [
            {
                "name": "MAFFT",
                "uri": "https://bio.tools/MAFFT",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0492",
                                    "term": "Multiple sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0492",
                                    "term": "Multiple alignment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            }
                        ]
                    }
                ],
                "description": "MAFFT (Multiple Alignment using Fast Fourier Transform) is a high speed multiple sequence alignment program.",
                "homepage": "http://mafft.cbrc.jp/alignment/server/index.html"
            }
        ],
        "inputs": [
            "busco_single_copy_proteins_toMafft"
        ],
        "nb_inputs": 1,
        "outputs": [
            "busco_single_copy_proteins_toGblocks"
        ],
        "nb_outputs": 1,
        "name_workflow": "alexcorm__quick_phylo_BUSCO",
        "directive": [
            "module 'mafft/7.407'",
            "publishDir \"${params.outdir}/3-mafft\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "gblocks": {
        "name_process": "gblocks",
        "string_process": "\nprocess gblocks {\n\t                                        \n\tvalidExitStatus 1\n\t\n\tmodule 'Gblocks/0.91b'\n\t\n\tpublishDir \"${params.outdir}/4-gblocks\", mode: 'copy'\n\t\n\tinput:\n\tfile aln from busco_single_copy_proteins_toGblocks\n\t\n\toutput:\n\tfile \"*-gb\" into busco_single_copy_proteins_toCleanHeader\n\t\n\tscript:\n\t\"\"\"\n\tGblocks ${aln} -t=p -p=n -b3=8 -b4=10 -b5=h\n\t\"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "\t\"\"\"\n\tGblocks ${aln} -t=p -p=n -b3=8 -b4=10 -b5=h\n\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "gblocks"
        ],
        "tools_url": [
            "https://bio.tools/gblocks"
        ],
        "tools_dico": [
            {
                "name": "gblocks",
                "uri": "https://bio.tools/gblocks",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0258",
                                    "term": "Sequence alignment analysis"
                                }
                            ],
                            []
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            },
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "Cleaning aligned sequences.",
                "homepage": "http://www.embl-heidelberg.de/~castresa/Gblocks/Gblocks.html"
            }
        ],
        "inputs": [
            "busco_single_copy_proteins_toGblocks"
        ],
        "nb_inputs": 1,
        "outputs": [
            "busco_single_copy_proteins_toCleanHeader"
        ],
        "nb_outputs": 1,
        "name_workflow": "alexcorm__quick_phylo_BUSCO",
        "directive": [
            "validExitStatus 1",
            "module 'Gblocks/0.91b'",
            "publishDir \"${params.outdir}/4-gblocks\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "cleanHeader": {
        "name_process": "cleanHeader",
        "string_process": "\nprocess cleanHeader {\n\t\n\tpublishDir \"${params.outdir}/5-cat\", mode: 'copy'\n\t\n\tinput:\n\tfile gblocks from busco_single_copy_proteins_toCleanHeader\n\t\n\toutput:\n\tfile \"*.fas\" into busco_single_copy_proteins_toFASconCAT\n\t\n\tscript:\n\t\"\"\"\n\tcleanHeaderFromBuscoSG.py -f ${gblocks} > ${gblocks}.fas\n\t\"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "\t\"\"\"\n\tcleanHeaderFromBuscoSG.py -f ${gblocks} > ${gblocks}.fas\n\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "busco_single_copy_proteins_toCleanHeader"
        ],
        "nb_inputs": 1,
        "outputs": [
            "busco_single_copy_proteins_toFASconCAT"
        ],
        "nb_outputs": 1,
        "name_workflow": "alexcorm__quick_phylo_BUSCO",
        "directive": [
            "publishDir \"${params.outdir}/5-cat\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "FASconCAT": {
        "name_process": "FASconCAT",
        "string_process": "\nprocess FASconCAT {\n\t\n\tmodule 'FASconCAT/1.0'\n\t\n\tpublishDir \"${params.outdir}/5-cat\", mode: 'copy'\n\t\n\tinput:\n\tfile gblocks from busco_single_copy_proteins_toFASconCAT.collect()\n\t\n\toutput:\n\tfile \"FcC_smatrix.fas\" into busco_single_copy_proteins_toProTest\n\t\n\tscript:\n\t\"\"\"\n\tFASconCAT_v1.0.pl -s\n\t\"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "\t\"\"\"\n\tFASconCAT_v1.0.pl -s\n\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "busco_single_copy_proteins_toFASconCAT"
        ],
        "nb_inputs": 1,
        "outputs": [
            "busco_single_copy_proteins_toProTest"
        ],
        "nb_outputs": 1,
        "name_workflow": "alexcorm__quick_phylo_BUSCO",
        "directive": [
            "module 'FASconCAT/1.0'",
            "publishDir \"${params.outdir}/5-cat\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "ProtTest": {
        "name_process": "ProtTest",
        "string_process": "\nprocess ProtTest {\n\tcpus params.prottest.cpus\n\tmodule 'ProtTest/3.4.2'\n\t\n\tpublishDir \"${params.outdir}/5-cat\", mode: 'copy'\n\t\n\tinput:\n\tfile matrix from busco_single_copy_proteins_toProTest\n\t\n\toutput:\n\tfile \"prottest.txt\" into busco_single_copy_proteins_toProTestResult\n\t\n\tscript:\n\t\"\"\"\n\tprottest3 -i ${matrix} -all-distributions -F -AIC -BIC -tc 0.5 -o prottest.txt -threads ${params.prottest.cpus}\n\t\"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "\t\"\"\"\n\tprottest3 -i ${matrix} -all-distributions -F -AIC -BIC -tc 0.5 -o prottest.txt -threads ${params.prottest.cpus}\n\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "busco_single_copy_proteins_toProTest"
        ],
        "nb_inputs": 1,
        "outputs": [
            "busco_single_copy_proteins_toProTestResult"
        ],
        "nb_outputs": 1,
        "name_workflow": "alexcorm__quick_phylo_BUSCO",
        "directive": [
            "cpus params.prottest.cpus",
            "module 'ProtTest/3.4.2'",
            "publishDir \"${params.outdir}/5-cat\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    }
}