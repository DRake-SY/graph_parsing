{
    "index": {
        "name_process": "index",
        "string_process": "\nprocess index {\n    \n    tag \"$transcriptome\"\n   \n    cpus 4\n\n    memory '30 GB'\n \n    input:\n    file transcriptome from file(params.transcriptome)   \n \n    output:\n    file 'index' into index_ch\n\n    script:\n    \"\"\"\n    salmon index --threads $task.cpus -t $transcriptome -i index\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n    salmon index --threads $task.cpus -t $transcriptome -i index\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "Salmon"
        ],
        "tools_url": [
            "https://bio.tools/salmon"
        ],
        "tools_dico": [
            {
                "name": "Salmon",
                "uri": "https://bio.tools/salmon",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Gene expression"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Expression"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantification"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression data analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantitation"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3496",
                                "term": "RNA sequence (raw)"
                            },
                            {
                                "uri": "http://edamontology.org/data_2093",
                                "term": "Data reference"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "A tool for transcript expression quantification from RNA-seq data",
                "homepage": "https://github.com/COMBINE-lab/salmon"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [
            "index_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "alperyilmaz__nextflow-rnaseq",
        "directive": [
            "tag \"$transcriptome\"",
            "cpus 4",
            "memory '30 GB'"
        ],
        "when": "",
        "stub": ""
    },
    "parseEncode": {
        "name_process": "parseEncode",
        "string_process": "\nprocess parseEncode {\n\n    tag \"$params.metadata\"\n\n    cpus 2\n\n    memory '4 GB'\n\n    input:\n    file(metadata) from Channel.fromPath(params.metadata)\n\n\toutput:\n    stdout into (encode_files_ch_1, encode_files_ch_2)\n\n    \"\"\"\n    #!/usr/bin/env python\n\n    from __future__ import print_function\n    import sys\n    from collections import defaultdict\n\n    sra = []\n    with open(\"$metadata\") as f:\n        next(f)\n        for line in f:\n            data = line.rstrip().split(\\\"\\t\\\")\n            file_type = data[1]\n            sample_type = data[6].replace('\\\\'','').replace(' ','_')\n            if data[40]:\n                dbxref = data[40].split(':')[1]\n                seq_type = data[33]\n                strand_specific = data[23]\n                if file_type == \"fastq\" and seq_type == \"paired-ended\":\n                    if not dbxref in sra:\n                        sra_id = dbxref.split(\"SRR\")[1]\n                        url = \"http://ftp.sra.ebi.ac.uk/vol1/fastq/{0}/\".format(dbxref[0:6])\n                        if len(sra_id) == 6: url += \"{0}\".format(dbxref)\n                        if len(sra_id) == 7: url += \"00{0}/{1}\".format(sra_id[-1],dbxref)\n                        if len(sra_id) == 8: url += \"0{0}/{1}\".format(sra_id[-2:-1],dbxref)\n                        if len(sra_id) == 9: url += \"{0}/{1}\".format(sra_id[-3:-1],dbxref)\n                        print(\",\".join([dbxref,sample_type,strand_specific,url]))\n                        sra.append(dbxref)\n    \"\"\"\n}",
        "nb_lignes_process": 43,
        "string_script": "\"\"\"\n    #!/usr/bin/env python\n\n    from __future__ import print_function\n    import sys\n    from collections import defaultdict\n\n    sra = []\n    with open(\"$metadata\") as f:\n        next(f)\n        for line in f:\n            data = line.rstrip().split(\\\"\\t\\\")\n            file_type = data[1]\n            sample_type = data[6].replace('\\\\'','').replace(' ','_')\n            if data[40]:\n                dbxref = data[40].split(':')[1]\n                seq_type = data[33]\n                strand_specific = data[23]\n                if file_type == \"fastq\" and seq_type == \"paired-ended\":\n                    if not dbxref in sra:\n                        sra_id = dbxref.split(\"SRR\")[1]\n                        url = \"http://ftp.sra.ebi.ac.uk/vol1/fastq/{0}/\".format(dbxref[0:6])\n                        if len(sra_id) == 6: url += \"{0}\".format(dbxref)\n                        if len(sra_id) == 7: url += \"00{0}/{1}\".format(sra_id[-1],dbxref)\n                        if len(sra_id) == 8: url += \"0{0}/{1}\".format(sra_id[-2:-1],dbxref)\n                        if len(sra_id) == 9: url += \"{0}/{1}\".format(sra_id[-3:-1],dbxref)\n                        print(\",\".join([dbxref,sample_type,strand_specific,url]))\n                        sra.append(dbxref)\n    \"\"\"",
        "nb_lignes_script": 28,
        "language_script": "python",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [
            ""
        ],
        "nb_outputs": 1,
        "name_workflow": "alperyilmaz__nextflow-rnaseq",
        "directive": [
            "tag \"$params.metadata\"",
            "cpus 2",
            "memory '4 GB'"
        ],
        "when": "",
        "stub": ""
    },
    "quant": {
        "name_process": "quant",
        "string_process": "\nprocess quant {\n    \n    tag \"$dbxref\"\n    \n    cpus 8\n\n    memory '16 GB' \n \n    input:\n    file index from index_ch\n    set dbxref,sample_type,strand_specific,url from encode_files_ch_1.splitCsv()\n \n    output:\n    file(\"${sample_type}-${dbxref}\") into quant_ch\n\n    script:\n    def libType = strand_specific == \"True\" ? \"SF\" : \"U\"\n    \"\"\"\n    wget -q ${url}/${dbxref}_1.fastq.gz\n    wget -q ${url}/${dbxref}_2.fastq.gz\n    salmon quant --threads $task.cpus --libType=${libType} -i index -1 ${dbxref}_1.fastq.gz -2 ${dbxref}_2.fastq.gz -o ${sample_type}-${dbxref}\n    \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "    def libType = strand_specific == \"True\" ? \"SF\" : \"U\"\n    \"\"\"\n    wget -q ${url}/${dbxref}_1.fastq.gz\n    wget -q ${url}/${dbxref}_2.fastq.gz\n    salmon quant --threads $task.cpus --libType=${libType} -i index -1 ${dbxref}_1.fastq.gz -2 ${dbxref}_2.fastq.gz -o ${sample_type}-${dbxref}\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "Salmon"
        ],
        "tools_url": [
            "https://bio.tools/salmon"
        ],
        "tools_dico": [
            {
                "name": "Salmon",
                "uri": "https://bio.tools/salmon",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Gene expression"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Expression"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantification"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression data analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantitation"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3496",
                                "term": "RNA sequence (raw)"
                            },
                            {
                                "uri": "http://edamontology.org/data_2093",
                                "term": "Data reference"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "A tool for transcript expression quantification from RNA-seq data",
                "homepage": "https://github.com/COMBINE-lab/salmon"
            }
        ],
        "inputs": [
            "index_ch",
            "encode_files_ch_1"
        ],
        "nb_inputs": 2,
        "outputs": [
            "quant_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "alperyilmaz__nextflow-rnaseq",
        "directive": [
            "tag \"$dbxref\"",
            "cpus 8",
            "memory '16 GB'"
        ],
        "when": "",
        "stub": ""
    },
    "fastqc": {
        "name_process": "fastqc",
        "string_process": "\nprocess fastqc {\n    \n    tag \"FASTQC on $dbxref\"\n\n    cpus 2\n\n    memory '8 GB'\n \n    input:\n    set dbxref,sample_type,strand_specific,url from encode_files_ch_2.splitCsv()\n\n    output:\n    file(\"fastqc_${dbxref}_logs\") into fastqc_ch\n\n\n    script:\n    \"\"\"\n    wget -q ${url}/${dbxref}_1.fastq.gz\n    wget -q ${url}/${dbxref}_2.fastq.gz\n    mkdir fastqc_${dbxref}_logs\n    fastqc -t $task.cpus -o fastqc_${dbxref}_logs -f fastq -q ${dbxref}_1.fastq.gz ${dbxref}_2.fastq.gz\n    \"\"\"  \n}",
        "nb_lignes_process": 22,
        "string_script": "    \"\"\"\n    wget -q ${url}/${dbxref}_1.fastq.gz\n    wget -q ${url}/${dbxref}_2.fastq.gz\n    mkdir fastqc_${dbxref}_logs\n    fastqc -t $task.cpus -o fastqc_${dbxref}_logs -f fastq -q ${dbxref}_1.fastq.gz ${dbxref}_2.fastq.gz\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "encode_files_ch_2"
        ],
        "nb_inputs": 1,
        "outputs": [
            "fastqc_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "alperyilmaz__nextflow-rnaseq",
        "directive": [
            "tag \"FASTQC on $dbxref\"",
            "cpus 2",
            "memory '8 GB'"
        ],
        "when": "",
        "stub": ""
    },
    "multiqc": {
        "name_process": "multiqc",
        "string_process": "\nprocess multiqc {\n    \n    cpus 2\n\n    memory '8 GB'\n    \n    publishDir params.output, mode:'copy'\n       \n    input:\n    file('*') from quant_ch.mix(fastqc_ch).collect()\n    \n    output:\n    file('multiqc_report.html')  \n     \n    script:\n    \"\"\"\n    multiqc . \n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n    multiqc . \n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [
            "quant_ch",
            "fastqc_ch"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "alperyilmaz__nextflow-rnaseq",
        "directive": [
            "cpus 2",
            "memory '8 GB'",
            "publishDir params.output, mode:'copy'"
        ],
        "when": "",
        "stub": ""
    }
}