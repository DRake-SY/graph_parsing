{
    "convert_23andMe_to_plink": {
        "name_process": "convert_23andMe_to_plink",
        "string_process": "\nprocess convert_23andMe_to_plink {\n  tag \"${name}\"\n  container 'lifebitai/ancestry'\n\n  input:\n  set val(name), file(genotype_file) from genoChannel\n\n  output:\n  set val(name), file(\"${name}.map\"), file(\"${name}.ped\") into plinkGenotypes, plinkGenotypesCombine\n\n  script:\n  \"\"\"\n  23andme-to-plink.py $genotype_file\n  \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "  \"\"\"\n  23andme-to-plink.py $genotype_file\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "genoChannel"
        ],
        "nb_inputs": 1,
        "outputs": [
            "plinkGenotypes",
            "plinkGenotypesCombine"
        ],
        "nb_outputs": 2,
        "name_workflow": "raonyguimaraes__fast-ngs-admix",
        "directive": [
            "tag \"${name}\"",
            "container 'lifebitai/ancestry'"
        ],
        "when": "",
        "stub": ""
    },
    "plink": {
        "name_process": "plink",
        "string_process": "\nprocess plink {\n  tag \"${name}\"\n  container 'alliecreason/plink:1.90'\n  publishDir \"${params.outdir}/plink\", mode: 'copy'\n\n  input:\n  set val(name), file(map), file(ped) from plinkGenotypes\n\n  output:\n  set val(name), file(\"${name}.map\"), file(\"${name}.ped\"), file(\"${name}.bed\"), file(\"${name}.bim\"), file(\"${name}.fam\") into plink, plink2\n\n  script:\n  \"\"\"\n  plink --file ${name} --list-duplicate-vars ids-only suppress-first\n  plink --file ${name} --recode -exclude plink.dupvar --out ${name}\n  plink --file ${name} --out ${name}\n  \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "  \"\"\"\n  plink --file ${name} --list-duplicate-vars ids-only suppress-first\n  plink --file ${name} --recode -exclude plink.dupvar --out ${name}\n  plink --file ${name} --out ${name}\n  \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "pLink"
        ],
        "tools_url": [
            "https://bio.tools/pLink-2"
        ],
        "tools_dico": [
            {
                "name": "pLink",
                "uri": "https://bio.tools/pLink-2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3520",
                            "term": "Proteomics experiment"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0154",
                            "term": "Small molecules"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0121",
                            "term": "Proteomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3649",
                                    "term": "Target-Decoy"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "Protein fragment weight comparison"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "PMF"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "Peptide mass fingerprinting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2929",
                                    "term": "Protein fingerprinting"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A high-speed search engine pLink 2 with systematic evaluation for proteome-scale identification of cross-linked peptides.",
                "homepage": "http://pfind.ict.ac.cn/software/pLink/index.html"
            }
        ],
        "inputs": [
            "plinkGenotypes"
        ],
        "nb_inputs": 1,
        "outputs": [
            "plink",
            "plink2"
        ],
        "nb_outputs": 2,
        "name_workflow": "raonyguimaraes__fast-ngs-admix",
        "directive": [
            "tag \"${name}\"",
            "container 'alliecreason/plink:1.90'",
            "publishDir \"${params.outdir}/plink\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "fastNGSadmix": {
        "name_process": "fastNGSadmix",
        "string_process": "\nprocess fastNGSadmix {\n  tag \"${name}\"\n  container 'lifebitai/ancestry'\n  publishDir \"${params.outdir}/fastNGSadmix\", mode: 'copy'\n\n  input:\n  set val(name), file(map), file(ped), file(bed), file(bim), file(fam), file(ref), file(nname) from fastngsadmix\n\n  output:\n  set val(name), file(\"${name}.log\"), file(\"${name}.qopt\") into fastngsadmix_out\n\n  when: params.tool.toLowerCase().contains(\"fastngsadmix\")\n\n  script:\n  \"\"\"\n  fastNGSadmix -plink ${name} -fname $ref -Nname $nname -out ${name} -whichPops all\n  \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "  \"\"\"\n  fastNGSadmix -plink ${name} -fname $ref -Nname $nname -out ${name} -whichPops all\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "fastngsadmix"
        ],
        "nb_inputs": 1,
        "outputs": [
            "fastngsadmix_out"
        ],
        "nb_outputs": 1,
        "name_workflow": "raonyguimaraes__fast-ngs-admix",
        "directive": [
            "tag \"${name}\"",
            "container 'lifebitai/ancestry'",
            "publishDir \"${params.outdir}/fastNGSadmix\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "iAdmix": {
        "name_process": "iAdmix",
        "string_process": "\nprocess iAdmix {\n  tag \"${name}\"\n  container 'lifebitai/ancestry'\n  publishDir \"${params.outdir}/iAdmix\", mode: 'copy'\n\n  input:\n  set val(name), file(map), file(ped), file(bed), file(bim), file(fam), file(ref) from iadmix\n\n  output:\n  set val(name), file(\"out.${name}.input\"), file(\"out.${name}.input.ancestry\"), file(\"${name}_iadmix.log\"), file(\"${name}_iadmix.csv\") into iadmix_out\n\n  when: params.tool.toLowerCase().contains(\"iadmix\")\n\n  script:\n  \"\"\"\n  runancestry.py --plink ${name} -f $ref -o out --path /ancestry/\n  cp .command.log ${name}_iadmix.log\n\n  # generate csv file from iadmix output\n  grep -Poo \"[a-zA-Z]+:[\\\\S]+\" ${name}_iadmix.log | head -n 27 > tmp.txt\n  awk -F: '{print \\$1}' tmp.txt > pop.txt\n  awk -F: '{print \\$2}' tmp.txt > prop.txt\n  awk 'BEGIN { ORS = \",\" } { print }' pop.txt | sed 's/,\\$//g' > ${name}_iadmix.csv\n  sed -i -e '\\$a\\\\' ${name}_iadmix.csv\n  awk 'BEGIN { ORS = \",\" } { print }' prop.txt | sed 's/,\\$//g' >> ${name}_iadmix.csv\n  \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "  \"\"\"\n  runancestry.py --plink ${name} -f $ref -o out --path /ancestry/\n  cp .command.log ${name}_iadmix.log\n\n  # generate csv file from iadmix output\n  grep -Poo \"[a-zA-Z]+:[\\\\S]+\" ${name}_iadmix.log | head -n 27 > tmp.txt\n  awk -F: '{print \\$1}' tmp.txt > pop.txt\n  awk -F: '{print \\$2}' tmp.txt > prop.txt\n  awk 'BEGIN { ORS = \",\" } { print }' pop.txt | sed 's/,\\$//g' > ${name}_iadmix.csv\n  sed -i -e '\\$a\\\\' ${name}_iadmix.csv\n  awk 'BEGIN { ORS = \",\" } { print }' prop.txt | sed 's/,\\$//g' >> ${name}_iadmix.csv\n  \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "iadmix"
        ],
        "nb_inputs": 1,
        "outputs": [
            "iadmix_out"
        ],
        "nb_outputs": 1,
        "name_workflow": "raonyguimaraes__fast-ngs-admix",
        "directive": [
            "tag \"${name}\"",
            "container 'lifebitai/ancestry'",
            "publishDir \"${params.outdir}/iAdmix\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "table_report": {
        "name_process": "table_report",
        "string_process": "\nprocess table_report {\n  publishDir \"${params.outdir}/Visualisations\", mode: 'copy'\n  container 'lifebitai/vizjson'\n\n  input:\n  set val(name), file(input), file(ancestry), file(log), file(csv) from iadmix_out\n\n  output:\n  file('.report.json') into report\n\n  when: params.tool.toLowerCase().contains(\"iadmix\")\n\n  script:\n  \"\"\"\n  csv2json.py $csv \"Ancestry admixture proportion estimates\" ${name}_iadmix.json\n  combine_reports.py .\n  \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "  \"\"\"\n  csv2json.py $csv \"Ancestry admixture proportion estimates\" ${name}_iadmix.json\n  combine_reports.py .\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "iadmix_out"
        ],
        "nb_inputs": 1,
        "outputs": [
            "report"
        ],
        "nb_outputs": 1,
        "name_workflow": "raonyguimaraes__fast-ngs-admix",
        "directive": [
            "publishDir \"${params.outdir}/Visualisations\", mode: 'copy'",
            "container 'lifebitai/vizjson'"
        ],
        "when": "",
        "stub": ""
    }
}