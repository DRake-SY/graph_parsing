{
    "PrankAlignment": {
        "name_process": "PrankAlignment",
        "string_process": "\nprocess PrankAlignment {\n    input:\n    file fasta\n\n    output:\n    file \"${fasta}.nex\" into aln\n\n    script:\n    \"\"\"\n    module load prank\n    module load python\n    prank -d=$fasta -o=${fasta}\n    OMP_NUM_THREADS=1 python3 $tools convert_aln \\\n        -i ${fasta}.best.fas -if \"fasta\" -o ${fasta}.nex -of \"nexus\"\n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "    \"\"\"\n    module load prank\n    module load python\n    prank -d=$fasta -o=${fasta}\n    OMP_NUM_THREADS=1 python3 $tools convert_aln \\\n        -i ${fasta}.best.fas -if \"fasta\" -o ${fasta}.nex -of \"nexus\"\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "PRANK"
        ],
        "tools_url": [
            "https://bio.tools/prank"
        ],
        "tools_dico": [
            {
                "name": "PRANK",
                "uri": "https://bio.tools/prank",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2451",
                                    "term": "Sequence comparison"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0492",
                                    "term": "Multiple sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0492",
                                    "term": "Multiple alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Probabilistic multiple alignment program for DNA, codon and amino-acid sequences.",
                "homepage": "http://wasabiapp.org/software/prank/"
            }
        ],
        "inputs": [
            "fasta"
        ],
        "nb_inputs": 1,
        "outputs": [
            "aln"
        ],
        "nb_outputs": 1,
        "name_workflow": "arzwa__whaleprep",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "MrBayesMCMC": {
        "name_process": "MrBayesMCMC",
        "string_process": "\nprocess MrBayesMCMC {\n    input:\n    file aln\n\n    output:\n    file \"${aln}_mb/${aln}.treesample\" into mb\n\n    script:\n    \"\"\"\n    module load mrbayes\n    module load python\n    mkdir ${aln}_mb\n    sed  \"s/|/_/g\" ${aln} > ${aln}_mb/${aln}  # get alignment (replace | by _)\n    cd ${aln}_mb\n    echo \"set autoclose=yes nowarn=yes\" > ./mbconf.txt\n    echo \"execute ./${aln}\" >> ./mbconf.txt\n    echo \"prset aamodelpr=fixed(lg)\" >> ./mbconf.txt  # LG model\n    echo \"lset rates=gamma\" >> ./mbconf.txt           # G  model\n    echo \"mcmcp diagnfreq=100\" >> ./mbconf.txt        # diagnostics every 100 gns\n    echo \"mcmcp samplefreq=$params.samplefreq\" >> ./mbconf.txt        # sample every 10 gns\n    echo \"mcmc ngen=$params.ngen savebrlens=yes nchains=1\" >> ./mbconf.txt\n    echo \"sumt\" >> ./mbconf.txt\n    echo \"sump\" >> ./mbconf.txt\n    echo \"quit\" >> ./mbconf.txt\n\n    mb < ./mbconf.txt > ./log.txt\n    OMP_NUM_THREADS=1 python3 $tools mbtrees ${aln}.run1.t ${aln}.treesample\n    \"\"\"\n}",
        "nb_lignes_process": 28,
        "string_script": "    \"\"\"\n    module load mrbayes\n    module load python\n    mkdir ${aln}_mb\n    sed  \"s/|/_/g\" ${aln} > ${aln}_mb/${aln}  # get alignment (replace | by _)\n    cd ${aln}_mb\n    echo \"set autoclose=yes nowarn=yes\" > ./mbconf.txt\n    echo \"execute ./${aln}\" >> ./mbconf.txt\n    echo \"prset aamodelpr=fixed(lg)\" >> ./mbconf.txt  # LG model\n    echo \"lset rates=gamma\" >> ./mbconf.txt           # G  model\n    echo \"mcmcp diagnfreq=100\" >> ./mbconf.txt        # diagnostics every 100 gns\n    echo \"mcmcp samplefreq=$params.samplefreq\" >> ./mbconf.txt        # sample every 10 gns\n    echo \"mcmc ngen=$params.ngen savebrlens=yes nchains=1\" >> ./mbconf.txt\n    echo \"sumt\" >> ./mbconf.txt\n    echo \"sump\" >> ./mbconf.txt\n    echo \"quit\" >> ./mbconf.txt\n\n    mb < ./mbconf.txt > ./log.txt\n    OMP_NUM_THREADS=1 python3 $tools mbtrees ${aln}.run1.t ${aln}.treesample\n    \"\"\"",
        "nb_lignes_script": 19,
        "language_script": "bash",
        "tools": [
            "BYKdb",
            "MBV"
        ],
        "tools_url": [
            "https://bio.tools/bykdb",
            "https://bio.tools/mbv"
        ],
        "tools_dico": [
            {
                "name": "BYKdb",
                "uri": "https://bio.tools/bykdb",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0623",
                            "term": "Gene and protein families"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Proteins"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0623",
                            "term": "Genes, gene family or system"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0224",
                                    "term": "Query and retrieval"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "Gene-set enrichment analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0361",
                                    "term": "Sequence annotation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2479",
                                    "term": "Protein sequence analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0224",
                                    "term": "Database retrieval"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "GSEA"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "Functional enrichment analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2436",
                                    "term": "Gene-set over-represenation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2479",
                                    "term": "Sequence analysis (protein)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Bacterial protein tYrosine Kinase database (BYKdb). Bacterial tyrosine-kinases share no resemblance with their eukaryotic counterparts and they have been unified in a new protein family named BY-kinases. However, BY-kinase sequence annotations in primary databases remain incomplete. This prompted us to develop a specialized database of computer-annotated BY-kinase sequences.",
                "homepage": "http://bykdb.ibcp.fr/BYKdb/"
            },
            {
                "name": "MBV",
                "uri": "https://bio.tools/mbv",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype resources"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Method to solve sample mislabeling and detect technical bias in large combined genotype and sequencing assay datasets.",
                "homepage": "https://qtltools.github.io/qtltools/"
            }
        ],
        "inputs": [
            "aln"
        ],
        "nb_inputs": 1,
        "outputs": [
            "mb"
        ],
        "nb_outputs": 1,
        "name_workflow": "arzwa__whaleprep",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "AleObserve": {
        "name_process": "AleObserve",
        "string_process": "\nprocess AleObserve {\n    publishDir \"${params.out}\"\n\n    input:\n    file mb\n\n    output:\n    file \"${mb}.ale\" into ale\n\n    script:\n    \"\"\"\n    module load ALE_trees\n    ALEobserve $mb burnin=$params.burnin\n    \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "    \"\"\"\n    module load ALE_trees\n    ALEobserve $mb burnin=$params.burnin\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "mb"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ale"
        ],
        "nb_outputs": 1,
        "name_workflow": "arzwa__whaleprep",
        "directive": [
            "publishDir \"${params.out}\""
        ],
        "when": "",
        "stub": ""
    }
}