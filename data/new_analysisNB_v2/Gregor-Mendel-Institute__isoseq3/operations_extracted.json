{
    "OPERATION_1": {
        "string": "Channel\n    .fromFilePairs(params.input + '*.{bam,bam.pbi}') { file -> file.name.replaceAll(/.bam|.pbi$/,'') }\n    .ifEmpty { error \"Cannot find matching bam and pbi files: $params.input. Make sure your bam files are pb indexed.\" }\n    .set { ccs_in }",
        "origin": [
            [
                "params.input + '*.{bam,bam.pbi}'",
                "A"
            ]
        ],
        "gives": [
            [
                "ccs_in",
                "P"
            ]
        ]
    },
    "OPERATION_2": {
        "string": "Channel\n    .fromPath(params.input + '*.bam')\n    .ifEmpty { error \"Cannot find matching bam files: $params.input.\" }\n    .tap { bam_files }\n    .map{ file -> tuple(file.name.replaceAll(/.bam$/,''), file) }\n    .tap { bam_names }",
        "origin": [
            [
                "params.input + '*.bam'",
                "A"
            ]
        ],
        "gives": [
            [
                "bam_files",
                "P"
            ],
            [
                "bam_names",
                "P"
            ]
        ]
    },
    "OPERATION_3": {
        "string": "Channel\n    .fromPath(params.primers)\n    .ifEmpty { error \"Cannot find primer file: $params.primers\" }\n    .into { primers_remove; primers_refine }",
        "origin": [
            [
                "params.primers",
                "A"
            ]
        ],
        "gives": [
            [
                "primers_remove",
                "P"
            ],
            [
                "primers_refine",
                "P"
            ]
        ]
    },
    "OPERATION_4": {
        "string": "Channel\n    .fromPath(params.ref_fasta)\n    .ifEmpty { error \"Cannot find primer file: $params.primers\" }\n    .set {ref_fasta}",
        "origin": [
            [
                "params.ref_fasta",
                "A"
            ]
        ],
        "gives": [
            [
                "ref_fasta",
                "P"
            ]
        ]
    },
    "OPERATION_5": {
        "string": "Channel\n    .fromPath(params.input + '*.bam.pbi')\n    .ifEmpty { error \"Cannot find matching bam.pbi files: $params.input.\" }\n    .into { pbi_merge_trans; pbi_merge_sub; pbi_polish }",
        "origin": [
            [
                "params.input + '*.bam.pbi'",
                "A"
            ]
        ],
        "gives": [
            [
                "pbi_merge_trans",
                "P"
            ],
            [
                "pbi_merge_sub",
                "P"
            ],
            [
                "pbi_polish",
                "P"
            ]
        ]
    }
}