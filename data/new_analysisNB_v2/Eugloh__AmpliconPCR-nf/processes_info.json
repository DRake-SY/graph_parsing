{
    "fastqc_fastq": {
        "name_process": "fastqc_fastq",
        "string_process": "\nprocess fastqc_fastq {\n  publishDir 'out/fastqc/' , mode: 'copy', overwrite: false\n\n  input:\n  set pair_id, file(reads) from read_files_fastqc\n\n  output:\n    file \"*.{zip,html}\" into fastqc_report\n    stdout into name\n\n  script:\n  \"\"\"\n  fastqc --quiet --threads ${task.cpus} --format fastq --outdir ./ \\\n  ${reads[0]} ${reads[1]}\n  \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "  \"\"\"\n  fastqc --quiet --threads ${task.cpus} --format fastq --outdir ./ \\\n  ${reads[0]} ${reads[1]}\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "read_files_fastqc"
        ],
        "nb_inputs": 1,
        "outputs": [
            "fastqc_report",
            "name"
        ],
        "nb_outputs": 2,
        "name_workflow": "Eugloh__AmpliconPCR-nf",
        "directive": [
            "publishDir 'out/fastqc/' , mode: 'copy', overwrite: false"
        ],
        "when": "",
        "stub": ""
    },
    "multiqc": {
        "name_process": "multiqc",
        "string_process": "\nprocess multiqc {\n\n  publishDir 'out/multiqc/', mode: 'copy', overwrite: false\n  cpus = 1\n\n  input:\n    file report from fastqc_report.collect()\n\n  output:\n    file \"*multiqc_*\" into multiqc_report\n\n  script:\n  \"\"\"\n  multiqc -f .\n  \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "  \"\"\"\n  multiqc -f .\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [
            "fastqc_report"
        ],
        "nb_inputs": 1,
        "outputs": [
            "multiqc_report"
        ],
        "nb_outputs": 1,
        "name_workflow": "Eugloh__AmpliconPCR-nf",
        "directive": [
            "publishDir 'out/multiqc/', mode: 'copy', overwrite: false",
            "cpus = 1"
        ],
        "when": "",
        "stub": ""
    },
    "trim_galore": {
        "name_process": "trim_galore",
        "string_process": "\nprocess trim_galore {\n    publishDir 'out/trimgalore/', mode: 'copy', overwrite: false,\n        saveAs: {filename ->\n            if (filename.indexOf(\"_fastqc\") > 0) \"FastQC/$filename\"\n            else if (filename.indexOf(\"trimming_report.txt\") > 0) \"logs/$filename\"\n            else if (filename.indexOf(\"fq.gz\") > 0) \"out/$filename\"\n            else null}\n\n    input:\n    set val(name), file(reads) from read_files_trimG\n\n    output:\n    set val(name), file(\"*_val_*.fq.gz\") into fastq_files_trim    \n    file(\"*_unpaired_*.fq.gz\") into unpaired\n    file(\"*trimming_report.txt\") into trimgalore_results\n    file(\"*_fastqc.{zip,html}\") into trimgalore_fastqc_reports\n\n\n    script:\n        \"\"\"\n        echo ${name};\n        echo ${reads};\n\n        trim_galore --paired --fastqc --length 30 --retain_unpaired --gzip ${reads[0]} ${reads[1]} \n  \n        \"\"\"\n    }",
        "nb_lignes_process": 26,
        "string_script": "        \"\"\"\n        echo ${name};\n        echo ${reads};\n\n        trim_galore --paired --fastqc --length 30 --retain_unpaired --gzip ${reads[0]} ${reads[1]} \n  \n        \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "read_files_trimG"
        ],
        "nb_inputs": 1,
        "outputs": [
            "fastq_files_trim",
            "unpaired",
            "trimgalore_results",
            "trimgalore_fastqc_reports"
        ],
        "nb_outputs": 4,
        "name_workflow": "Eugloh__AmpliconPCR-nf",
        "directive": [
            "publishDir 'out/trimgalore/', mode: 'copy', overwrite: false , saveAs: {filename -> if (filename.indexOf(\"_fastqc\") > 0) \"FastQC/$filename\" else if (filename.indexOf(\"trimming_report.txt\") > 0) \"logs/$filename\" else if (filename.indexOf(\"fq.gz\") > 0) \"out/$filename\" else null}"
        ],
        "when": "",
        "stub": ""
    },
    "multiqc_trim": {
        "name_process": "multiqc_trim",
        "string_process": "\nprocess multiqc_trim {\n\n  publishDir 'out/trimgalore/multiqc/', mode: 'copy' , overwrite: false\n  cpus = 1\n\n  input:\n    file report from trimgalore_fastqc_reports.collect()\n\n  output:\n    file \"*multiqc_*\" into multiqc_trimgalore_report\n\n  script:\n  \"\"\"\n  multiqc -f .\n  \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "  \"\"\"\n  multiqc -f .\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [
            "trimgalore_fastqc_reports"
        ],
        "nb_inputs": 1,
        "outputs": [
            "multiqc_trimgalore_report"
        ],
        "nb_outputs": 1,
        "name_workflow": "Eugloh__AmpliconPCR-nf",
        "directive": [
            "publishDir 'out/trimgalore/multiqc/', mode: 'copy' , overwrite: false",
            "cpus = 1"
        ],
        "when": "",
        "stub": ""
    },
    "Merging": {
        "name_process": "Merging",
        "string_process": "\nprocess Merging {\n\n    tag { \"${params.prefix}.${sample}\" }\n    label 'vsearch'\n    memory { 4.GB * task.attempt }\n    publishDir 'out/vsearch/log/' , mode: 'copy', overwrite: false\n\n    input:  \n    set val(name), file(reads) from fastq_files_trim\n\n\n    output:\n    set val(name), file(\"*_merged.fasta\") into merged_read_pair\n    file(\"*_UnMFwd.fasta\") into unmergedForward\n    file(\"*_UnMRev.fasta\") into unmergedReverse\n\n    \"\"\"\n\n    vsearch --quiet --fastq_mergepairs ${reads[0]}  \\\n    --reverse  ${reads[1]} \\\n    --threads ${params.cpus} \\\n    --fastq_allowmergestagger --label_suffix ${params.prefix} \\\n    --fastaout_notmerged_fwd ${name}_UnMFwd.fasta \\\n    --fastaout_notmerged_rev ${name}_UnMRev.fasta \\\n    --fastaout ${name}_merged.fasta\n\n    \n    \"\"\"\n}",
        "nb_lignes_process": 28,
        "string_script": "\"\"\"\n\n    vsearch --quiet --fastq_mergepairs ${reads[0]}  \\\n    --reverse  ${reads[1]} \\\n    --threads ${params.cpus} \\\n    --fastq_allowmergestagger --label_suffix ${params.prefix} \\\n    --fastaout_notmerged_fwd ${name}_UnMFwd.fasta \\\n    --fastaout_notmerged_rev ${name}_UnMRev.fasta \\\n    --fastaout ${name}_merged.fasta\n\n    \n    \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "VSEARCH"
        ],
        "tools_url": [
            "https://bio.tools/vsearch"
        ],
        "tools_dico": [
            {
                "name": "VSEARCH",
                "uri": "https://bio.tools/vsearch",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3174",
                            "term": "Metagenomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2520",
                                    "term": "DNA mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0450",
                                    "term": "Chimera detection"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0450",
                                    "term": "Chimeric sequence detection"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2977",
                                "term": "Nucleic acid sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_0865",
                                "term": "Sequence similarity score"
                            }
                        ]
                    }
                ],
                "description": "High-throughput search and clustering sequence analysis tool. It supports de novo and reference based chimera detection, clustering, full-length and prefix dereplication, reverse complementation, masking, all-vs-all pairwise global alignment, exact and global alignment searching, shuffling, subsampling and sorting. It also supports FASTQ file analysis, filtering and conversion.",
                "homepage": "https://github.com/torognes/vsearch"
            }
        ],
        "inputs": [
            "fastq_files_trim"
        ],
        "nb_inputs": 1,
        "outputs": [
            "merged_read_pair",
            "unmergedForward",
            "unmergedReverse"
        ],
        "nb_outputs": 3,
        "name_workflow": "Eugloh__AmpliconPCR-nf",
        "directive": [
            "tag { \"${params.prefix}.${sample}\" }",
            "label 'vsearch'",
            "memory { 4.GB * task.attempt }",
            "publishDir 'out/vsearch/log/' , mode: 'copy', overwrite: false"
        ],
        "when": "",
        "stub": ""
    },
    "Fusion": {
        "name_process": "Fusion",
        "string_process": "\nprocess Fusion {\n\n    tag { \"${params.prefix}.${sample}\" }\n    label 'fusion'\n    memory { 4.GB * task.attempt }\n    publishDir 'out/vsearch/log/' , mode: 'copy', overwrite: false\n\n    input:  \n    set val(name), file(reads) from merged_read_pair\n    file(readsF) from unmergedForward\n    file(readsR) from unmergedReverse\n  \n    output:\n    set val(name), file(\"*_paired.fasta\") into fusionfasta\n\n\n    \"\"\"\ncat ${readsF} ${reads}  >  ${name}_paired.fasta ;\n\ncat ${readsR} >> ${name}_paired.fasta \n    \n    \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "\"\"\"\ncat ${readsF} ${reads}  >  ${name}_paired.fasta ;\n\ncat ${readsR} >> ${name}_paired.fasta \n    \n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "merged_read_pair",
            "unmergedForward",
            "unmergedReverse"
        ],
        "nb_inputs": 3,
        "outputs": [
            "fusionfasta"
        ],
        "nb_outputs": 1,
        "name_workflow": "Eugloh__AmpliconPCR-nf",
        "directive": [
            "tag { \"${params.prefix}.${sample}\" }",
            "label 'fusion'",
            "memory { 4.GB * task.attempt }",
            "publishDir 'out/vsearch/log/' , mode: 'copy', overwrite: false"
        ],
        "when": "",
        "stub": ""
    },
    "vparseDerepWorkAround": {
        "name_process": "vparseDerepWorkAround",
        "string_process": "\nprocess  vparseDerepWorkAround {\n    tag { \"${params.prefix}.${sample}\" }\n    label 'derep'\n    memory { 4.GB * task.attempt }\n    publishDir \"out/vsearch/log/\", mode: 'copy', overwrite: false,\n      saveAs: {filename ->\n          if (filename.indexOf(\"lin_der\") > 0) \"$filename\"\n          else if (filename.indexOf(\"log\") > 0) \"log_files/$filename\"\n          else null}\n\n\n    input:\n\t    set val(name), file(read) from fusionfasta\n\n    output:\n      set val(name), file('*lin_der.fas') into derep_fasta\n\n    \"\"\"\n   vsearch --quiet --derep_fulllength ${read} \\\n    --sizeout --threads ${params.cpus} --relabel_sha1 --fasta_width 0 \\\n    --strand both \\\n    --minuniquesize 1 --output ${name}_lin_der.fas \\\n    --log ${name}_lin_der.log\n\n\n    \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "\"\"\"\n   vsearch --quiet --derep_fulllength ${read} \\\n    --sizeout --threads ${params.cpus} --relabel_sha1 --fasta_width 0 \\\n    --strand both \\\n    --minuniquesize 1 --output ${name}_lin_der.fas \\\n    --log ${name}_lin_der.log\n\n\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "VSEARCH"
        ],
        "tools_url": [
            "https://bio.tools/vsearch"
        ],
        "tools_dico": [
            {
                "name": "VSEARCH",
                "uri": "https://bio.tools/vsearch",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3174",
                            "term": "Metagenomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2520",
                                    "term": "DNA mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0450",
                                    "term": "Chimera detection"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0450",
                                    "term": "Chimeric sequence detection"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2977",
                                "term": "Nucleic acid sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_0865",
                                "term": "Sequence similarity score"
                            }
                        ]
                    }
                ],
                "description": "High-throughput search and clustering sequence analysis tool. It supports de novo and reference based chimera detection, clustering, full-length and prefix dereplication, reverse complementation, masking, all-vs-all pairwise global alignment, exact and global alignment searching, shuffling, subsampling and sorting. It also supports FASTQ file analysis, filtering and conversion.",
                "homepage": "https://github.com/torognes/vsearch"
            }
        ],
        "inputs": [
            "fusionfasta"
        ],
        "nb_inputs": 1,
        "outputs": [
            "derep_fasta"
        ],
        "nb_outputs": 1,
        "name_workflow": "Eugloh__AmpliconPCR-nf",
        "directive": [
            "tag { \"${params.prefix}.${sample}\" }",
            "label 'derep'",
            "memory { 4.GB * task.attempt }",
            "publishDir \"out/vsearch/log/\", mode: 'copy', overwrite: false , saveAs: {filename -> if (filename.indexOf(\"lin_der\") > 0) \"$filename\" else if (filename.indexOf(\"log\") > 0) \"log_files/$filename\" else null}"
        ],
        "when": "",
        "stub": ""
    },
    "ChimericRemov": {
        "name_process": "ChimericRemov",
        "string_process": "\nprocess  ChimericRemov {\n    tag { \"${params.prefix}.${sample}\" }\n    label 'derep'\n    memory { 4.GB * task.attempt }\n    publishDir \"out/vsearch/log/\", mode: 'copy', overwrite: false,\n      saveAs: {filename ->\n          if (filename.indexOf(\"no_chim\") > 0) \"$filename\"\n          else if (filename.indexOf(\"log\") > 0) \"log_files/$filename\"\n          else null}\n\n    input:\n\t   set val(name), file(read) from derep_fasta\n\n    output:\n    set val(name), file(\"*no_chim.fasta\") into no_chimfasta\n\n    \"\"\"\nvsearch --quiet --uchime_denovo ${read}  \\\n    --sizein --threads ${params.cpus} --relabel ${params.prefix} \\\n    --sizeout --xsize --nonchimeras ${name}_no_chim.fasta \\\n    --log ${name}_chimeria.log \n\n    \"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "\"\"\"\nvsearch --quiet --uchime_denovo ${read}  \\\n    --sizein --threads ${params.cpus} --relabel ${params.prefix} \\\n    --sizeout --xsize --nonchimeras ${name}_no_chim.fasta \\\n    --log ${name}_chimeria.log \n\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "VSEARCH"
        ],
        "tools_url": [
            "https://bio.tools/vsearch"
        ],
        "tools_dico": [
            {
                "name": "VSEARCH",
                "uri": "https://bio.tools/vsearch",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3174",
                            "term": "Metagenomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2520",
                                    "term": "DNA mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0450",
                                    "term": "Chimera detection"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0450",
                                    "term": "Chimeric sequence detection"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2977",
                                "term": "Nucleic acid sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_0865",
                                "term": "Sequence similarity score"
                            }
                        ]
                    }
                ],
                "description": "High-throughput search and clustering sequence analysis tool. It supports de novo and reference based chimera detection, clustering, full-length and prefix dereplication, reverse complementation, masking, all-vs-all pairwise global alignment, exact and global alignment searching, shuffling, subsampling and sorting. It also supports FASTQ file analysis, filtering and conversion.",
                "homepage": "https://github.com/torognes/vsearch"
            }
        ],
        "inputs": [
            "derep_fasta"
        ],
        "nb_inputs": 1,
        "outputs": [
            "no_chimfasta"
        ],
        "nb_outputs": 1,
        "name_workflow": "Eugloh__AmpliconPCR-nf",
        "directive": [
            "tag { \"${params.prefix}.${sample}\" }",
            "label 'derep'",
            "memory { 4.GB * task.attempt }",
            "publishDir \"out/vsearch/log/\", mode: 'copy', overwrite: false , saveAs: {filename -> if (filename.indexOf(\"no_chim\") > 0) \"$filename\" else if (filename.indexOf(\"log\") > 0) \"log_files/$filename\" else null}"
        ],
        "when": "",
        "stub": ""
    },
    "Clustering": {
        "name_process": "Clustering",
        "string_process": "\nprocess  Clustering {\n    tag { \"${params.prefix}.${sample}\" }\n    label 'derep'\n    memory { 4.GB * task.attempt }\n    publishDir \"out/vsearch/log/\", mode: 'copy', overwrite: false,\n      saveAs: {filename ->\n          if (filename.indexOf(\"clustered\") > 0) \"$filename\"\n          else if (filename.indexOf(\"log\") > 0) \"log_files/$filename\"\n          else null}\n\n    input:\n\t   set val(name), file(read) from no_chimfasta\n\n    output:\n    set val(name), file(\"*_clustered.fasta\") into clusteredfasta\n\n\n\n\"\"\"\nvsearch --quiet --cluster_size ${read} \\\n    --id 0.97 --threads  ${params.cpus} \\\n    --sizein --clusterout_id --clusterout_sort \\\n    --sizeout --xsize --relabel ${params.prefix} \\\n    --centroids ${name}_clustered.fasta \\\n    --log ${name}_clustered.log\n        \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "\"\"\"\nvsearch --quiet --cluster_size ${read} \\\n    --id 0.97 --threads  ${params.cpus} \\\n    --sizein --clusterout_id --clusterout_sort \\\n    --sizeout --xsize --relabel ${params.prefix} \\\n    --centroids ${name}_clustered.fasta \\\n    --log ${name}_clustered.log\n        \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "VSEARCH"
        ],
        "tools_url": [
            "https://bio.tools/vsearch"
        ],
        "tools_dico": [
            {
                "name": "VSEARCH",
                "uri": "https://bio.tools/vsearch",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3174",
                            "term": "Metagenomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2520",
                                    "term": "DNA mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0450",
                                    "term": "Chimera detection"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0450",
                                    "term": "Chimeric sequence detection"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2977",
                                "term": "Nucleic acid sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_0865",
                                "term": "Sequence similarity score"
                            }
                        ]
                    }
                ],
                "description": "High-throughput search and clustering sequence analysis tool. It supports de novo and reference based chimera detection, clustering, full-length and prefix dereplication, reverse complementation, masking, all-vs-all pairwise global alignment, exact and global alignment searching, shuffling, subsampling and sorting. It also supports FASTQ file analysis, filtering and conversion.",
                "homepage": "https://github.com/torognes/vsearch"
            }
        ],
        "inputs": [
            "no_chimfasta"
        ],
        "nb_inputs": 1,
        "outputs": [
            "clusteredfasta"
        ],
        "nb_outputs": 1,
        "name_workflow": "Eugloh__AmpliconPCR-nf",
        "directive": [
            "tag { \"${params.prefix}.${sample}\" }",
            "label 'derep'",
            "memory { 4.GB * task.attempt }",
            "publishDir \"out/vsearch/log/\", mode: 'copy', overwrite: false , saveAs: {filename -> if (filename.indexOf(\"clustered\") > 0) \"$filename\" else if (filename.indexOf(\"log\") > 0) \"log_files/$filename\" else null}"
        ],
        "when": "",
        "stub": ""
    },
    "Blast": {
        "name_process": "Blast",
        "string_process": "\nprocess  Blast {\n    tag { \"${params.prefix}.${sample}\" }\n    label 'derep'\n    memory { 30.GB * task.attempt }\n    publishDir \"out/blast_result/\", mode: 'copy', overwrite: false\n\n    input:\n\t  set val(name), file(read) from clusteredfasta\n\n    output:\n\t   set val(name), file(\"*blast\") into blast\n\n\n\"\"\"\n blastn -task megablast -db nt -query ${read}  -out ${name}.blast \\\n     -evalue 1e-05 -max_target_seqs 1 -num_threads ${params.cpus}  \\\n     -outfmt \"6 qseqid sseqid evalue bitscore length pident frames staxids sskingdoms sscinames scomnames sblastnames stitle qseq qstart qend\" ;\n\n     sed -i '1iQueryID\\tSubjectID\\tevalue\\tbitscore\\tlength query\\tperc id\\tframes\\ttaxid\\tkingdom\\tscientifique name\\tcommon name\\tblast name\\ttitle\\tseq query\\tstartq\\tstopq'  ${name}.blast\n\n\"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "\"\"\"\n blastn -task megablast -db nt -query ${read}  -out ${name}.blast \\\n     -evalue 1e-05 -max_target_seqs 1 -num_threads ${params.cpus}  \\\n     -outfmt \"6 qseqid sseqid evalue bitscore length pident frames staxids sskingdoms sscinames scomnames sblastnames stitle qseq qstart qend\" ;\n\n     sed -i '1iQueryID\\tSubjectID\\tevalue\\tbitscore\\tlength query\\tperc id\\tframes\\ttaxid\\tkingdom\\tscientifique name\\tcommon name\\tblast name\\ttitle\\tseq query\\tstartq\\tstopq'  ${name}.blast\n\n\"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "G-BLASTN"
        ],
        "tools_url": [
            "https://bio.tools/g-blastn"
        ],
        "tools_dico": [
            {
                "name": "G-BLASTN",
                "uri": "https://bio.tools/g-blastn",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acids"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acid bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acid informatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0346",
                                    "term": "Sequence similarity search"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2976",
                                "term": "Protein sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0857",
                                "term": "Sequence search results"
                            }
                        ]
                    }
                ],
                "description": "GPU-accelerated nucleotide alignment tool based on the widely used NCBI-BLAST.",
                "homepage": "http://www.comp.hkbu.edu.hk/~chxw/software/G-BLASTN.html"
            }
        ],
        "inputs": [
            "clusteredfasta"
        ],
        "nb_inputs": 1,
        "outputs": [
            "blast"
        ],
        "nb_outputs": 1,
        "name_workflow": "Eugloh__AmpliconPCR-nf",
        "directive": [
            "tag { \"${params.prefix}.${sample}\" }",
            "label 'derep'",
            "memory { 30.GB * task.attempt }",
            "publishDir \"out/blast_result/\", mode: 'copy', overwrite: false"
        ],
        "when": "",
        "stub": ""
    }
}