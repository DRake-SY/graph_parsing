{
    "bam_realignment": {
        "name_process": "bam_realignment",
        "string_process": " process bam_realignment {\n    cpus params.cpu\n    memory params.mem+'G'\n    tag { file_tag }\n        \n    if(!params.recalibration) publishDir \"${params.output_folder}/BAM/\", mode: 'copy'\n\n\tinput:\n  file infile from files\n\tfile ref\n  file ref_sa\n  file ref_bwt\n  file ref_ann\n  file ref_amb\n  file ref_pac\n  file ref_0123\n  file ref_bwt8bit\n  file ref_alt \n\tfile postaltjs\n     \n  output:\n\tset val(file_tag), file(\"${file_tag_new}*.bam\"), file(\"${file_tag_new}*.bai\")  into bam_bai_files\n\n  shell:\n\tfile_tag = infile.baseName\n\tfile_tag_new=file_tag+'_realigned'\n\tif(params.trim) file_tag_new=file_tag_new+'_trimmed'\n\tif(params.alt)  file_tag_new=file_tag_new+'_alt'\n\t\n\tif(params.alt==null){\n\t  ignorealt='-j'\n\t  postalt=''\n\t}else{\n\t  ignorealt=''\n\t  postalt='k8 bwa-postalt.js '+ref+'.alt |'\n\t}\n\tif(params.trim==null){\n\t  preproc=''\n\t}else{\n\t  preproc=\"AdapterRemoval ${params.adapterremoval_opt} --interleaved --file1 /dev/stdin --output1 /dev/stdout |\"\n\t}\n\tif(params.bwa_option_M==null){\n\t  bwa_opt=''\n    samblaster_opt=''\n\t}else{\n\t   bwa_opt='-M '\n \t   samblaster_opt='-M '\n\t}\n\tbwa_threads  = [params.cpu.intdiv(2) - 1,1].max()\n\tsort_threads = [params.cpu.intdiv(2) - 1,1].max()\n\tsort_mem     = params.mem.div(4)\n\t'''\n  set -o pipefail\n  samtools collate -uOn 128 !{file_tag}.bam tmp_!{file_tag} | samtools fastq - | !{preproc} !{params.bwa_mem} !{ignorealt} !{bwa_opt} -t!{bwa_threads} -R \"@RG\\\\tID:!{file_tag}\\\\tSM:!{file_tag}\\\\t!{params.RG}\" -p !{ref} - | !{postalt} samblaster !{samblaster_opt} --addMateTags --ignoreUnmated | sambamba view -S -f bam -l 0 /dev/stdin | sambamba sort -t !{sort_threads} -m !{sort_mem}G --tmpdir=!{file_tag}_tmp -o !{file_tag_new}.bam /dev/stdin\n  '''\n  }",
        "nb_lignes_process": 54,
        "string_script": "\tfile_tag = infile.baseName\n\tfile_tag_new=file_tag+'_realigned'\n\tif(params.trim) file_tag_new=file_tag_new+'_trimmed'\n\tif(params.alt)  file_tag_new=file_tag_new+'_alt'\n\t\n\tif(params.alt==null){\n\t  ignorealt='-j'\n\t  postalt=''\n\t}else{\n\t  ignorealt=''\n\t  postalt='k8 bwa-postalt.js '+ref+'.alt |'\n\t}\n\tif(params.trim==null){\n\t  preproc=''\n\t}else{\n\t  preproc=\"AdapterRemoval ${params.adapterremoval_opt} --interleaved --file1 /dev/stdin --output1 /dev/stdout |\"\n\t}\n\tif(params.bwa_option_M==null){\n\t  bwa_opt=''\n    samblaster_opt=''\n\t}else{\n\t   bwa_opt='-M '\n \t   samblaster_opt='-M '\n\t}\n\tbwa_threads  = [params.cpu.intdiv(2) - 1,1].max()\n\tsort_threads = [params.cpu.intdiv(2) - 1,1].max()\n\tsort_mem     = params.mem.div(4)\n\t'''\n  set -o pipefail\n  samtools collate -uOn 128 !{file_tag}.bam tmp_!{file_tag} | samtools fastq - | !{preproc} !{params.bwa_mem} !{ignorealt} !{bwa_opt} -t!{bwa_threads} -R \"@RG\\\\tID:!{file_tag}\\\\tSM:!{file_tag}\\\\t!{params.RG}\" -p !{ref} - | !{postalt} samblaster !{samblaster_opt} --addMateTags --ignoreUnmated | sambamba view -S -f bam -l 0 /dev/stdin | sambamba sort -t !{sort_threads} -m !{sort_mem}G --tmpdir=!{file_tag}_tmp -o !{file_tag_new}.bam /dev/stdin\n  '''",
        "nb_lignes_script": 30,
        "language_script": "bash",
        "tools": [
            "SAMtools",
            "Sambamba"
        ],
        "tools_url": [
            "https://bio.tools/samtools",
            "https://bio.tools/sambamba"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "Sambamba",
                "uri": "https://bio.tools/sambamba",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This tool is a high performance modern robust and fast tool (and library), written in the D programming language, for working with SAM, BAM and CRAM formats.",
                "homepage": "http://www.open-bio.org/wiki/Sambamba"
            }
        ],
        "inputs": [
            "files",
            "ref",
            "ref_sa",
            "ref_bwt",
            "ref_ann",
            "ref_amb",
            "ref_pac",
            "ref_0123",
            "ref_bwt8bit",
            "ref_alt",
            "postaltjs"
        ],
        "nb_inputs": 11,
        "outputs": [
            "bam_bai_files"
        ],
        "nb_outputs": 1,
        "name_workflow": "Monia234__IARC-alignement",
        "directive": [
            "cpus params.cpu",
            "memory params.mem+'G'",
            "tag { file_tag } if(!params.recalibration) publishDir \"${params.output_folder}/BAM/\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "fastq_alignment": {
        "name_process": "fastq_alignment",
        "string_process": " process fastq_alignment {\n    cpus params.cpu\n    memory params.mem+'GB'    \n    tag { \"${file_tag}${read_group}\" }\n\n  input:\n  set val(file_tag), val(nb_groups), val(read_group), file(pair1), file(pair2) from readPairs\n  file ref\n  file ref_fai\n  file ref_sa\n  file ref_bwt\n  file ref_ann\n  file ref_amb\n  file ref_pac\n  file ref_dict\n  file ref_0123\n  file ref_bwt8bit\n  file ref_alt \n\tfile postaltjs\n                 \n  output:\n\tset val(file_tag), val(nb_groups), val(read_group),  file(\"${file_tag_new}*.bam\"), file(\"${file_tag_new}*.bai\") into bam_bai_files0\n\n\tif(!params.recalibration &  !params.input_file){ publishDir \"${params.output_folder}/BAM/\", mode: 'copy'\t}\n\n  shell:\n\tfile_tag_new=file_tag \n\tbwa_threads  = [params.cpu.intdiv(2) - 1,1].max()\n  sort_threads = [params.cpu.intdiv(2) - 1,1].max()\n  sort_mem     = [params.mem.intdiv(4),1].max()\n  file_tag_new=file_tag_new+\"${read_group}\"\n  if(params.trim) file_tag_new=file_tag_new+'_trimmed'\n  if(params.alt)  file_tag_new=file_tag_new+'_alt'\t\n  if(params.alt==null){\n          ignorealt='-j'\n          postalt=''\n  }else{\n          ignorealt=''\n          postalt='k8 bwa-postalt.js '+ref+'.alt |'\n  }\n\tif(params.bwa_option_M==null){\n          bwa_opt=''\n          samblaster_opt=''\n        }else{\n           bwa_opt='-M '\n           samblaster_opt='-M '\n        }\n  if(nb_groups > 1){\n    sort_opt=' -n'\n  }else{\n    sort_opt=''\n  }\n\tif(params.trim==null){\n\t\t'''\n    set -o pipefail\n    touch !{file_tag_new}.bam.bai\n\t\t!{params.bwa_mem} !{ignorealt} !{bwa_opt} -t!{bwa_threads} -R \"@RG\\\\tID:!{file_tag}!{read_group}\\\\tSM:!{file_tag}\\\\t!{params.RG}\" !{ref} !{pair1} !{pair2} | !{postalt} samblaster !{samblaster_opt} --addMateTags | sambamba view -S -f bam -l 0 /dev/stdin | sambamba sort !{sort_opt} -t !{sort_threads} -m !{sort_mem}G --tmpdir=!{file_tag}_tmp -o !{file_tag_new}.bam /dev/stdin\n\t\t'''\n \t}else{\n\t\t'''\n    set -o pipefail\n    touch !{file_tag_new}.bam.bai\n\t\tAdapterRemoval !{params.adapterremoval_opt} --file1 !{pair1} --file2 !{pair2} --interleaved-output --output1 /dev/stdout | !{params.bwa_mem} !{ignorealt} !{bwa_opt} -t!{bwa_threads} -R \"@RG\\\\tID:!{file_tag}!{read_group}\\\\tSM:!{file_tag}\\\\t!{params.RG}\" -p !{ref} - | !{postalt} samblaster !{samblaster_opt} --addMateTags | sambamba view -S -f bam -l 0 /dev/stdin | sambamba sort !{sort_opt} -t !{sort_threads} -m !{sort_mem}G --tmpdir=!{file_tag}_tmp -o !{file_tag_new}.bam /dev/stdin\n\t\t'''\n\t}\n     }",
        "nb_lignes_process": 64,
        "string_script": "\tfile_tag_new=file_tag \n\tbwa_threads  = [params.cpu.intdiv(2) - 1,1].max()\n  sort_threads = [params.cpu.intdiv(2) - 1,1].max()\n  sort_mem     = [params.mem.intdiv(4),1].max()\n  file_tag_new=file_tag_new+\"${read_group}\"\n  if(params.trim) file_tag_new=file_tag_new+'_trimmed'\n  if(params.alt)  file_tag_new=file_tag_new+'_alt'\t\n  if(params.alt==null){\n          ignorealt='-j'\n          postalt=''\n  }else{\n          ignorealt=''\n          postalt='k8 bwa-postalt.js '+ref+'.alt |'\n  }\n\tif(params.bwa_option_M==null){\n          bwa_opt=''\n          samblaster_opt=''\n        }else{\n           bwa_opt='-M '\n           samblaster_opt='-M '\n        }\n  if(nb_groups > 1){\n    sort_opt=' -n'\n  }else{\n    sort_opt=''\n  }\n\tif(params.trim==null){\n\t\t'''\n    set -o pipefail\n    touch !{file_tag_new}.bam.bai\n\t\t!{params.bwa_mem} !{ignorealt} !{bwa_opt} -t!{bwa_threads} -R \"@RG\\\\tID:!{file_tag}!{read_group}\\\\tSM:!{file_tag}\\\\t!{params.RG}\" !{ref} !{pair1} !{pair2} | !{postalt} samblaster !{samblaster_opt} --addMateTags | sambamba view -S -f bam -l 0 /dev/stdin | sambamba sort !{sort_opt} -t !{sort_threads} -m !{sort_mem}G --tmpdir=!{file_tag}_tmp -o !{file_tag_new}.bam /dev/stdin\n\t\t'''\n \t}else{\n\t\t'''\n    set -o pipefail\n    touch !{file_tag_new}.bam.bai\n\t\tAdapterRemoval !{params.adapterremoval_opt} --file1 !{pair1} --file2 !{pair2} --interleaved-output --output1 /dev/stdout | !{params.bwa_mem} !{ignorealt} !{bwa_opt} -t!{bwa_threads} -R \"@RG\\\\tID:!{file_tag}!{read_group}\\\\tSM:!{file_tag}\\\\t!{params.RG}\" -p !{ref} - | !{postalt} samblaster !{samblaster_opt} --addMateTags | sambamba view -S -f bam -l 0 /dev/stdin | sambamba sort !{sort_opt} -t !{sort_threads} -m !{sort_mem}G --tmpdir=!{file_tag}_tmp -o !{file_tag_new}.bam /dev/stdin\n\t\t'''\n\t}",
        "nb_lignes_script": 38,
        "language_script": "bash",
        "tools": [
            "Sambamba"
        ],
        "tools_url": [
            "https://bio.tools/sambamba"
        ],
        "tools_dico": [
            {
                "name": "Sambamba",
                "uri": "https://bio.tools/sambamba",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This tool is a high performance modern robust and fast tool (and library), written in the D programming language, for working with SAM, BAM and CRAM formats.",
                "homepage": "http://www.open-bio.org/wiki/Sambamba"
            }
        ],
        "inputs": [
            "readPairs",
            "ref",
            "ref_fai",
            "ref_sa",
            "ref_bwt",
            "ref_ann",
            "ref_amb",
            "ref_pac",
            "ref_dict",
            "ref_0123",
            "ref_bwt8bit",
            "ref_alt",
            "postaltjs"
        ],
        "nb_inputs": 13,
        "outputs": [
            "bam_bai_files0"
        ],
        "nb_outputs": 1,
        "name_workflow": "Monia234__IARC-alignement",
        "directive": [
            "cpus params.cpu",
            "memory params.mem+'GB'",
            "tag { \"${file_tag}${read_group}\" }"
        ],
        "when": "",
        "stub": ""
    },
    "qualimap_multi": {
        "name_process": "qualimap_multi",
        "string_process": "\tprocess qualimap_multi {\n\t    cpus params.cpu\n\t    memory params.mem+'G'\n\t    tag { \"${file_tag}${read_group}\" }\n\n\t    publishDir \"${params.output_folder}/QC/BAM/qualimap/\", mode: 'copy'\n\n\t    input:\n\t    set val(file_tag), val(nb_groups), val(read_group),  file(bam), file(bai) from mult2QC\n\t    file qff from qualimap_ff\n\n\t    output:\n\t    file (\"${file_name}\") into qualimap_multi_results\n\t    file (\"${file_name}.stats.txt\") into flagstat_multi_results\n\n\t    shell:\n\t    feature = qff.name != 'NO_FILE' ? \"--feature-file $qff\" : ''\n      file_name = bam.baseName\n\t    '''\n\t    sambamba sort -t !{params.cpu} -m !{params.mem}G --tmpdir=!{file_name}_tmp -o !{file_name}_COsorted.bam !{bam}\n\t    qualimap bamqc -nt !{params.cpu} !{feature} --skip-duplicated -bam !{file_name}_COsorted.bam --java-mem-size=!{params.mem}G -outdir !{file_name} -outformat html\n\t    sambamba flagstat -t !{params.cpu} !{bam} > !{file_name}.stats.txt\n\t    '''\n\t}",
        "nb_lignes_process": 22,
        "string_script": "\t    feature = qff.name != 'NO_FILE' ? \"--feature-file $qff\" : ''\n      file_name = bam.baseName\n\t    '''\n\t    sambamba sort -t !{params.cpu} -m !{params.mem}G --tmpdir=!{file_name}_tmp -o !{file_name}_COsorted.bam !{bam}\n\t    qualimap bamqc -nt !{params.cpu} !{feature} --skip-duplicated -bam !{file_name}_COsorted.bam --java-mem-size=!{params.mem}G -outdir !{file_name} -outformat html\n\t    sambamba flagstat -t !{params.cpu} !{bam} > !{file_name}.stats.txt\n\t    '''",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "mult2QC",
            "qualimap_ff"
        ],
        "nb_inputs": 2,
        "outputs": [
            "qualimap_multi_results",
            "flagstat_multi_results"
        ],
        "nb_outputs": 2,
        "name_workflow": "Monia234__IARC-alignement",
        "directive": [
            "cpus params.cpu",
            "memory params.mem+'G'",
            "tag { \"${file_tag}${read_group}\" }",
            "publishDir \"${params.output_folder}/QC/BAM/qualimap/\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "multiqc_multi": {
        "name_process": "multiqc_multi",
        "string_process": "\tprocess multiqc_multi {\n\t    cpus 2\n\t    memory '1G'\n\n\t    publishDir \"${params.output_folder}/QC/BAM/qualimap\", mode: 'copy'\n\n\t    input:\n\t    file qualimap_results from qualimap_multi_results.collect()\n\t    file flagstat_results from flagstat_multi_results.collect()\n      file multiqc_config from ch_config_for_multiqc    \n\n\t    output:\n\t    file(\"*report.html\") into multi_output\n\t    file(\"multiqc_multiplex_qualimap_flagstat_report_data/\") into multi_output_data\n\n\t    shell:\n            if( multiqc_config.name=='NO_FILE' ){\n                opt = \"\"\n            }else{\n                opt = \"--config ${multiqc_config}\"\n            }\n\t    '''\n\t    multiqc . -n multiqc_multiplex_qualimap_flagstat_report.html !{opt} --comment \"WGS/WES pre-merging QC report\"\n\t    '''\n\t}",
        "nb_lignes_process": 23,
        "string_script": "            if( multiqc_config.name=='NO_FILE' ){\n                opt = \"\"\n            }else{\n                opt = \"--config ${multiqc_config}\"\n            }\n\t    '''\n\t    multiqc . -n multiqc_multiplex_qualimap_flagstat_report.html !{opt} --comment \"WGS/WES pre-merging QC report\"\n\t    '''",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "OptiJ"
        ],
        "tools_url": [
            "https://bio.tools/OptiJ"
        ],
        "tools_dico": [
            {
                "name": "OptiJ",
                "uri": "https://bio.tools/OptiJ",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3452",
                            "term": "Tomography"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3385",
                            "term": "Light microscopy"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3794",
                            "term": "RNA immunoprecipitation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3452",
                            "term": "CT"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3452",
                            "term": "Computed tomography"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3452",
                            "term": "TDM"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype resources"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3794",
                            "term": "RIP"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Open-source optical projection tomography of large organ samples.\n\nThe three-dimensional imaging of mesoscopic samples with Optical Projection Tomography (OPT) has become a powerful tool for biomedical phenotyping studies. OPT uses visible light to visualize the 3D morphology of large transparent samples. To enable a wider application of OPT, we present OptiJ, a low-cost, fully open-source OPT system capable of imaging large transparent specimens up to 13 mm tall and 8 mm deep with 50 \u00b5m resolution. OptiJ is based on off-the-shelf, easy-to-assemble optical components and an ImageJ plugin library for OPT data reconstruction. The software includes novel correction routines for uneven illumination and sample jitter in addition to CPU GPU accelerated reconstruction for large datasets. We demonstrate the use of OptiJ to image and reconstruct cleared lung lobes from adult mice.",
                "homepage": "https://lag-opt.github.io/"
            }
        ],
        "inputs": [
            "qualimap_multi_results",
            "flagstat_multi_results",
            "ch_config_for_multiqc"
        ],
        "nb_inputs": 3,
        "outputs": [
            "multi_output",
            "multi_output_data"
        ],
        "nb_outputs": 2,
        "name_workflow": "Monia234__IARC-alignement",
        "directive": [
            "cpus 2",
            "memory '1G'",
            "publishDir \"${params.output_folder}/QC/BAM/qualimap\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "merge": {
        "name_process": "merge",
        "string_process": "\tprocess merge {\n      cpus params.cpu\n      memory params.mem+'G'\n      tag { file_tag }\n      if(!params.recalibration) publishDir \"$params.output_folder/BAM/\", mode: 'copy', pattern: \"*.bam*\"\n\n      input:\n      set val(file_tag), val(nb_groups), val(read_group),  file(bams), file(bais) from bam_bai_grouped4merge\n\n      output:\n      set val(file_tag), file(\"${file_tag_new}.bam\"), file(\"${file_tag_new}.bam.bai\") into bam_bai_files\n\n      shell:\n      file_tag_new=file_tag\n      for( rgtmp in read_group ){\n        file_tag_new=file_tag_new+\"${rgtmp}\"\n      }\n      if(params.trim) file_tag_new=file_tag_new+'_trimmed'\n      if(params.alt)  file_tag_new=file_tag_new+'_alt'\t\n      if(nb_groups>1){\n         merge_threads  = [params.cpu.intdiv(2) - 1,1].max()\n\t      sort_threads = [params.cpu.intdiv(2) - 1,1].max()\n        sort_mem     = params.mem.div(2)\n\t      bam_files=\" \"\n\t      for( bam in bams ){\n        \tbam_files=bam_files+\" ${bam}\"\n        }\n        file_tag_new=file_tag_new+\"_merged\"\n        if(params.bwa_option_M==null){\n\t        samblaster_opt=''\n\t      }else{\n\t        samblaster_opt='-M '\n\t      }\n        '''\n\t      sambamba merge -t !{merge_threads} -l 0 /dev/stdout !{bam_files} |  sambamba view -h /dev/stdin | samblaster !{samblaster_opt} --addMateTags | sambamba view -S -f bam -l 0 /dev/stdin | sambamba sort -t !{sort_threads} -m !{sort_mem}G --tmpdir=!{file_tag}_tmp -o !{file_tag_new}.bam /dev/stdin\n        '''\n      }else{\n        '''\n        touch nomerge\n        '''\n      }\n\t}",
        "nb_lignes_process": 40,
        "string_script": "      file_tag_new=file_tag\n      for( rgtmp in read_group ){\n        file_tag_new=file_tag_new+\"${rgtmp}\"\n      }\n      if(params.trim) file_tag_new=file_tag_new+'_trimmed'\n      if(params.alt)  file_tag_new=file_tag_new+'_alt'\t\n      if(nb_groups>1){\n         merge_threads  = [params.cpu.intdiv(2) - 1,1].max()\n\t      sort_threads = [params.cpu.intdiv(2) - 1,1].max()\n        sort_mem     = params.mem.div(2)\n\t      bam_files=\" \"\n\t      for( bam in bams ){\n        \tbam_files=bam_files+\" ${bam}\"\n        }\n        file_tag_new=file_tag_new+\"_merged\"\n        if(params.bwa_option_M==null){\n\t        samblaster_opt=''\n\t      }else{\n\t        samblaster_opt='-M '\n\t      }\n        '''\n\t      sambamba merge -t !{merge_threads} -l 0 /dev/stdout !{bam_files} |  sambamba view -h /dev/stdin | samblaster !{samblaster_opt} --addMateTags | sambamba view -S -f bam -l 0 /dev/stdin | sambamba sort -t !{sort_threads} -m !{sort_mem}G --tmpdir=!{file_tag}_tmp -o !{file_tag_new}.bam /dev/stdin\n        '''\n      }else{\n        '''\n        touch nomerge\n        '''\n      }",
        "nb_lignes_script": 27,
        "language_script": "bash",
        "tools": [
            "Sambamba",
            "SAMBLASTER"
        ],
        "tools_url": [
            "https://bio.tools/sambamba",
            "https://bio.tools/samblaster"
        ],
        "tools_dico": [
            {
                "name": "Sambamba",
                "uri": "https://bio.tools/sambamba",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This tool is a high performance modern robust and fast tool (and library), written in the D programming language, for working with SAM, BAM and CRAM formats.",
                "homepage": "http://www.open-bio.org/wiki/Sambamba"
            },
            {
                "name": "SAMBLASTER",
                "uri": "https://bio.tools/samblaster",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3199",
                                    "term": "Split read mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3199",
                                    "term": "Split-read mapping"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A tool to mark duplicates and extract discordant and split reads from SAM files.",
                "homepage": "https://github.com/GregoryFaust/samblaster"
            }
        ],
        "inputs": [
            "bam_bai_grouped4merge"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bam_bai_files"
        ],
        "nb_outputs": 1,
        "name_workflow": "Monia234__IARC-alignement",
        "directive": [
            "cpus params.cpu",
            "memory params.mem+'G'",
            "tag { file_tag } if(!params.recalibration) publishDir \"$params.output_folder/BAM/\", mode: 'copy', pattern: \"*.bam*\""
        ],
        "when": "",
        "stub": ""
    },
    "base_quality_score_recalibration": {
        "name_process": "base_quality_score_recalibration",
        "string_process": " process base_quality_score_recalibration {\n    cpus params.cpu_BQSR\n    memory params.mem_BQSR+'G'\n    tag { file_tag }\n    \n    publishDir \"$params.output_folder/BAM/\", mode: 'copy', pattern: \"*bam*\"\n    publishDir \"$params.output_folder/QC/BAM/BQSR/\", mode: 'copy',\n\tsaveAs: {filename -> \n\t\tif (filename.indexOf(\"table\") > 0) \"$filename\"\n\t\telse if (filename.indexOf(\"plots\") > 0) \"$filename\"\n\t\telse null\n\t}\n\n    input:\n    set val(file_tag), file(bam), file(bai) from bam_bai_files\n    file known_snps\n    file known_snps_index\n    file known_indels\n    file known_indels_index\n    file ref\n    file ref_fai\n    file ref_dict\n\n    output:\n    file(\"*_recal.table\") into recal_table_files\n    file(\"*plots.pdf\") into recal_plots_files\n    set val(file_tag), file(\"${file_tag_new}.bam\"), file(\"${file_tag_new}.bam.bai\") into final_bam_bai_files\n\n    shell:\n    file_name=bam.baseName\n    file_tag_new=file_name+'_BQSRecalibrated'\n    '''\n    gatk BaseRecalibrator --java-options \"-Xmx!{params.mem_BQSR}G\" -R !{ref} -I !{bam} --known-sites !{known_snps} --known-sites !{known_indels} -O !{file_name}_recal.table\n    gatk ApplyBQSR --java-options \"-Xmx!{params.mem_BQSR}G\" -R !{ref} -I !{bam} --bqsr-recal-file !{file_name}_recal.table -O !{file_tag_new}.bam\n    gatk BaseRecalibrator --java-options \"-Xmx!{params.mem_BQSR}G\" -R !{ref} -I !{file_tag_new}.bam --known-sites !{known_snps} --known-sites !{known_indels} -O !{file_tag_new}_recal.table\t\t\n    gatk AnalyzeCovariates --java-options \"-Xmx!{params.mem_BQSR}G\" -before !{file_name}_recal.table -after !{file_tag_new}_recal.table -plots !{file_tag_new}_recalibration_plots.pdf\t\n    mv !{file_tag_new}.bai !{file_tag_new}.bam.bai\n    '''\n    }",
        "nb_lignes_process": 37,
        "string_script": "    file_name=bam.baseName\n    file_tag_new=file_name+'_BQSRecalibrated'\n    '''\n    gatk BaseRecalibrator --java-options \"-Xmx!{params.mem_BQSR}G\" -R !{ref} -I !{bam} --known-sites !{known_snps} --known-sites !{known_indels} -O !{file_name}_recal.table\n    gatk ApplyBQSR --java-options \"-Xmx!{params.mem_BQSR}G\" -R !{ref} -I !{bam} --bqsr-recal-file !{file_name}_recal.table -O !{file_tag_new}.bam\n    gatk BaseRecalibrator --java-options \"-Xmx!{params.mem_BQSR}G\" -R !{ref} -I !{file_tag_new}.bam --known-sites !{known_snps} --known-sites !{known_indels} -O !{file_tag_new}_recal.table\t\t\n    gatk AnalyzeCovariates --java-options \"-Xmx!{params.mem_BQSR}G\" -before !{file_name}_recal.table -after !{file_tag_new}_recal.table -plots !{file_tag_new}_recalibration_plots.pdf\t\n    mv !{file_tag_new}.bai !{file_tag_new}.bam.bai\n    '''",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "bam_bai_files",
            "known_snps",
            "known_snps_index",
            "known_indels",
            "known_indels_index",
            "ref",
            "ref_fai",
            "ref_dict"
        ],
        "nb_inputs": 8,
        "outputs": [
            "recal_table_files",
            "recal_plots_files",
            "final_bam_bai_files"
        ],
        "nb_outputs": 3,
        "name_workflow": "Monia234__IARC-alignement",
        "directive": [
            "cpus params.cpu_BQSR",
            "memory params.mem_BQSR+'G'",
            "tag { file_tag }",
            "publishDir \"$params.output_folder/BAM/\", mode: 'copy', pattern: \"*bam*\"",
            "publishDir \"$params.output_folder/QC/BAM/BQSR/\", mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\"table\") > 0) \"$filename\" else if (filename.indexOf(\"plots\") > 0) \"$filename\" else null }"
        ],
        "when": "",
        "stub": ""
    },
    "qualimap_final": {
        "name_process": "qualimap_final",
        "string_process": "\nprocess qualimap_final {\n    cpus params.cpu\n    memory params.mem+'G'\n    tag { file_tag }\n\n    publishDir \"${params.output_folder}/QC/BAM/qualimap/\", mode: 'copy'\n\n    input:\n    set val(file_tag), file(bam), file(bai) from final_bam_bai_files\n    file qff from qualimap_ff\n\n    output:\n    file (\"${file_name}\") into qualimap_results\n    file (\"${file_name}.stats.txt\") into flagstat_results\n\n    shell:\n    feature = qff.name != 'NO_FILE' ? \"--feature-file $qff\" : ''\n    file_name=bam.baseName\n    '''\n    qualimap bamqc -nt !{params.cpu} !{feature} --skip-duplicated -bam !{bam} --java-mem-size=!{params.mem}G -outdir !{file_name} -outformat html\n    sambamba flagstat -t !{params.cpu} !{bam} > !{file_name}.stats.txt\n    '''\n}",
        "nb_lignes_process": 22,
        "string_script": "    feature = qff.name != 'NO_FILE' ? \"--feature-file $qff\" : ''\n    file_name=bam.baseName\n    '''\n    qualimap bamqc -nt !{params.cpu} !{feature} --skip-duplicated -bam !{bam} --java-mem-size=!{params.mem}G -outdir !{file_name} -outformat html\n    sambamba flagstat -t !{params.cpu} !{bam} > !{file_name}.stats.txt\n    '''",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "iFeature",
            "QualiMap",
            "Sambamba"
        ],
        "tools_url": [
            "https://bio.tools/ifeature",
            "https://bio.tools/qualimap",
            "https://bio.tools/sambamba"
        ],
        "tools_dico": [
            {
                "name": "iFeature",
                "uri": "https://bio.tools/ifeature",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2814",
                            "term": "Protein structure analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0123",
                            "term": "Protein properties"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Proteins"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_2814",
                            "term": "Protein structure"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0123",
                            "term": "Protein physicochemistry"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0078",
                            "term": "Protein informatics"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0250",
                                    "term": "Protein property calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0250",
                                    "term": "Protein property rendering"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Python Toolkit and Web Server for Calculating a Wide Range of Structural and Physicochemical Feature Descriptors from Protein and Peptide Sequences.",
                "homepage": "http://ifeature.erc.monash.edu/"
            },
            {
                "name": "QualiMap",
                "uri": "https://bio.tools/qualimap",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Platform-independent application written in Java and R that provides both a Graphical User Inteface (GUI) and a command-line interface to facilitate the quality control of alignment sequencing data.",
                "homepage": "http://qualimap.bioinfo.cipf.es/"
            },
            {
                "name": "Sambamba",
                "uri": "https://bio.tools/sambamba",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This tool is a high performance modern robust and fast tool (and library), written in the D programming language, for working with SAM, BAM and CRAM formats.",
                "homepage": "http://www.open-bio.org/wiki/Sambamba"
            }
        ],
        "inputs": [
            "final_bam_bai_files",
            "qualimap_ff"
        ],
        "nb_inputs": 2,
        "outputs": [
            "qualimap_results",
            "flagstat_results"
        ],
        "nb_outputs": 2,
        "name_workflow": "Monia234__IARC-alignement",
        "directive": [
            "cpus params.cpu",
            "memory params.mem+'G'",
            "tag { file_tag }",
            "publishDir \"${params.output_folder}/QC/BAM/qualimap/\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "multiqc_final": {
        "name_process": "multiqc_final",
        "string_process": "\nprocess multiqc_final {\n    cpus 2\n    memory '2G'\n\n    publishDir \"${params.output_folder}/QC/BAM/\", mode: 'copy'\n\n    input:\n    file qualimap_results from qualimap_results.collect()\n    file flagstat_results from flagstat_results.collect()\n    file BQSR_results from recal_table_files.collect()\n    file multiqc_config from ch_config_for_multiqc\n\n    output:\n    file(\"*report.html\") into final_output\n    file(\"multiqc_qualimap_flagstat_BQSR_report_data/\") into final_output_data\n\n    shell:\n    if( multiqc_config.name=='NO_FILE' ){\n\topt = \"\"\n    }else{\n\topt = \"--config ${multiqc_config}\"\n    }\n    '''\n    multiqc . -n multiqc_qualimap_flagstat_BQSR_report.html !{opt} --comment \"WGS/WES final QC report\"\n    '''\n}",
        "nb_lignes_process": 25,
        "string_script": "    if( multiqc_config.name=='NO_FILE' ){\n\topt = \"\"\n    }else{\n\topt = \"--config ${multiqc_config}\"\n    }\n    '''\n    multiqc . -n multiqc_qualimap_flagstat_BQSR_report.html !{opt} --comment \"WGS/WES final QC report\"\n    '''",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "OptiJ",
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/OptiJ",
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "OptiJ",
                "uri": "https://bio.tools/OptiJ",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3452",
                            "term": "Tomography"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3385",
                            "term": "Light microscopy"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3794",
                            "term": "RNA immunoprecipitation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3452",
                            "term": "CT"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3452",
                            "term": "Computed tomography"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3452",
                            "term": "TDM"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype and phenotype resources"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0625",
                            "term": "Genotype-phenotype"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3794",
                            "term": "RIP"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Open-source optical projection tomography of large organ samples.\n\nThe three-dimensional imaging of mesoscopic samples with Optical Projection Tomography (OPT) has become a powerful tool for biomedical phenotyping studies. OPT uses visible light to visualize the 3D morphology of large transparent samples. To enable a wider application of OPT, we present OptiJ, a low-cost, fully open-source OPT system capable of imaging large transparent specimens up to 13 mm tall and 8 mm deep with 50 \u00b5m resolution. OptiJ is based on off-the-shelf, easy-to-assemble optical components and an ImageJ plugin library for OPT data reconstruction. The software includes novel correction routines for uneven illumination and sample jitter in addition to CPU GPU accelerated reconstruction for large datasets. We demonstrate the use of OptiJ to image and reconstruct cleared lung lobes from adult mice.",
                "homepage": "https://lag-opt.github.io/"
            },
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [
            "qualimap_results",
            "flagstat_results",
            "recal_table_files",
            "ch_config_for_multiqc"
        ],
        "nb_inputs": 4,
        "outputs": [
            "final_output",
            "final_output_data"
        ],
        "nb_outputs": 2,
        "name_workflow": "Monia234__IARC-alignement",
        "directive": [
            "cpus 2",
            "memory '2G'",
            "publishDir \"${params.output_folder}/QC/BAM/\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    }
}