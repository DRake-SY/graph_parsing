{
    "trimGalore": {
        "name_process": "trimGalore",
        "string_process": "\tprocess trimGalore {\n\t\ttag \"$name\"\n\t\tpublishDir \"${params.outdir}/trimGalore\", mode: 'copy'\n\n\t\tinput:\n\t\tset val(name), file(reads) from ch_reads\n\n\t\toutput:\n\t\tset val(name), file('*fq.gz') into ch_trimmed_reads\n\n\t\tscript:\n\t\tc_r1 = params.clip_r1 > 0 ? \"--clip_r1 ${params.clip_r1}\" : ''\n\t\tc_r2 = params.clip_r2 > 0 ? \"--clip_r2 ${params.clip_r2}\" : ''\n\t\ttpc_r1 = params.three_prime_clip_r1 > 0 ? \"--three_prime_clip_r1 ${params.three_prime_clip_r1}\" : ''\n\t\ttpc_r2 = params.three_prime_clip_r2 > 0 ? \"--three_prime_clip_r2 ${params.three_prime_clip_r2}\" : ''\n\t\tif( !params.pairedEnd ) {\n\t\t\t\"\"\"\n\t\t\ttrim_galore --fastqc --gzip $c_r1 $tpc_r1 $reads\n\t\t\t\"\"\"\n\t\t} else {\n\t\t\t\"\"\"\n\t\t\ttrim_galore --paired --fastqc --gzip $c_r1 $c_r2 $tpc_r1 $tpc_r2 $reads\n\t\t\t\"\"\"\n\t\t}\n\t}",
        "nb_lignes_process": 23,
        "string_script": "\t\tc_r1 = params.clip_r1 > 0 ? \"--clip_r1 ${params.clip_r1}\" : ''\n\t\tc_r2 = params.clip_r2 > 0 ? \"--clip_r2 ${params.clip_r2}\" : ''\n\t\ttpc_r1 = params.three_prime_clip_r1 > 0 ? \"--three_prime_clip_r1 ${params.three_prime_clip_r1}\" : ''\n\t\ttpc_r2 = params.three_prime_clip_r2 > 0 ? \"--three_prime_clip_r2 ${params.three_prime_clip_r2}\" : ''\n\t\tif( !params.pairedEnd ) {\n\t\t\t\"\"\"\n\t\t\ttrim_galore --fastqc --gzip $c_r1 $tpc_r1 $reads\n\t\t\t\"\"\"\n\t\t} else {\n\t\t\t\"\"\"\n\t\t\ttrim_galore --paired --fastqc --gzip $c_r1 $c_r2 $tpc_r1 $tpc_r2 $reads\n\t\t\t\"\"\"\n\t\t}",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_reads"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_trimmed_reads"
        ],
        "nb_outputs": 1,
        "name_workflow": "Gregor-Mendel-Institute__kWIP-nf",
        "directive": [
            "tag \"$name\"",
            "publishDir \"${params.outdir}/trimGalore\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "khmerInterleaving": {
        "name_process": "khmerInterleaving",
        "string_process": "\tprocess khmerInterleaving {\n\t\ttag \"$name\"\n\t\tpublishDir \"${params.outdir}/interleavedReads\", mode: 'copy'\n\n\t\tinput:\n\t\tset val(name), file(reads) from ch_trimmed_reads\n\n\t\toutput:\n\t\tset val(name), file('interleaved/*fq.gz') into ch_fq_for_khmerHashing \n\n         \n                    \n\n\t\tscript:\n\t\t\"\"\"\n\t\tmkdir interleaved\n\t\tinterleave-reads.py ${reads} --gzip -o interleaved/${name}.fq.gz\n\t\t\"\"\"\n\t}",
        "nb_lignes_process": 17,
        "string_script": "\t\t\"\"\"\n\t\tmkdir interleaved\n\t\tinterleave-reads.py ${reads} --gzip -o interleaved/${name}.fq.gz\n\t\t\"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_trimmed_reads"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_fq_for_khmerHashing"
        ],
        "nb_outputs": 1,
        "name_workflow": "Gregor-Mendel-Institute__kWIP-nf",
        "directive": [
            "tag \"$name\"",
            "publishDir \"${params.outdir}/interleavedReads\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "khmerHashing": {
        "name_process": "khmerHashing",
        "string_process": "\nprocess khmerHashing {\n\ttag \"$name\"\n\tpublishDir \"${params.outdir}/khmerHashes\", mode: 'copy'\n\n\tinput:\n\tset val(name), file(reads) from ch_fq_for_khmerHashing\n\n\toutput:\n\tset val(name), file('hashes/*ct.gz') into ch_hashes_for_kWIP \n\n\tscript:\n\t\"\"\"\n\tmkdir hashes\n\n\tload-into-counting.py\t\\\\\n\t\t-N 1\t\\\\\n\t\t-x ${params.tablesize} \\\\\n\t\t-T ${task.cpus}\t\\\\\n\t\t-k ${params.k_size}\t\\\\\n\t\t-b\t\\\\\n\t\t-f\t\\\\\n\t\t-s tsv\t\\\\\n\t\thashes/${name}.ct.gz\t\\\\\n\t\t${reads}\t\n\t\"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "\t\"\"\"\n\tmkdir hashes\n\n\tload-into-counting.py\t\\\\\n\t\t-N 1\t\\\\\n\t\t-x ${params.tablesize} \\\\\n\t\t-T ${task.cpus}\t\\\\\n\t\t-k ${params.k_size}\t\\\\\n\t\t-b\t\\\\\n\t\t-f\t\\\\\n\t\t-s tsv\t\\\\\n\t\thashes/${name}.ct.gz\t\\\\\n\t\t${reads}\t\n\t\"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_fq_for_khmerHashing"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_hashes_for_kWIP"
        ],
        "nb_outputs": 1,
        "name_workflow": "Gregor-Mendel-Institute__kWIP-nf",
        "directive": [
            "tag \"$name\"",
            "publishDir \"${params.outdir}/khmerHashes\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "kWIP": {
        "name_process": "kWIP",
        "string_process": "\nprocess kWIP {\n\tpublishDir \"${params.outdir}/kWIP\", mode: 'copy'\n\n\tinput:\n\tfile(hash) from ch_hashes_for_kWIP.collect()\n\n\toutput:\n\tfile('result.*') into result \n\n\tscript:\n\t\"\"\"\n\tkwip \\\\\n\t\t-t 4\t\\\\\n\t\t-k result.kern\t\\\\\n\t\t-d result.dist\t\\\\\n\t\t*.ct.gz\n\n\timg.R result\n\t\"\"\"\t\n}",
        "nb_lignes_process": 19,
        "string_script": "\t\"\"\"\n\tkwip \\\\\n\t\t-t 4\t\\\\\n\t\t-k result.kern\t\\\\\n\t\t-d result.dist\t\\\\\n\t\t*.ct.gz\n\n\timg.R result\n\t\"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "kWIP"
        ],
        "tools_url": [
            "https://bio.tools/kwip"
        ],
        "tools_dico": [
            {
                "name": "kWIP",
                "uri": "https://bio.tools/kwip",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0797",
                            "term": "Comparative genomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0346",
                                    "term": "Sequence similarity search"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0289",
                                    "term": "Sequence distance matrix generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3731",
                                    "term": "Sample comparison"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0289",
                                    "term": "Sequence distance calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0289",
                                    "term": "Phylogenetic distance matrix generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0289",
                                    "term": "Sequence distance matrix construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0870",
                                "term": "Sequence distance matrix"
                            }
                        ]
                    }
                ],
                "description": "The k-mer weighted inner product (kWIP) is a method for a de novo estimator of genetic similarity without the need of reference genome.",
                "homepage": "https://github.com/kdmurray91/kwip"
            }
        ],
        "inputs": [
            "ch_hashes_for_kWIP"
        ],
        "nb_inputs": 1,
        "outputs": [
            "result"
        ],
        "nb_outputs": 1,
        "name_workflow": "Gregor-Mendel-Institute__kWIP-nf",
        "directive": [
            "publishDir \"${params.outdir}/kWIP\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    }
}