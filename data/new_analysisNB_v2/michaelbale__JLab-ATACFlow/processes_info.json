{
    "catLanes": {
        "name_process": "catLanes",
        "string_process": " process catLanes {\n\t    tag \"Concatenating lanes into $params.workDir\"\n\t\tpublishDir \"$params.workDir/$sampleID\", mode: 'copy', pattern: \"*.gz\"\n\t\tlabel 'small_mem'\n\t\t\n\t\tinput:\n\t\ttuple val(sampleID), path(R1), path(R2) from inFq_ch\n\t\t\t\t\n\t\toutput:\n\t\ttuple val(sampleID), path(\"${sampleID}_*_init.fq.gz\") into reads_ch\n\t\t\n\t\tscript:\n\t\t\"\"\"\n\t\tzcat $R1 > ${sampleID}_R1_init.fq\n\t\tzcat $R2 > ${sampleID}_R2_init.fq\n\t\t\n\t\tgzip ${sampleID}_R1_init.fq\n\t\tgzip ${sampleID}_R2_init.fq\n\t\t\"\"\"\n\t  }",
        "nb_lignes_process": 18,
        "string_script": "\t\t\"\"\"\n\t\tzcat $R1 > ${sampleID}_R1_init.fq\n\t\tzcat $R2 > ${sampleID}_R2_init.fq\n\t\t\n\t\tgzip ${sampleID}_R1_init.fq\n\t\tgzip ${sampleID}_R2_init.fq\n\t\t\"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "inFq_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "reads_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "michaelbale__JLab-ATACFlow",
        "directive": [
            "tag \"Concatenating lanes into $params.workDir\"",
            "publishDir \"$params.workDir/$sampleID\", mode: 'copy', pattern: \"*.gz\"",
            "label 'small_mem'"
        ],
        "when": "",
        "stub": ""
    },
    "trim": {
        "name_process": "trim",
        "string_process": "\nprocess trim {\n\ttag \"Trimmomatic on ${pair_id}\"\n\tlabel 'med_mem'\n\n\tinput:\n\ttuple val(pair_id), path(reads) from reads_ch\n\t\n\toutput:\n\tpath(\"${pair_id}_trim.log\") into trimmomaticLogs_ch\n\ttuple pair_id, path(\"${pair_id}*.fastq.gz\") into trimmedReads_ch, tReadsFqc_ch\n\n\t                               \n\t                                                                         \n\tscript:\n\t\"\"\"\n\ttrimmomatic PE \\\n\t  -threads $task.cpus \\\n\t  ${reads[0]} \\\n\t  ${reads[1]} \\\n\t  -baseout ${pair_id}_trim \\\n\t  LEADING:20 TRAILING:20 SLIDINGWINDOW:4:20 2> ${pair_id}_trim.log\n\t\n\tmv ${pair_id}_trim_1P ${pair_id}_trim_R1.fastq\n\tmv ${pair_id}_trim_2P ${pair_id}_trim_R2.fastq\n\tgzip ${pair_id}_trim_R1.fastq\n\tgzip ${pair_id}_trim_R2.fastq\n\t\"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "\t\"\"\"\n\ttrimmomatic PE \\\n\t  -threads $task.cpus \\\n\t  ${reads[0]} \\\n\t  ${reads[1]} \\\n\t  -baseout ${pair_id}_trim \\\n\t  LEADING:20 TRAILING:20 SLIDINGWINDOW:4:20 2> ${pair_id}_trim.log\n\t\n\tmv ${pair_id}_trim_1P ${pair_id}_trim_R1.fastq\n\tmv ${pair_id}_trim_2P ${pair_id}_trim_R2.fastq\n\tgzip ${pair_id}_trim_R1.fastq\n\tgzip ${pair_id}_trim_R2.fastq\n\t\"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [
            "Trimmomatic"
        ],
        "tools_url": [
            "https://bio.tools/trimmomatic"
        ],
        "tools_dico": [
            {
                "name": "Trimmomatic",
                "uri": "https://bio.tools/trimmomatic",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Sequence trimming"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Trimming"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            },
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0006",
                                "term": "Data"
                            }
                        ]
                    }
                ],
                "description": "A flexible read trimming tool for Illumina NGS data",
                "homepage": "http://www.usadellab.org/cms/index.php?page=trimmomatic"
            }
        ],
        "inputs": [
            "reads_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "trimmomaticLogs_ch",
            "trimmedReads_ch",
            "tReadsFqc_ch"
        ],
        "nb_outputs": 3,
        "name_workflow": "michaelbale__JLab-ATACFlow",
        "directive": [
            "tag \"Trimmomatic on ${pair_id}\"",
            "label 'med_mem'"
        ],
        "when": "",
        "stub": ""
    },
    "fastqc": {
        "name_process": "fastqc",
        "string_process": "\nprocess fastqc {\n\t\n\ttag \"FASTQC on ${sample_id}\"\n\tlabel 'small_mem'\n\t\n\tinput:\n\ttuple val(sample_id), path(reads) from tReadsFqc_ch\n\n\toutput:\n\tpath(\"fastqc_${sample_id}_logs\") into fastqc_ch\n\n\tscript:\n\t\"\"\"\n\tmkdir fastqc_${sample_id}_logs\n\tfastqc -o fastqc_${sample_id}_logs -f fastq -q ${reads}\n\t\"\"\"  \n}",
        "nb_lignes_process": 16,
        "string_script": "\t\"\"\"\n\tmkdir fastqc_${sample_id}_logs\n\tfastqc -o fastqc_${sample_id}_logs -f fastq -q ${reads}\n\t\"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "tReadsFqc_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "fastqc_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "michaelbale__JLab-ATACFlow",
        "directive": [
            "tag \"FASTQC on ${sample_id}\"",
            "label 'small_mem'"
        ],
        "when": "",
        "stub": ""
    },
    "bowtieAlign": {
        "name_process": "bowtieAlign",
        "string_process": "\nprocess bowtieAlign {\n\ttag \"Aliging $pair_id to ${params.bt2_index}\"\n\tlabel 'big_mem'\n\n\tinput:\n\tval(idx) from params.bt2_index\n\ttuple val(pair_id), path(reads) from trimmedReads_ch\n\n\toutput:\n\tpath(\"${pair_id}_bt2.log\") into bt2Logs_ch\n\ttuple pair_id, file(\"${pair_id}_init.bam\") into bt2Bam_ch\n\n\t                         \n\tscript:\n\t\"\"\"\n\tbowtie2 -p $task.cpus -x ${idx} --no-mixed --no-unal --no-discordant --local --very-sensitive-local -X 1000 -k 4 --mm -1 ${reads[0]} -2 ${reads[1]} 2> ${pair_id}_bt2.log | samtools view -bS -q 30 - > ${pair_id}_init.bam\n\t\"\"\"\n\n}",
        "nb_lignes_process": 18,
        "string_script": "\t\"\"\"\n\tbowtie2 -p $task.cpus -x ${idx} --no-mixed --no-unal --no-discordant --local --very-sensitive-local -X 1000 -k 4 --mm -1 ${reads[0]} -2 ${reads[1]} 2> ${pair_id}_bt2.log | samtools view -bS -q 30 - > ${pair_id}_init.bam\n\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "Rbowtie2",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/rbowtie2",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "Rbowtie2",
                "uri": "https://bio.tools/rbowtie2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence merging"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence splicing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This package provides an R wrapper of the popular bowtie2 sequencing reads aligner and AdapterRemoval, a convenient tool for rapid adapter trimming, identification, and read merging.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/Rbowtie2.html"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "params",
            "trimmedReads_ch"
        ],
        "nb_inputs": 2,
        "outputs": [
            "bt2Logs_ch",
            "bt2Bam_ch"
        ],
        "nb_outputs": 2,
        "name_workflow": "michaelbale__JLab-ATACFlow",
        "directive": [
            "tag \"Aliging $pair_id to ${params.bt2_index}\"",
            "label 'big_mem'"
        ],
        "when": "",
        "stub": ""
    },
    "filterPrimaryAln": {
        "name_process": "filterPrimaryAln",
        "string_process": "\nprocess filterPrimaryAln {\n\n\ttag \"Filtering ${sampleID}\"\n\tpublishDir \"$params.outdir/finalBam\", mode: 'copy', pattern: \"*.bam\"\n\tlabel 'big_mem'\n\n\tinput:\n\tpath(blacklist) from params.blacklist\n\ttuple val(sampleID), path(bam) from bt2Bam_ch\n\n\toutput:\n\tpath(\"${sampleID}_idxstats.log\") into idxstats_ch\n\tpath(\"${sampleID}_insertSizes.log\") into picardISStats_ch\n\tpath(\"${sampleID}_dups.log\") into picardDupStats_ch\n\ttuple sampleID, file(\"${sampleID}_final.bam\") into finalBam_ch, bamForPeaks_ch\n\tfile(\"${sampleID}_final.bam\") into forPCA_ch, forBEPImage_ch\n\tval(sampleID) into names_ch\n\t\n\t                                                     \n\tscript:\n\t\"\"\"\n\tprocessAln.sh PE ${sampleID} ${bam} ${blacklist} ${task.cpus}\n\t\"\"\"\n\n}",
        "nb_lignes_process": 24,
        "string_script": "\t\"\"\"\n\tprocessAln.sh PE ${sampleID} ${bam} ${blacklist} ${task.cpus}\n\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "params",
            "bt2Bam_ch"
        ],
        "nb_inputs": 2,
        "outputs": [
            "idxstats_ch",
            "picardISStats_ch",
            "picardDupStats_ch",
            "finalBam_ch",
            "bamForPeaks_ch",
            "forPCA_ch",
            "forBEPImage_ch",
            "names_ch"
        ],
        "nb_outputs": 8,
        "name_workflow": "michaelbale__JLab-ATACFlow",
        "directive": [
            "tag \"Filtering ${sampleID}\"",
            "publishDir \"$params.outdir/finalBam\", mode: 'copy', pattern: \"*.bam\"",
            "label 'big_mem'"
        ],
        "when": "",
        "stub": ""
    },
    "callHMMRATAC": {
        "name_process": "callHMMRATAC",
        "string_process": " process callHMMRATAC {\n\t    tag \"Calling peaks using HMMRATAC\"\n\t\tpublishDir \"$params.outdir/peakcalls/HMMRATACCalls-narrowPeak\", mode: 'copy', pattern: '*.narrowPeak'\n\t\tlabel 'largeStore'\n\t\t\n\t\t\n\t\tinput:\n\t\ttuple val(sampleID), path(bam) from bamForPeaks_ch\n\t\tpath(genomeInfo) from params.genomeInfo\n\t\t\n\t\t\n\t\t\n\t\toutput:\n\t\ttuple sampleID, file(\"${sampleID}_peaks.narrowPeak\") into narrowPeaks_ch\n\t\t\t\t\n\t\tscript:\n\t\t\"\"\"\n\t\tsambamba index ${bam}\t\t\n\t\tjava -jar ${baseDir}/bin/HMMRATAC_V1.2.10_exe.jar -b ${bam} -i ${sampleID}_final.bam.bai -g ${genomeInfo} -o ${sampleID}\n\t\tawk -v OFS='\\t' '{print \\$1, \\$2, \\$3, \\$4, \"1\", \"1\", \\$13, \"-1\", \"-1\"}' ${sampleID}_peaks.gappedPeak > ${sampleID}_peaks.narrowPeak\n\t\t\"\"\"\n\t}",
        "nb_lignes_process": 20,
        "string_script": "\t\t\"\"\"\n\t\tsambamba index ${bam}\t\t\n\t\tjava -jar ${baseDir}/bin/HMMRATAC_V1.2.10_exe.jar -b ${bam} -i ${sampleID}_final.bam.bai -g ${genomeInfo} -o ${sampleID}\n\t\tawk -v OFS='\\t' '{print \\$1, \\$2, \\$3, \\$4, \"1\", \"1\", \\$13, \"-1\", \"-1\"}' ${sampleID}_peaks.gappedPeak > ${sampleID}_peaks.narrowPeak\n\t\t\"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "Sambamba"
        ],
        "tools_url": [
            "https://bio.tools/sambamba"
        ],
        "tools_dico": [
            {
                "name": "Sambamba",
                "uri": "https://bio.tools/sambamba",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This tool is a high performance modern robust and fast tool (and library), written in the D programming language, for working with SAM, BAM and CRAM formats.",
                "homepage": "http://www.open-bio.org/wiki/Sambamba"
            }
        ],
        "inputs": [
            "bamForPeaks_ch",
            "params"
        ],
        "nb_inputs": 2,
        "outputs": [
            "narrowPeaks_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "michaelbale__JLab-ATACFlow",
        "directive": [
            "tag \"Calling peaks using HMMRATAC\"",
            "publishDir \"$params.outdir/peakcalls/HMMRATACCalls-narrowPeak\", mode: 'copy', pattern: '*.narrowPeak'",
            "label 'largeStore'"
        ],
        "when": "",
        "stub": ""
    },
    "ChIPr": {
        "name_process": "ChIPr",
        "string_process": "\tprocess ChIPr {\n\t\t    tag \"Finding $groupID consensus peaks with ChIP-r\"\n\t\t\tpublishDir \"$params.outdir/peakcalls/\", mode: 'copy', pattern: '*optimal*'\n\t\t\tlabel 'med_mem'\n\t\t\t\n\t\t\tinput:\n\t\t\tval(numRep) from params.minReplicates\n\t\t\ttuple val(setID), path(narrowPeaks) from groupedNarrowPeaks_ch\n\t\t\t\n\t\t\toutput:\n\t\t\tfile(\"${setID}_optimal.bed\")\n\t\t\t\n\t\t\tscript:\n\t\t\t\"\"\"\n\t\t\tchipr -i ${narrowPeaks} -o ${setID} -m 2 --rankmethod signalvalue\n\t\t\t\"\"\"\n\t\t}",
        "nb_lignes_process": 15,
        "string_script": "\t\t\t\"\"\"\n\t\t\tchipr -i ${narrowPeaks} -o ${setID} -m 2 --rankmethod signalvalue\n\t\t\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "DChIPRep"
        ],
        "tools_url": [
            "https://bio.tools/dchiprep"
        ],
        "tools_dico": [
            {
                "name": "DChIPRep",
                "uri": "https://bio.tools/dchiprep",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3169",
                            "term": "ChIP-seq"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3169",
                            "term": "Chip-sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3169",
                            "term": "Chip Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3169",
                            "term": "ChIP-sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3169",
                            "term": "Chip sequencing"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0415",
                                    "term": "Nucleic acid feature detection"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0415",
                                    "term": "Sequence feature detection (nucleic acid)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Implements a methodology to assess differences between chromatin modification profiles in replicated ChIP-Seq studies as described in Chabbert et. al.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/DChIPRep.html"
            }
        ],
        "inputs": [
            "params",
            "groupedNarrowPeaks_ch"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "michaelbale__JLab-ATACFlow",
        "directive": [
            "tag \"Finding $groupID consensus peaks with ChIP-r\"",
            "publishDir \"$params.outdir/peakcalls/\", mode: 'copy', pattern: '*optimal*'",
            "label 'med_mem'"
        ],
        "when": "",
        "stub": ""
    },
    "makeBigwig": {
        "name_process": "makeBigwig",
        "string_process": "\nprocess makeBigwig{\n\n\ttag \"Creating ${sampleID} bigwig\"\n\tpublishDir \"$params.outdir/bigwig\", mode: 'copy'\n\tlabel 'big_mem'\n\n\tinput:\n\ttuple val(sampleID), file(finalBam) from finalBam_ch\n\t\n\toutput:\n\ttuple val(sampleID), file(\"${sampleID}_CPMnorm.bw\") into bigwig_ch, bigwig2_ch, bigwig3_ch\n\tval(sampleID) into labels_ch\n\tfile(\"${sampleID}_CPMnorm.bw\") into forGEnrichPlot_ch\n\n\t                         \n\tscript:\n\t\"\"\"\n\tsambamba index $finalBam\n\tbamCoverage -p $task.cpus --bam ${finalBam} -o ${sampleID}_CPMnorm.bw -bs 10 --extendReads --smoothLength 50 --normalizeUsing CPM --ignoreForNormalization chrX chrY  --skipNonCoveredRegions \n\t\"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "\t\"\"\"\n\tsambamba index $finalBam\n\tbamCoverage -p $task.cpus --bam ${finalBam} -o ${sampleID}_CPMnorm.bw -bs 10 --extendReads --smoothLength 50 --normalizeUsing CPM --ignoreForNormalization chrX chrY  --skipNonCoveredRegions \n\t\"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "Sambamba"
        ],
        "tools_url": [
            "https://bio.tools/sambamba"
        ],
        "tools_dico": [
            {
                "name": "Sambamba",
                "uri": "https://bio.tools/sambamba",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This tool is a high performance modern robust and fast tool (and library), written in the D programming language, for working with SAM, BAM and CRAM formats.",
                "homepage": "http://www.open-bio.org/wiki/Sambamba"
            }
        ],
        "inputs": [
            "finalBam_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bigwig_ch",
            "bigwig2_ch",
            "bigwig3_ch",
            "labels_ch",
            "forGEnrichPlot_ch"
        ],
        "nb_outputs": 5,
        "name_workflow": "michaelbale__JLab-ATACFlow",
        "directive": [
            "tag \"Creating ${sampleID} bigwig\"",
            "publishDir \"$params.outdir/bigwig\", mode: 'copy'",
            "label 'big_mem'"
        ],
        "when": "",
        "stub": ""
    },
    "generateGlobalFragmentPDF": {
        "name_process": "generateGlobalFragmentPDF",
        "string_process": "\nprocess generateGlobalFragmentPDF {\n\ttag \"Creating Summary Fragment Histograms\"\n\tpublishDir \"$params.outdir/results\", mode: 'copy'\n\tlabel 'med_mem'\n\n\tinput:\n\tpath(files) from sortedNamedBam\n\tval(labels) from BEFPDF_ch\n\tval(name) from params.name\n\n\toutput:\n\tfile( \"${name}_PEFragHist-all.pdf\" )\n\t\n\t                         \n\tscript:\n\t\"\"\"\n\tfor i in $files; do\n\t  sambamba index \\$i\n\tdone\n\tbamPEFragmentSize -p $task.cpus -b ${files} -o ${name}_PEFragHist-all.pdf --samplesLabel ${labels}\n\t\"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "\t\"\"\"\n\tfor i in $files; do\n\t  sambamba index \\$i\n\tdone\n\tbamPEFragmentSize -p $task.cpus -b ${files} -o ${name}_PEFragHist-all.pdf --samplesLabel ${labels}\n\t\"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sortedNamedBam",
            "BEFPDF_ch",
            "params"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "michaelbale__JLab-ATACFlow",
        "directive": [
            "tag \"Creating Summary Fragment Histograms\"",
            "publishDir \"$params.outdir/results\", mode: 'copy'",
            "label 'med_mem'"
        ],
        "when": "",
        "stub": ""
    },
    "plotPCA": {
        "name_process": "plotPCA",
        "string_process": "\nprocess  plotPCA {\n\ttag \"Creating bin-based Multi-Bam Summary\"\n\tpublishDir \"$params.outdir/results\", mode: 'copy'\nlabel 'massive_mem'\n\n\tinput:\n\tpath(files) from forPCA_ch.collect()\n\tval(name) from params.name\n\tval(pcaTitle) from params.PCATitle\n\n\toutput:\n\tfile(\"${name}_PCA.png\") into results_ch\n\n\t                         \n\tscript:\n\t\"\"\"\n\tfor i in ${files}\n\tdo\n\t  sambamba index \\$i\n\tdone\n\tmultiBamSummary bins -p $task.cpus -b $files -o ${name}_matrix.npz --smartLabels --extendReads\n\tplotPCA \\\n\t  -in ${name}_matrix.npz \\\n\t  -o ${name}_PCA.png \\\n\t  -T \"$pcaTitle\"\n\t\"\"\"\n\t}",
        "nb_lignes_process": 26,
        "string_script": "\t\"\"\"\n\tfor i in ${files}\n\tdo\n\t  sambamba index \\$i\n\tdone\n\tmultiBamSummary bins -p $task.cpus -b $files -o ${name}_matrix.npz --smartLabels --extendReads\n\tplotPCA \\\n\t  -in ${name}_matrix.npz \\\n\t  -o ${name}_PCA.png \\\n\t  -T \"$pcaTitle\"\n\t\"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "forPCA_ch",
            "params",
            "params"
        ],
        "nb_inputs": 3,
        "outputs": [
            "results_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "michaelbale__JLab-ATACFlow",
        "directive": [
            "tag \"Creating bin-based Multi-Bam Summary\"",
            "publishDir \"$params.outdir/results\", mode: 'copy'",
            "label 'massive_mem'"
        ],
        "when": "",
        "stub": ""
    },
    "multiqc": {
        "name_process": "multiqc",
        "string_process": "\nprocess multiqc {\n\tpublishDir \"$params.outdir/results\", mode:'copy'\n\tlabel 'small_mem'\n\n\tinput:\n\tpath('*') from fastqc_ch\n\t  .mix(idxstats_ch)\n\t  .mix(picardISStats_ch)\n\t  .mix(picardDupStats_ch)\n\t  .mix(trimmomaticLogs_ch)\n\t  .mix(bt2Logs_ch)\n\t  .collect()\n\t\n\toutput:\n\tpath('multiqc_report.html')\n\n\tscript:\n\t\"\"\"\n\tmultiqc .\n\t\"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "\t\"\"\"\n\tmultiqc .\n\t\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [
            "fastqc_ch",
            "idxstats_ch",
            "picardISStats_ch",
            "picardDupStats_ch",
            "trimmomaticLogs_ch",
            "bt2Logs_ch"
        ],
        "nb_inputs": 6,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "michaelbale__JLab-ATACFlow",
        "directive": [
            "publishDir \"$params.outdir/results\", mode:'copy'",
            "label 'small_mem'"
        ],
        "when": "",
        "stub": ""
    },
    "computeMatrixDefault": {
        "name_process": "computeMatrixDefault",
        "string_process": "\nprocess computeMatrixDefault {\n    tag \"${sampleID} generating gene-wide TSS and GB profile matrices\"\n    label 'med_mem'\n    \n    input:\n    tuple val(sampleID), file(bigwig) from bigwig_ch\n    path(genes) from params.genesList\n\n    output:\n    tuple val(sampleID), path(\"${sampleID}_rpMat.npz\") into tssMatrixGW_ch\n    tuple val(sampleID), path(\"${sampleID}_srMat.npz\") into profileMatrixGW_ch\n    file(\"${sampleID}_rpMat.npz\") into tssMatrixglob_ch\n    file(\"${sampleID}_srMat.npz\") into srMatrixglob_ch\n\n\t                         \n    script:\n    \"\"\"\n    computeMatrix reference-point -p $task.cpus  -S $bigwig -R $genes -o ${sampleID}_rpMat.npz -b 3000 -a 3000 --missingDataAsZero --samplesLabel ${sampleID}\n    computeMatrix scale-regions -p $task.cpus -S $bigwig -R $genes -o ${sampleID}_srMat.npz -m 8000 -b 3000 -a 3000 --missingDataAsZero --samplesLabel $sampleID\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n    computeMatrix reference-point -p $task.cpus  -S $bigwig -R $genes -o ${sampleID}_rpMat.npz -b 3000 -a 3000 --missingDataAsZero --samplesLabel ${sampleID}\n    computeMatrix scale-regions -p $task.cpus -S $bigwig -R $genes -o ${sampleID}_srMat.npz -m 8000 -b 3000 -a 3000 --missingDataAsZero --samplesLabel $sampleID\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bigwig_ch",
            "params"
        ],
        "nb_inputs": 2,
        "outputs": [
            "tssMatrixGW_ch",
            "profileMatrixGW_ch",
            "tssMatrixglob_ch",
            "srMatrixglob_ch"
        ],
        "nb_outputs": 4,
        "name_workflow": "michaelbale__JLab-ATACFlow",
        "directive": [
            "tag \"${sampleID} generating gene-wide TSS and GB profile matrices\"",
            "label 'med_mem'"
        ],
        "when": "",
        "stub": ""
    },
    "generateEnrichPlots": {
        "name_process": "generateEnrichPlots",
        "string_process": "\nprocess generateEnrichPlots {\n    tag \"${sampleID} TSS and Gene-body Enrichment\"\n    publishDir \"${params.outdir}/results/${sampleID}\", mode: 'copy', pattern: \"*.pdf\"\n    label 'small_mem'\n\n    input:\n    tuple val(sampleID), file(matrix) from tssMatrixGW_ch\n    tuple val(sampleID2), file(matrix2) from profileMatrixGW_ch\n\n    output: \n    file(\"${sampleID}_tssEnrich.pdf\") \n    file(\"${sampleID}_geneBodyProfile.pdf\")\n\n    script:\n    \"\"\"\n    plotHeatmap -m $matrix -o ${sampleID}_tssEnrich.pdf\n    plotHeatmap -m $matrix2 -o ${sampleID}_geneBodyProfile.pdf\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n    plotHeatmap -m $matrix -o ${sampleID}_tssEnrich.pdf\n    plotHeatmap -m $matrix2 -o ${sampleID}_geneBodyProfile.pdf\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "tssMatrixGW_ch",
            "profileMatrixGW_ch"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "michaelbale__JLab-ATACFlow",
        "directive": [
            "tag \"${sampleID} TSS and Gene-body Enrichment\"",
            "publishDir \"${params.outdir}/results/${sampleID}\", mode: 'copy', pattern: \"*.pdf\"",
            "label 'small_mem'"
        ],
        "when": "",
        "stub": ""
    },
    "makeGlobalEnrichPlots": {
        "name_process": "makeGlobalEnrichPlots",
        "string_process": "\nprocess makeGlobalEnrichPlots {\n    tag \"Project: ${name} TSS and Gene Body Plots\"\n    publishDir \"$params.outdir/results\", mode: 'copy', pattern: \"*.pdf\"\n    label 'largeStore'\n    \n    input:\n    val(name) from params.name\n    path(files) from tssMatrixglob_ch.toSortedList().collect()\n    path(files2) from srMatrixglob_ch.toSortedList().collect()\n\n    output:\n    file(\"${name}_TSSPlot.pdf\")\n    file(\"${name}_GeneBodyPlot.pdf\")\n    \n    script:\n    \"\"\"\n    \n    computeMatrixOperations cbind -m $files -o ${name}_TSSmat.npz\n    plotHeatmap -m ${name}_TSSmat.npz -o ${name}_TSSPlot.pdf\n    \n    computeMatrixOperations cbind -m $files2 -o ${name}_GeneBodymat.npz\n    plotHeatmap -m ${name}_GeneBodymat.npz -o ${name}_GeneBodyPlot.pdf\n    \"\"\"\n\n\n}",
        "nb_lignes_process": 25,
        "string_script": "    \"\"\"\n    \n    computeMatrixOperations cbind -m $files -o ${name}_TSSmat.npz\n    plotHeatmap -m ${name}_TSSmat.npz -o ${name}_TSSPlot.pdf\n    \n    computeMatrixOperations cbind -m $files2 -o ${name}_GeneBodymat.npz\n    plotHeatmap -m ${name}_GeneBodymat.npz -o ${name}_GeneBodyPlot.pdf\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "params",
            "tssMatrixglob_ch",
            "srMatrixglob_ch"
        ],
        "nb_inputs": 3,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "michaelbale__JLab-ATACFlow",
        "directive": [
            "tag \"Project: ${name} TSS and Gene Body Plots\"",
            "publishDir \"$params.outdir/results\", mode: 'copy', pattern: \"*.pdf\"",
            "label 'largeStore'"
        ],
        "when": "",
        "stub": ""
    },
    "computeMatExtra": {
        "name_process": "computeMatExtra",
        "string_process": " process computeMatExtra {\n        tag \"Compute Matrix for ${sampleID} on extra BED file: ${extraBEDName}\"\n        label 'med_mem'\n        \n        input:\n        tuple val(extraBEDName), path(BED), val(sampleID), path(bigwig) from totalExtraBed_ch\n\n        output:\n        tuple val(extraBEDName), val(sampleID), file(\"${sampleID}-${extraBEDName}_profile.npz\") into addBEDMatTuple_ch\n        tuple val(extraBEDName), file(\"${sampleID}-${extraBEDName}_profile.npz\") into addBEDMatTupleGlobal_ch\n    \n\t\t                         \n        script:\n        \"\"\"\n        computeMatrix scale-regions -p $task.cpus -S $bigwig -R $BED -b 3000 -m 8000 -a 3000 --missingDataAsZero --samplesLabel ${sampleID} -o ${sampleID}-${extraBEDName}_profile.npz\n        \"\"\"\n    }",
        "nb_lignes_process": 15,
        "string_script": "        \"\"\"\n        computeMatrix scale-regions -p $task.cpus -S $bigwig -R $BED -b 3000 -m 8000 -a 3000 --missingDataAsZero --samplesLabel ${sampleID} -o ${sampleID}-${extraBEDName}_profile.npz\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "totalExtraBed_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "addBEDMatTuple_ch",
            "addBEDMatTupleGlobal_ch"
        ],
        "nb_outputs": 2,
        "name_workflow": "michaelbale__JLab-ATACFlow",
        "directive": [
            "tag \"Compute Matrix for ${sampleID} on extra BED file: ${extraBEDName}\"",
            "label 'med_mem'"
        ],
        "when": "",
        "stub": ""
    },
    "generateExtraBEDProfiles": {
        "name_process": "generateExtraBEDProfiles",
        "string_process": " process generateExtraBEDProfiles {\n        tag \"Visualizing read density for ${rName} on sample ${sName}\"\n        publishDir \"$params.outdir/results/extraBED/${sName}\", mode: 'copy'\n\t    label 'small_mem'\n\n        input:\n        tuple val(rName), val(sName), path(mat) from addBEDMatTuple_ch\n        output:\n        file(\"${sName}-${rName}_profile.pdf\")\n \n        script:\n        \"\"\"\n        plotHeatmap -m $mat -z $rName -o \"${sName}-${rName}_profile.pdf\"\n        \"\"\"\n\n    }",
        "nb_lignes_process": 14,
        "string_script": "        \"\"\"\n        plotHeatmap -m $mat -z $rName -o \"${sName}-${rName}_profile.pdf\"\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "addBEDMatTuple_ch"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "michaelbale__JLab-ATACFlow",
        "directive": [
            "tag \"Visualizing read density for ${rName} on sample ${sName}\"",
            "publishDir \"$params.outdir/results/extraBED/${sName}\", mode: 'copy'",
            "label 'small_mem'"
        ],
        "when": "",
        "stub": ""
    },
    "generateGlobalExtraBED": {
        "name_process": "generateGlobalExtraBED",
        "string_process": " process generateGlobalExtraBED {\n        tag \"Combining profile plots for ${rName}\"\n        publishDir \"$params.outdir/results/extraBED\", mode: 'copy', pattern: \"*.pdf\"\n\t    label 'largeStore'\n    \n        input:\n        tuple val(rName), path(mats) from mixedExtraBEDsGT_ch\n        \n        output:\n        file(\"${rName}_profileAll.pdf\")\n\n        script:\n        \"\"\"\n        computeMatrixOperations cbind -m ${mats} -o ${rName}_gMat.npz\n        plotHeatmap -m ${rName}_gMat.npz -z ${rName} -o ${rName}_profileAll.pdf\n        \"\"\"\n    }",
        "nb_lignes_process": 15,
        "string_script": "        \"\"\"\n        computeMatrixOperations cbind -m ${mats} -o ${rName}_gMat.npz\n        plotHeatmap -m ${rName}_gMat.npz -z ${rName} -o ${rName}_profileAll.pdf\n        \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "mixedExtraBEDsGT_ch"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "michaelbale__JLab-ATACFlow",
        "directive": [
            "tag \"Combining profile plots for ${rName}\"",
            "publishDir \"$params.outdir/results/extraBED\", mode: 'copy', pattern: \"*.pdf\"",
            "label 'largeStore'"
        ],
        "when": "",
        "stub": ""
    },
    "computeMatExtraRP": {
        "name_process": "computeMatExtraRP",
        "string_process": " process computeMatExtraRP {\n        tag \"Compute Matrix for ${sampleID} on extra BED file: ${extraBEDName}\"\n\t    label 'med_mem'\n        \n        input:\n        tuple val(extraBEDName), path(BED), val(range), val(pointLabel), val(sampleID), path(bigwig) from totalExtraBed2_ch\n\n        output:\n        tuple val(extraBEDName), val(sampleID), file(\"${sampleID}-${extraBEDName}_refPoint.npz\") into addBEDMatTuple2_ch\n        tuple val(extraBEDName), file(\"${sampleID}-${extraBEDName}_refPoint.npz\") into addBEDMatTupleGlobal2_ch\n    \n\t\t                         \n        script:\n        \"\"\"\n        computeMatrix reference-point -p $task.cpus -S $bigwig -R $BED -b ${range} -a ${range} --missingDataAsZero --samplesLabel ${sampleID} -o ${sampleID}-${extraBEDName}_refPoint.npz\n        \"\"\"\n    }",
        "nb_lignes_process": 15,
        "string_script": "        \"\"\"\n        computeMatrix reference-point -p $task.cpus -S $bigwig -R $BED -b ${range} -a ${range} --missingDataAsZero --samplesLabel ${sampleID} -o ${sampleID}-${extraBEDName}_refPoint.npz\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "totalExtraBed2_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "addBEDMatTuple2_ch",
            "addBEDMatTupleGlobal2_ch"
        ],
        "nb_outputs": 2,
        "name_workflow": "michaelbale__JLab-ATACFlow",
        "directive": [
            "tag \"Compute Matrix for ${sampleID} on extra BED file: ${extraBEDName}\"",
            "label 'med_mem'"
        ],
        "when": "",
        "stub": ""
    },
    "generateExtraBEDRP": {
        "name_process": "generateExtraBEDRP",
        "string_process": " process generateExtraBEDRP {\n        tag \"Visualizing read density for ${rName} on sample ${sName}\"\n        publishDir \"$params.outdir/results/extraBED/${sName}\", mode: 'copy'\n\t    label 'small_mem'\n\n        input:\n        tuple val(rName), val(sName), path(mat) from addBEDMatTuple2_ch\n        output:\n        file(\"${sName}-${rName}_refPoint.pdf\")\n \n        script:\n        \"\"\"\n        plotHeatmap -m $mat --refPointLabel $rName -o \"${sName}-${rName}_refPoint.pdf\"\n        \"\"\"\n\n    }",
        "nb_lignes_process": 14,
        "string_script": "        \"\"\"\n        plotHeatmap -m $mat --refPointLabel $rName -o \"${sName}-${rName}_refPoint.pdf\"\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "addBEDMatTuple2_ch"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "michaelbale__JLab-ATACFlow",
        "directive": [
            "tag \"Visualizing read density for ${rName} on sample ${sName}\"",
            "publishDir \"$params.outdir/results/extraBED/${sName}\", mode: 'copy'",
            "label 'small_mem'"
        ],
        "when": "",
        "stub": ""
    },
    "generateGlobalExtraBEDRP": {
        "name_process": "generateGlobalExtraBEDRP",
        "string_process": " process generateGlobalExtraBEDRP {\n        tag \"Combining profile plots for ${rName}\"\n        publishDir \"$params.outdir/results/extraBED\", mode: 'copy', pattern: \"*.pdf\"\n\t    label 'largeStore'\n    \n        input:\n        tuple val(rName), path(mats) from mixedExtraBEDsGT2_ch\n        \n        output:\n        file(\"${rName}_refPointAll.pdf\")\n\n        script:\n        \"\"\"\n        computeMatrixOperations cbind -m ${mats} -o ${rName}_gMat.npz\n        plotHeatmap -m ${rName}_gMat.npz -z ${rName} -o ${rName}_refPointAll.pdf\n        \"\"\"\n    }",
        "nb_lignes_process": 15,
        "string_script": "        \"\"\"\n        computeMatrixOperations cbind -m ${mats} -o ${rName}_gMat.npz\n        plotHeatmap -m ${rName}_gMat.npz -z ${rName} -o ${rName}_refPointAll.pdf\n        \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "mixedExtraBEDsGT2_ch"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "michaelbale__JLab-ATACFlow",
        "directive": [
            "tag \"Combining profile plots for ${rName}\"",
            "publishDir \"$params.outdir/results/extraBED\", mode: 'copy', pattern: \"*.pdf\"",
            "label 'largeStore'"
        ],
        "when": "",
        "stub": ""
    }
}