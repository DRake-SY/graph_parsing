{
    "OPERATION_1": {
        "string": "ch_input_csv = Channel.fromPath( params.csv, checkIfExists: true )",
        "origin": [
            [
                "params.csv, checkIfExists: true",
                "A"
            ]
        ],
        "gives": [
            [
                "ch_input_csv",
                "P"
            ]
        ]
    },
    "OPERATION_2": {
        "string": "ch_input_csv = Channel.empty()",
        "origin": [],
        "gives": [
            [
                "ch_input_csv",
                "P"
            ]
        ]
    },
    "OPERATION_3": {
        "string": "ch_input_files = Channel.fromPath(params.input, checkIfExists: true)",
        "origin": [
            [
                "params.input, checkIfExists: true",
                "A"
            ]
        ],
        "gives": [
            [
                "ch_input_files",
                "P"
            ]
        ]
    },
    "OPERATION_4": {
        "string": "ch_input_files = Channel.fromPath(params.input, checkIfExists: true)",
        "origin": [
            [
                "params.input, checkIfExists: true",
                "A"
            ]
        ],
        "gives": [
            [
                "ch_input_files",
                "P"
            ]
        ]
    },
    "OPERATION_5": {
        "string": "ch_input_files = Channel.fromPath(params.input, checkIfExists: true)",
        "origin": [
            [
                "params.input, checkIfExists: true",
                "A"
            ]
        ],
        "gives": [
            [
                "ch_input_files",
                "P"
            ]
        ]
    },
    "OPERATION_6": {
        "string": "Channel.fromPath('bin/fastq-stats-report.Rmd').set{ fastq_stats_report_ch }",
        "origin": [
            [
                "'bin/fastq-stats-report.Rmd'",
                "A"
            ]
        ],
        "gives": [
            [
                "fastq_stats_report_ch",
                "P"
            ]
        ]
    },
    "OPERATION_7": {
        "string": "summary.collect { k,v -> \"${k.padRight(18)}: $v\" }.join(\"\\n\")",
        "origin": [
            [
                "summary",
                "P"
            ]
        ],
        "gives": []
    }
}