{
    "fastQC": {
        "name_process": "fastQC",
        "string_process": "\nprocess fastQC {\n\n\tlabel 'multiCore'\n\n\ttag \"fastQC $sample\"\n\n\tpublishDir path: concatDir(getDir('output', 'base_dir', params, canonPath = true),\n\t\tgetDir('output', 'fasqc_dir', params, canonPath = false)),\n\t\tmode:\"copy\", saveAs: {\n\t\t\treturn joinPath(\"$sample\", it)\n\t\t}\n\n\tinput:\n\tset val(sample), file(reads) from FASTQC_FQ\n\n\toutput:\n\tfile \"*.html\" into FASTQC_STAR, FASTQC_TOPHAT, FASTQC_SALMON\n\n\twhen:\n\taction.call(params, 'compute', 'run_fastqc_boolean', 'boolean')\n\n\tscript:\n\tthreads = task.cpus\n\t\"\"\"\n\tfastqc --threads ${threads} --outdir . ${reads[0]} ${reads[1]}\n\t\"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "\tthreads = task.cpus\n\t\"\"\"\n\tfastqc --threads ${threads} --outdir . ${reads[0]} ${reads[1]}\n\t\"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "FASTQC_FQ"
        ],
        "nb_inputs": 1,
        "outputs": [
            "FASTQC_STAR",
            "FASTQC_TOPHAT",
            "FASTQC_SALMON"
        ],
        "nb_outputs": 3,
        "name_workflow": "ericaenjoy3__rna_nf",
        "directive": [
            "label 'multiCore'",
            "tag \"fastQC $sample\"",
            "publishDir path: concatDir(getDir('output', 'base_dir', params, canonPath = true), getDir('output', 'fasqc_dir', params, canonPath = false)) , mode:\"copy\", saveAs: { return joinPath(\"$sample\", it) }"
        ],
        "when": "action.call(params, 'compute', 'run_fastqc_boolean', 'boolean')",
        "stub": ""
    },
    "salmonIndex": {
        "name_process": "salmonIndex",
        "string_process": "\nprocess salmonIndex {\n\n\tlabel 'multiCore'\n\n  tag \"salmonIndex\"\n\n  publishDir path: getDir('reference', 'base_dir', params, canonPath = true), mode:\"copy\", saveAs: {\n\t\treturn getDir('reference', 'salmon_dir', params, canonPath = false)\n\t}\n\n  input:\n  file fa from SALMON_TRANS_FA\n\n  output:\n  file \"salmon_idx\" into SALMON_INDEX\n\n\twhen:\n\taction.call(params, 'compute', 'run_salmon_index_boolean', 'boolean')\n\n  script:\n\tgencode = action.call(params, 'annotation', 'gencode_boolean', 'boolean')\n\n\tif (!testBoolean.call(gencode)) {\n\t\tprintln \"\"\n\t\tthrow new IllegalArgumentException(\"gencode_boolean (\" + gencode + \") is not Boolean\")\n\t}\n\n  switch (gencode) {\n    case ~/(?i)true/:\n      gencode_flag = '--gencode'\n      break\n    default:\n      gencode_flag = ''\n      break\n  }\n\n  threads = task.cpus\n\n  \"\"\"\n  salmon index -t ${fa} -i salmon_idx --type quasi -k 31 -p ${threads} ${gencode_flag}\n  \"\"\"\n}",
        "nb_lignes_process": 41,
        "string_script": "\tgencode = action.call(params, 'annotation', 'gencode_boolean', 'boolean')\n\n\tif (!testBoolean.call(gencode)) {\n\t\tprintln \"\"\n\t\tthrow new IllegalArgumentException(\"gencode_boolean (\" + gencode + \") is not Boolean\")\n\t}\n\n  switch (gencode) {\n    case ~/(?i)true/:\n      gencode_flag = '--gencode'\n      break\n    default:\n      gencode_flag = ''\n      break\n  }\n\n  threads = task.cpus\n\n  \"\"\"\n  salmon index -t ${fa} -i salmon_idx --type quasi -k 31 -p ${threads} ${gencode_flag}\n  \"\"\"",
        "nb_lignes_script": 20,
        "language_script": "bash",
        "tools": [
            "GENCODE",
            "oswitch",
            "CASE",
            "BreakSeq",
            "Salmon"
        ],
        "tools_url": [
            "https://bio.tools/GENCODE",
            "https://bio.tools/oswitch",
            "https://bio.tools/CASE",
            "https://bio.tools/breakseq",
            "https://bio.tools/salmon"
        ],
        "tools_dico": [
            {
                "name": "GENCODE",
                "uri": "https://bio.tools/GENCODE",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0659",
                            "term": "Functional, regulatory and non-coding RNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3501",
                                    "term": "Enrichment analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data retrieval"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3501",
                                    "term": "Enrichment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3501",
                                    "term": "Over-representation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data extraction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Retrieval"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Consortium identifying and classifying all gene features in the human and mouse genomes with high accuracy based on biological evidence, and releasing these annotations for the benefit of biomedical research and genome interpretation.",
                "homepage": "https://www.gencodegenes.org/"
            },
            {
                "name": "oswitch",
                "uri": "https://bio.tools/oswitch",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3760",
                                    "term": "Service management"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Provides quick and simple Docker based virtual environments on Macs and compute clusters alike for reproducible bioinformatics.",
                "homepage": "https://github.com/wurmlab/oswitch"
            },
            {
                "name": "CASE",
                "uri": "https://bio.tools/CASE",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0749",
                            "term": "Transcription factors and regulatory sites"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Model organisms"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0089",
                            "term": "Ontology and terminology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Organisms"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3436",
                                    "term": "Aggregation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3559",
                                    "term": "Ontology visualisation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3559",
                                    "term": "Ontology browsing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Advancing Coordinated Cyber-investigations and Tool Interoperability using a Community Developed Specification Language.\n\nSource files for the CASE website.\n\nAPI used for instantiating CASE objects (includes ontological verification and type checking).\n\nCyber-investigation Analysis Standard Expression (CASE).\n\nRead the CASE Wiki tab to learn everything you need to know about the Cyber-investigation Analysis Standard Expression (CASE) ontology. For learning about the Unified Cyber Ontology, CASE's parent, see UCO.\n\n\"@vocab\": \"http://case.example.org/core#\",.\n\nDET ER DINE PENGER DET DREIER SEG OM...\n\nVi er ikke st\ufffdrst, men garanterer effektiv behandling.\n\nLast ned v\ufffdr brosjyre i PDF format.\n\n||| COMMON LINK WITH (PUB. & NAME DIFFERENT) bio.tools/pymzml (GITHUB.COM).\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'UCO', 'cyber-investigation', 'cyber-investigations', 'plaso'",
                "homepage": "http://CASE.as"
            },
            {
                "name": "BreakSeq",
                "uri": "https://bio.tools/breakseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Structural variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Genomic structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "DNA structural variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Database of known human breakpoint junctions and software to search short reads against them.",
                "homepage": "http://sv.gersteinlab.org/breakseq/"
            },
            {
                "name": "Salmon",
                "uri": "https://bio.tools/salmon",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Gene expression"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Expression"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantification"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2495",
                                    "term": "Expression data analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3800",
                                    "term": "RNA-Seq quantitation"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3496",
                                "term": "RNA sequence (raw)"
                            },
                            {
                                "uri": "http://edamontology.org/data_2093",
                                "term": "Data reference"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "A tool for transcript expression quantification from RNA-seq data",
                "homepage": "https://github.com/COMBINE-lab/salmon"
            }
        ],
        "inputs": [
            "SALMON_TRANS_FA"
        ],
        "nb_inputs": 1,
        "outputs": [
            "SALMON_INDEX"
        ],
        "nb_outputs": 1,
        "name_workflow": "ericaenjoy3__rna_nf",
        "directive": [
            "label 'multiCore'",
            "tag \"salmonIndex\"",
            "publishDir path: getDir('reference', 'base_dir', params, canonPath = true), mode:\"copy\", saveAs: { return getDir('reference', 'salmon_dir', params, canonPath = false) }"
        ],
        "when": "action.call(params, 'compute', 'run_salmon_index_boolean', 'boolean')",
        "stub": ""
    },
    "startIndex": {
        "name_process": "startIndex",
        "string_process": "\nprocess startIndex {\n\n\tlabel 'multiCore'\n\n\ttag \"starIndex\"\n\n  publishDir path: getDir('reference', 'base_dir', params, canonPath = true), mode:\"copy\", saveAs: {\n\t\treturn getDir('reference', 'star_dir', params, canonPath = false)\n\t}\n\n  input:\n  file fa from STAR_GENOME_FA\n\tfile gtf from STAR_GTF\n\n  output:\n  file \"star_idx\" into STAR_INDEX\n\n\twhen:\n\taction.call(params, 'compute', 'run_star_index_boolean', 'boolean')\n\n  script:\n\tsjdbOverhang = action.call(params, 'reference', 'star_sjdbOverhang_integer', 'integer')\n\n\tif (!testInteger.call(sjdbOverhang)) {\n\t\tthrow new IllegalArgumentException(\"sjdbOverhang (\" + sjdbOverhang + \") is not Integer\")\n\t}\n\n  threads = 1\n\t\"\"\"\n\t\tmkdir star_idx\n\t\tSTAR \\\n\t\t\t\t--runMode genomeGenerate \\\n\t\t\t\t--runThreadN ${threads} \\\n\t\t\t\t--sjdbGTFfile ${gtf} \\\n\t\t\t\t--sjdbOverhang ${sjdbOverhang} \\\n\t\t\t\t--genomeDir star_idx \\\n\t\t\t\t--genomeFastaFiles ${fa}\n\t\"\"\"\n}",
        "nb_lignes_process": 38,
        "string_script": "\tsjdbOverhang = action.call(params, 'reference', 'star_sjdbOverhang_integer', 'integer')\n\n\tif (!testInteger.call(sjdbOverhang)) {\n\t\tthrow new IllegalArgumentException(\"sjdbOverhang (\" + sjdbOverhang + \") is not Integer\")\n\t}\n\n  threads = 1\n\t\"\"\"\n\t\tmkdir star_idx\n\t\tSTAR \\\n\t\t\t\t--runMode genomeGenerate \\\n\t\t\t\t--runThreadN ${threads} \\\n\t\t\t\t--sjdbGTFfile ${gtf} \\\n\t\t\t\t--sjdbOverhang ${sjdbOverhang} \\\n\t\t\t\t--genomeDir star_idx \\\n\t\t\t\t--genomeFastaFiles ${fa}\n\t\"\"\"",
        "nb_lignes_script": 16,
        "language_script": "bash",
        "tools": [
            "STAR"
        ],
        "tools_url": [
            "https://bio.tools/star"
        ],
        "tools_dico": [
            {
                "name": "STAR",
                "uri": "https://bio.tools/star",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Ultrafast universal RNA-seq aligner",
                "homepage": "http://code.google.com/p/rna-star/"
            }
        ],
        "inputs": [
            "STAR_GENOME_FA",
            "STAR_GTF"
        ],
        "nb_inputs": 2,
        "outputs": [
            "STAR_INDEX"
        ],
        "nb_outputs": 1,
        "name_workflow": "ericaenjoy3__rna_nf",
        "directive": [
            "label 'multiCore'",
            "tag \"starIndex\"",
            "publishDir path: getDir('reference', 'base_dir', params, canonPath = true), mode:\"copy\", saveAs: { return getDir('reference', 'star_dir', params, canonPath = false) }"
        ],
        "when": "action.call(params, 'compute', 'run_star_index_boolean', 'boolean')",
        "stub": ""
    },
    "bowtie2Index": {
        "name_process": "bowtie2Index",
        "string_process": "\nprocess bowtie2Index {\n\n\tlabel 'multiCore'\n\n\ttag \"bowtie2Index\"\n\n\tpublishDir path: concatDir(getDir('reference', 'base_dir', params, canonPath = true),\n\t\tgetDir('reference', 'tophat_bowtie2_dir', params, canonPath = false)), mode:\"copy\"\n\n  input:\n  file fa from BOWTIE2_GENOME_FA\n\n  output:\n  file \"*\" into BOWTIE2_INDEX\n\n\twhen:\n\taction.call(params, 'compute', 'run_bowtie2_index_boolean', 'boolean')\n\n  script:\n\tthreads = task.cpus\n  \"\"\"\n  \tbowtie2-build --threads ${threads} ${fa} genome_bt2\n  \"\"\"\n}",
        "nb_lignes_process": 23,
        "string_script": "\tthreads = task.cpus\n  \"\"\"\n  \tbowtie2-build --threads ${threads} ${fa} genome_bt2\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "BOWTIE2_GENOME_FA"
        ],
        "nb_inputs": 1,
        "outputs": [
            "BOWTIE2_INDEX"
        ],
        "nb_outputs": 1,
        "name_workflow": "ericaenjoy3__rna_nf",
        "directive": [
            "label 'multiCore'",
            "tag \"bowtie2Index\"",
            "publishDir path: concatDir(getDir('reference', 'base_dir', params, canonPath = true), getDir('reference', 'tophat_bowtie2_dir', params, canonPath = false)), mode:\"copy\""
        ],
        "when": "action.call(params, 'compute', 'run_bowtie2_index_boolean', 'boolean')",
        "stub": ""
    },
    "starAlign": {
        "name_process": "starAlign",
        "string_process": "\nprocess starAlign {\n\n\tlabel 'multiCore'\n\n\ttag \"starAlign: $sample\"\n\n\tpublishDir path: joinPath(getDir('output', 'base_dir', params, canonPath = true),\n\t\tgetDir('output', 'star_dir', params, canonPath = false)),\n\t\tmode: \"copy\", overwrite: true, saveAs: {\n\n\t\t\tswitch (it) {\n\t\t\t\tcase { it.endsWith('.bam' ) }:\n\t\t\t\t\treturn joinPath(\"$sample\", \"${sample}.bam\")\n\t\t\t\tcase { it.endsWith('.bam.bai') }:\n\t\t\t\t\treturn joinPath(\"$sample\", \"${sample}.bam.bai\")\n\t\t\t\tdefault:\n\t\t\t\t\treturn joinPath(\"$sample\", it)\n\t\t\t}\n\n\t\t}\n\n  input:\n  file index from STAR_INDEX.first()\n  set val(sample), file(reads) from STAR_FQ\n\tval tool from STAR_BAM_INDEX_TOOL\n\n  output:\n  set val(sample), file(\"${sample}_Aligned.sortedByCoord.out.bam\") into STAR_BAM\n\tfile(\"*\") into STAR_ALL\n\n\twhen:\n\taction.call(params, 'compute', 'run_star_boolean', 'boolean')\n\n  script:\n  def single = reads instanceof Path\n  threads = task.cpus\n\n\tswitch (tool){\n\t\tcase 'sambamba':\n\t\t\tflag = '--nthreads ' + threads\n\t\t\tbreak\n\t\tcase 'samtools':\n\t\t\tflag = ''\n\t\t\tbreak\n\t\tdefault:\n\t\t\tthrow new IllegalArgumentException( \"Can't accept the samtools_sambamba_string: \" + tool)\n\t}\n\n  if (single) {\n    \"\"\"\n\n\t\t\techo \"\\n===\\nProcessing starAlign\\n===\\nread: ${reads}\\n===\\n\"\n\n\t\t\tSTAR --runThreadN ${threads} \\\n\t\t\t\t --twopassMode Basic \\\n\t\t\t\t --genomeDir ${index} \\\n\t\t\t\t --readFilesIn ${reads} \\\n\t\t\t\t --readFilesCommand zcat \\\n\t\t\t\t --outSAMtype BAM SortedByCoordinate \\\n\t\t\t\t --chimSegmentMin 20 \\\n\t\t\t\t --outFilterIntronMotifs RemoveNoncanonical \\\n\t\t\t\t --outFilterMultimapNmax 20 \\\n\t\t\t\t --alignIntronMin 20 \\\n\t\t\t\t --alignIntronMax 1000000 \\\n\t\t\t\t --alignMatesGapMax 1000000 \\\n\t\t\t\t --outFilterType BySJout \\\n\t\t\t\t --alignSJoverhangMin 8 \\\n\t\t\t\t --alignSJDBoverhangMin 1 \\\n\t\t\t\t --outFileNamePrefix \"${sample}_\" && ${tool} index ${flag} ${sample}_Aligned.sortedByCoord.out.bam\n    \"\"\"\n  } else {\n    \"\"\"\n\n\t    echo \"\\n===\\nProcessing starAlign\\n===\\nR1: ${reads[0]} and R2: ${reads[1]}\\n===\\n\"\n\n\t\t\tSTAR --runThreadN ${threads}  \\\n\t\t\t\t\t --twopassMode Basic --genomeDir ${index} \\\n\t\t\t\t\t --readFilesIn ${reads[0]} ${reads[1]} \\\n\t\t\t\t\t --readFilesCommand zcat \\\n\t\t\t\t\t --outSAMtype BAM SortedByCoordinate \\\n\t\t\t\t\t --chimSegmentMin 20 \\\n\t\t\t\t\t --outFilterIntronMotifs RemoveNoncanonical \\\n\t\t\t\t\t --outFilterMultimapNmax 20 \\\n\t\t\t\t\t --alignIntronMin 20 \\\n\t\t\t\t\t --alignIntronMax 1000000 \\\n\t\t\t\t\t --alignMatesGapMax 1000000 \\\n\t\t\t\t\t --outFilterType BySJout \\\n\t\t\t\t\t --alignSJoverhangMin 8 \\\n\t\t\t\t\t --alignSJDBoverhangMin 1 \\\n\t\t\t\t\t --outFileNamePrefix \"${sample}_\" && ${tool} index ${flag} ${sample}_Aligned.sortedByCoord.out.bam\n    \"\"\"\n  }\n\n}",
        "nb_lignes_process": 93,
        "string_script": "  def single = reads instanceof Path\n  threads = task.cpus\n\n\tswitch (tool){\n\t\tcase 'sambamba':\n\t\t\tflag = '--nthreads ' + threads\n\t\t\tbreak\n\t\tcase 'samtools':\n\t\t\tflag = ''\n\t\t\tbreak\n\t\tdefault:\n\t\t\tthrow new IllegalArgumentException( \"Can't accept the samtools_sambamba_string: \" + tool)\n\t}\n\n  if (single) {\n    \"\"\"\n\n\t\t\techo \"\\n===\\nProcessing starAlign\\n===\\nread: ${reads}\\n===\\n\"\n\n\t\t\tSTAR --runThreadN ${threads} \\\n\t\t\t\t --twopassMode Basic \\\n\t\t\t\t --genomeDir ${index} \\\n\t\t\t\t --readFilesIn ${reads} \\\n\t\t\t\t --readFilesCommand zcat \\\n\t\t\t\t --outSAMtype BAM SortedByCoordinate \\\n\t\t\t\t --chimSegmentMin 20 \\\n\t\t\t\t --outFilterIntronMotifs RemoveNoncanonical \\\n\t\t\t\t --outFilterMultimapNmax 20 \\\n\t\t\t\t --alignIntronMin 20 \\\n\t\t\t\t --alignIntronMax 1000000 \\\n\t\t\t\t --alignMatesGapMax 1000000 \\\n\t\t\t\t --outFilterType BySJout \\\n\t\t\t\t --alignSJoverhangMin 8 \\\n\t\t\t\t --alignSJDBoverhangMin 1 \\\n\t\t\t\t --outFileNamePrefix \"${sample}_\" && ${tool} index ${flag} ${sample}_Aligned.sortedByCoord.out.bam\n    \"\"\"\n  } else {\n    \"\"\"\n\n\t    echo \"\\n===\\nProcessing starAlign\\n===\\nR1: ${reads[0]} and R2: ${reads[1]}\\n===\\n\"\n\n\t\t\tSTAR --runThreadN ${threads}  \\\n\t\t\t\t\t --twopassMode Basic --genomeDir ${index} \\\n\t\t\t\t\t --readFilesIn ${reads[0]} ${reads[1]} \\\n\t\t\t\t\t --readFilesCommand zcat \\\n\t\t\t\t\t --outSAMtype BAM SortedByCoordinate \\\n\t\t\t\t\t --chimSegmentMin 20 \\\n\t\t\t\t\t --outFilterIntronMotifs RemoveNoncanonical \\\n\t\t\t\t\t --outFilterMultimapNmax 20 \\\n\t\t\t\t\t --alignIntronMin 20 \\\n\t\t\t\t\t --alignIntronMax 1000000 \\\n\t\t\t\t\t --alignMatesGapMax 1000000 \\\n\t\t\t\t\t --outFilterType BySJout \\\n\t\t\t\t\t --alignSJoverhangMin 8 \\\n\t\t\t\t\t --alignSJDBoverhangMin 1 \\\n\t\t\t\t\t --outFileNamePrefix \"${sample}_\" && ${tool} index ${flag} ${sample}_Aligned.sortedByCoord.out.bam\n    \"\"\"\n  }",
        "nb_lignes_script": 57,
        "language_script": "bash",
        "tools": [
            "oswitch",
            "CASE",
            "FLAGdb",
            "BreakSeq",
            "STAR"
        ],
        "tools_url": [
            "https://bio.tools/oswitch",
            "https://bio.tools/CASE",
            "https://bio.tools/FLAGdb",
            "https://bio.tools/breakseq",
            "https://bio.tools/star"
        ],
        "tools_dico": [
            {
                "name": "oswitch",
                "uri": "https://bio.tools/oswitch",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3760",
                                    "term": "Service management"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Provides quick and simple Docker based virtual environments on Macs and compute clusters alike for reproducible bioinformatics.",
                "homepage": "https://github.com/wurmlab/oswitch"
            },
            {
                "name": "CASE",
                "uri": "https://bio.tools/CASE",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0749",
                            "term": "Transcription factors and regulatory sites"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Model organisms"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0089",
                            "term": "Ontology and terminology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Organisms"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3436",
                                    "term": "Aggregation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3559",
                                    "term": "Ontology visualisation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3559",
                                    "term": "Ontology browsing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Advancing Coordinated Cyber-investigations and Tool Interoperability using a Community Developed Specification Language.\n\nSource files for the CASE website.\n\nAPI used for instantiating CASE objects (includes ontological verification and type checking).\n\nCyber-investigation Analysis Standard Expression (CASE).\n\nRead the CASE Wiki tab to learn everything you need to know about the Cyber-investigation Analysis Standard Expression (CASE) ontology. For learning about the Unified Cyber Ontology, CASE's parent, see UCO.\n\n\"@vocab\": \"http://case.example.org/core#\",.\n\nDET ER DINE PENGER DET DREIER SEG OM...\n\nVi er ikke st\ufffdrst, men garanterer effektiv behandling.\n\nLast ned v\ufffdr brosjyre i PDF format.\n\n||| COMMON LINK WITH (PUB. & NAME DIFFERENT) bio.tools/pymzml (GITHUB.COM).\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'UCO', 'cyber-investigation', 'cyber-investigations', 'plaso'",
                "homepage": "http://CASE.as"
            },
            {
                "name": "FLAGdb",
                "uri": "https://bio.tools/FLAGdb",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant science"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plants"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Botany"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Integrative database around plant genomes.",
                "homepage": "http://urgv.evry.inra.fr/projects/FLAGdb++/HTML/"
            },
            {
                "name": "BreakSeq",
                "uri": "https://bio.tools/breakseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Structural variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Genomic structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "DNA structural variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Database of known human breakpoint junctions and software to search short reads against them.",
                "homepage": "http://sv.gersteinlab.org/breakseq/"
            },
            {
                "name": "STAR",
                "uri": "https://bio.tools/star",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Ultrafast universal RNA-seq aligner",
                "homepage": "http://code.google.com/p/rna-star/"
            }
        ],
        "inputs": [
            "STAR_INDEX",
            "STAR_FQ",
            "STAR_BAM_INDEX_TOOL"
        ],
        "nb_inputs": 3,
        "outputs": [
            "STAR_BAM",
            "STAR_ALL"
        ],
        "nb_outputs": 2,
        "name_workflow": "ericaenjoy3__rna_nf",
        "directive": [
            "label 'multiCore'",
            "tag \"starAlign: $sample\"",
            "publishDir path: joinPath(getDir('output', 'base_dir', params, canonPath = true), getDir('output', 'star_dir', params, canonPath = false)) , mode: \"copy\", overwrite: true, saveAs: { switch (it) { case { it.endsWith('.bam' ) }: return joinPath(\"$sample\", \"${sample}.bam\") case { it.endsWith('.bam.bai') }: return joinPath(\"$sample\", \"${sample}.bam.bai\") default: return joinPath(\"$sample\", it) } }"
        ],
        "when": "action.call(params, 'compute', 'run_star_boolean', 'boolean')",
        "stub": ""
    },
    "tophatAlign": {
        "name_process": "tophatAlign",
        "string_process": "\nprocess tophatAlign {\n\n\tlabel 'multiCore'\n\n\ttag \"tophatAlign: $sample\"\n\techo true\n\tpublishDir path: joinPath(getDir('output', 'base_dir', params, canonPath = true),\n\t\tgetDir('output', 'tophat_dir', params, canonPath = false)),\n\t\tmode: \"copy\", saveAs: {\n\n\t\t\tswitch (it) {\n\t\t\t\tcase { it.endsWith('.bam' ) }:\n\t\t\t\t\treturn joinPath(\"$sample\", \"${sample}.bam\")\n\t\t\t\tcase { it.endsWith('.bam.bai')}:\n\t\t\t\t\treturn joinPath(\"$sample\", \"${sample}.bam.bai\")\n\t\t\t\tdefault:\n\t\t\t\t\treturn joinPath(\"$sample\", it)\n\t\t\t}\n\n\t\t}\n\n  input:\n\tfile index from BOWTIE2_INDEX\n\tfile gtf from TOPHAT_GTF.first()\n  set val(sample), file(reads) from TOPHAT_FQ\n\tval tool from TOPHAT_BAM_INDEX_TOOL.first()\n\n  output:\n  set val(sample), file(\"accepted_hits.bam\") into TOPHAT_BAM\n\tfile(\"*\") into TOPHAT_ALL\n\n\twhen:\n\taction.call(params, 'compute', 'run_tophat_boolean', 'boolean')\n\n  script:\n\tthreads = task.cpus\n\n\tswitch (tool){\n\t\tcase 'sambamba':\n\t\t\tflag = '--nthreads ' + threads\n\t\t\tbreak\n\t\tcase 'samtools':\n\t\t\tflag = ''\n\t\t\tbreak\n\t\tdefault:\n\t\t\tthrow new IllegalArgumentException( \"Can't accept the samtools_sambamba_string: \" + tool)\n\t}\n\n\tprintln \"index: \" + index\n\tindex_base = index[0].toString() - ~/.\\d.bt2/\n\tprintln \"index_base: \" + index_base\n  def single = reads instanceof Path\n  threads = task.cpus\n  if (single) {\n    \"\"\"\n\n\t\t\techo \"\\n===\\nProcessing tophatAlign\\n===\\nread: ${reads}\\n===\\n\"\n\n\t\t\ttophat -p ${threads} \\\n\t\t\t\t-G ${gtf} \\\n\t\t\t\t--no-novel-juncs \\\n\t\t\t\t-o . \\\n\t\t\t\t--library-type ${strand} \\\n\t\t\t\t${index_base} ${reads} && ${tool} index ${flag} accepted_hits.bam\n    \"\"\"\n  } else {\n    \"\"\"\n\t\t\techo ${reads}\n\t    echo \"\\n===\\nProcessing tophatAlign\\n===\\nR1: ${reads[0]} and R2: ${reads[1]}\\n===\\n\"\n\n\t\t\ttophat -p ${threads} \\\n\t\t\t\t-G ${gtf} \\\n\t\t\t\t--no-novel-juncs \\\n\t\t\t\t-o . \\\n\t\t\t\t--library-type ${strand} \\\n\t\t\t\t${index_base} ${reads[0]} ${reads[1]} && ${tool} index ${flag} accepted_hits.bam\n    \"\"\"\n  }\n}",
        "nb_lignes_process": 78,
        "string_script": "\tthreads = task.cpus\n\n\tswitch (tool){\n\t\tcase 'sambamba':\n\t\t\tflag = '--nthreads ' + threads\n\t\t\tbreak\n\t\tcase 'samtools':\n\t\t\tflag = ''\n\t\t\tbreak\n\t\tdefault:\n\t\t\tthrow new IllegalArgumentException( \"Can't accept the samtools_sambamba_string: \" + tool)\n\t}\n\n\tprintln \"index: \" + index\n\tindex_base = index[0].toString() - ~/.\\d.bt2/\n\tprintln \"index_base: \" + index_base\n  def single = reads instanceof Path\n  threads = task.cpus\n  if (single) {\n    \"\"\"\n\n\t\t\techo \"\\n===\\nProcessing tophatAlign\\n===\\nread: ${reads}\\n===\\n\"\n\n\t\t\ttophat -p ${threads} \\\n\t\t\t\t-G ${gtf} \\\n\t\t\t\t--no-novel-juncs \\\n\t\t\t\t-o . \\\n\t\t\t\t--library-type ${strand} \\\n\t\t\t\t${index_base} ${reads} && ${tool} index ${flag} accepted_hits.bam\n    \"\"\"\n  } else {\n    \"\"\"\n\t\t\techo ${reads}\n\t    echo \"\\n===\\nProcessing tophatAlign\\n===\\nR1: ${reads[0]} and R2: ${reads[1]}\\n===\\n\"\n\n\t\t\ttophat -p ${threads} \\\n\t\t\t\t-G ${gtf} \\\n\t\t\t\t--no-novel-juncs \\\n\t\t\t\t-o . \\\n\t\t\t\t--library-type ${strand} \\\n\t\t\t\t${index_base} ${reads[0]} ${reads[1]} && ${tool} index ${flag} accepted_hits.bam\n    \"\"\"\n  }",
        "nb_lignes_script": 42,
        "language_script": "bash",
        "tools": [
            "oswitch",
            "CASE",
            "FLAGdb",
            "BreakSeq",
            "TopHat"
        ],
        "tools_url": [
            "https://bio.tools/oswitch",
            "https://bio.tools/CASE",
            "https://bio.tools/FLAGdb",
            "https://bio.tools/breakseq",
            "https://bio.tools/tophat"
        ],
        "tools_dico": [
            {
                "name": "oswitch",
                "uri": "https://bio.tools/oswitch",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3760",
                                    "term": "Service management"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Provides quick and simple Docker based virtual environments on Macs and compute clusters alike for reproducible bioinformatics.",
                "homepage": "https://github.com/wurmlab/oswitch"
            },
            {
                "name": "CASE",
                "uri": "https://bio.tools/CASE",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0749",
                            "term": "Transcription factors and regulatory sites"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Model organisms"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0089",
                            "term": "Ontology and terminology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Organisms"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3436",
                                    "term": "Aggregation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3559",
                                    "term": "Ontology visualisation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3559",
                                    "term": "Ontology browsing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Advancing Coordinated Cyber-investigations and Tool Interoperability using a Community Developed Specification Language.\n\nSource files for the CASE website.\n\nAPI used for instantiating CASE objects (includes ontological verification and type checking).\n\nCyber-investigation Analysis Standard Expression (CASE).\n\nRead the CASE Wiki tab to learn everything you need to know about the Cyber-investigation Analysis Standard Expression (CASE) ontology. For learning about the Unified Cyber Ontology, CASE's parent, see UCO.\n\n\"@vocab\": \"http://case.example.org/core#\",.\n\nDET ER DINE PENGER DET DREIER SEG OM...\n\nVi er ikke st\ufffdrst, men garanterer effektiv behandling.\n\nLast ned v\ufffdr brosjyre i PDF format.\n\n||| COMMON LINK WITH (PUB. & NAME DIFFERENT) bio.tools/pymzml (GITHUB.COM).\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'UCO', 'cyber-investigation', 'cyber-investigations', 'plaso'",
                "homepage": "http://CASE.as"
            },
            {
                "name": "FLAGdb",
                "uri": "https://bio.tools/FLAGdb",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant science"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plants"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Botany"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0780",
                            "term": "Plant"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Integrative database around plant genomes.",
                "homepage": "http://urgv.evry.inra.fr/projects/FLAGdb++/HTML/"
            },
            {
                "name": "BreakSeq",
                "uri": "https://bio.tools/breakseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Structural variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Genomic structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "DNA structural variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Database of known human breakpoint junctions and software to search short reads against them.",
                "homepage": "http://sv.gersteinlab.org/breakseq/"
            },
            {
                "name": "TopHat",
                "uri": "https://bio.tools/tophat",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0433",
                                    "term": "Splice site prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0433",
                                    "term": "Splice prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_1234",
                                "term": "Sequence set (nucleic acid)"
                            },
                            {
                                "uri": "http://edamontology.org/data_2749",
                                "term": "Genome identifier"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3002",
                                "term": "Annotation track"
                            }
                        ]
                    }
                ],
                "description": "Program that aligns RNA-Seq reads to a genome in order to identify exon-exon splice junctions. It is built on the ultrafast short read mapping program Bowtie. A stable SAMtools version is now packaged with the program.",
                "homepage": "http://ccb.jhu.edu/software/tophat/index.shtml"
            }
        ],
        "inputs": [
            "BOWTIE2_INDEX",
            "TOPHAT_GTF",
            "TOPHAT_FQ",
            "TOPHAT_BAM_INDEX_TOOL"
        ],
        "nb_inputs": 4,
        "outputs": [
            "TOPHAT_BAM",
            "TOPHAT_ALL"
        ],
        "nb_outputs": 2,
        "name_workflow": "ericaenjoy3__rna_nf",
        "directive": [
            "label 'multiCore'",
            "tag \"tophatAlign: $sample\"",
            "echo true",
            "publishDir path: joinPath(getDir('output', 'base_dir', params, canonPath = true), getDir('output', 'tophat_dir', params, canonPath = false)) , mode: \"copy\", saveAs: { switch (it) { case { it.endsWith('.bam' ) }: return joinPath(\"$sample\", \"${sample}.bam\") case { it.endsWith('.bam.bai')}: return joinPath(\"$sample\", \"${sample}.bam.bai\") default: return joinPath(\"$sample\", it) } }"
        ],
        "when": "action.call(params, 'compute', 'run_tophat_boolean', 'boolean')",
        "stub": ""
    },
    "alignmentMetrics": {
        "name_process": "alignmentMetrics",
        "string_process": "\nprocess alignmentMetrics {\n\n\tlabel 'singleCore'\n\n\ttag \"alignmentMetrics $sample\"\n\n\tpublishDir path: joinPath(getDir('output', 'base_dir', params, canonPath = true),\n\t\tgetDir('output', 'bamqc_dir', params, canonPath = false)),\n\t\tmode: \"copy\", saveAs: {\n\t\t\treturn joinPath(\"$sample\", it)\n\t\t}\n\n\tinput:\n\tset val(sample), file(bam) from BAM_2ALIGN_STATS\n\tfile fa from PICARD_ALIGN_GENOME_FA.collect()\n\n\toutput:\n\tfile \"${sample}.CollectAlignmentSummaryMetrics.txt\" into ALIGN_STATS\n\n\twhen:\n\taction.call(params, 'compute', 'run_bamqc_boolean', 'boolean')\n\n\tscript:\n\ttmp_dir = getDir('intermediates', 'base_dir', params, canonPath = true)\n\t\"\"\"\n\t\tpicard CollectAlignmentSummaryMetrics \\\n\t    \tVALIDATION_STRINGENCY=LENIENT \\\n\t\t    MAX_RECORDS_IN_RAM=4000000 \\\n\t\t    ASSUME_SORTED=true \\\n\t\t    ADAPTER_SEQUENCE= \\\n\t\t    IS_BISULFITE_SEQUENCED=false \\\n\t\t    MAX_INSERT_SIZE=100000 \\\n\t\t    R=${fa} \\\n\t\t    INPUT=${bam} \\\n\t\t    OUTPUT=${sample}.CollectAlignmentSummaryMetrics.txt \\\n\t\t    TMP_DIR=\"${tmp_dir}/\"\n\t\"\"\"\n}",
        "nb_lignes_process": 37,
        "string_script": "\ttmp_dir = getDir('intermediates', 'base_dir', params, canonPath = true)\n\t\"\"\"\n\t\tpicard CollectAlignmentSummaryMetrics \\\n\t    \tVALIDATION_STRINGENCY=LENIENT \\\n\t\t    MAX_RECORDS_IN_RAM=4000000 \\\n\t\t    ASSUME_SORTED=true \\\n\t\t    ADAPTER_SEQUENCE= \\\n\t\t    IS_BISULFITE_SEQUENCED=false \\\n\t\t    MAX_INSERT_SIZE=100000 \\\n\t\t    R=${fa} \\\n\t\t    INPUT=${bam} \\\n\t\t    OUTPUT=${sample}.CollectAlignmentSummaryMetrics.txt \\\n\t\t    TMP_DIR=\"${tmp_dir}/\"\n\t\"\"\"",
        "nb_lignes_script": 13,
        "language_script": "bash",
        "tools": [
            "Picard"
        ],
        "tools_url": [
            "https://bio.tools/picard_tools"
        ],
        "tools_dico": [
            {
                "name": "Picard",
                "uri": "https://bio.tools/picard_tools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A set of command line tools for manipulating high-throughput sequencing (HTS) data in formats such as SAM/BAM/CRAM and VCF. Available as a standalone program or within the GATK4 program.",
                "homepage": "https://github.com/broadinstitute/picard"
            }
        ],
        "inputs": [
            "BAM_2ALIGN_STATS",
            "PICARD_ALIGN_GENOME_FA"
        ],
        "nb_inputs": 2,
        "outputs": [
            "ALIGN_STATS"
        ],
        "nb_outputs": 1,
        "name_workflow": "ericaenjoy3__rna_nf",
        "directive": [
            "label 'singleCore'",
            "tag \"alignmentMetrics $sample\"",
            "publishDir path: joinPath(getDir('output', 'base_dir', params, canonPath = true), getDir('output', 'bamqc_dir', params, canonPath = false)) , mode: \"copy\", saveAs: { return joinPath(\"$sample\", it) }"
        ],
        "when": "action.call(params, 'compute', 'run_bamqc_boolean', 'boolean')",
        "stub": ""
    },
    "refFlat": {
        "name_process": "refFlat",
        "string_process": "\nprocess refFlat {\n\n\tlabel 'singleCore'\n\n\ttag \"refFlat\"\n\n\tinput:\n\tfile gtf from REFFLAT_GTF\n\n\toutput:\n\tfile \"refFlat.txt\" into REFFlat_FOUT\n\n\twhen:\n\taction.call(params, 'compute', 'run_bamqc_boolean', 'boolean')\n\n\tshell:\n\t'''\n\t\tgtfToGenePred \\\n\t\t\t-genePredExt \\\n\t\t\t-geneNameAsName2 \\\n\t\t\t-ignoreGroupsWithoutExons !{gtf}  /dev/stdout | \\\n\t\t\tawk 'BEGIN { OFS=\"\\\\t\"} {print $12, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10}' \\\n\t\t\t> refFlat.txt\n\t'''\n}",
        "nb_lignes_process": 24,
        "string_script": "\t'''\n\t\tgtfToGenePred \\\n\t\t\t-genePredExt \\\n\t\t\t-geneNameAsName2 \\\n\t\t\t-ignoreGroupsWithoutExons !{gtf}  /dev/stdout | \\\n\t\t\tawk 'BEGIN { OFS=\"\\\\t\"} {print $12, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10}' \\\n\t\t\t> refFlat.txt\n\t'''",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "REFFLAT_GTF"
        ],
        "nb_inputs": 1,
        "outputs": [
            "REFFlat_FOUT"
        ],
        "nb_outputs": 1,
        "name_workflow": "ericaenjoy3__rna_nf",
        "directive": [
            "label 'singleCore'",
            "tag \"refFlat\""
        ],
        "when": "action.call(params, 'compute', 'run_bamqc_boolean', 'boolean')",
        "stub": ""
    },
    "fetchChrSize": {
        "name_process": "fetchChrSize",
        "string_process": "\nprocess fetchChrSize {\n\n\tlabel 'singleCore'\n\n\ttag \"fetchChrSize\"\n\n\tinput:\n\tfile fa from CHRSIZE_FA\n\n\toutput:\n\tfile \"chrom_size.txt\" into CHRSIZE\n\n\twhen:\n\taction.call(params, 'compute', 'run_bamqc_boolean', 'boolean')\n\n\tshell:\n\t'''\n\t\tsamtools faidx !{fa}\n\t\tcut -f1,2 !{fa}.fai > chrom_size.txt\n\t'''\n}",
        "nb_lignes_process": 20,
        "string_script": "\t'''\n\t\tsamtools faidx !{fa}\n\t\tcut -f1,2 !{fa}.fai > chrom_size.txt\n\t'''",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "CHRSIZE_FA"
        ],
        "nb_inputs": 1,
        "outputs": [
            "CHRSIZE"
        ],
        "nb_outputs": 1,
        "name_workflow": "ericaenjoy3__rna_nf",
        "directive": [
            "label 'singleCore'",
            "tag \"fetchChrSize\""
        ],
        "when": "action.call(params, 'compute', 'run_bamqc_boolean', 'boolean')",
        "stub": ""
    },
    "rRNAInterval": {
        "name_process": "rRNAInterval",
        "string_process": "\nprocess rRNAInterval {\n\n\tlabel 'singleCore'\n\n\ttag \"rRNAInterval\"\n\n\tinput:\n\tfile \"chrom_size.txt\" from CHRSIZE\n\tfile gtf from RRNA_GTF.collect()\n\n\toutput:\n\tfile \"rrna_interval.txt\" into RRNA\n\n\twhen:\n\taction.call(params, 'compute', 'run_bamqc_boolean', 'boolean')\n\n\tshell:\n\ttool = action.call(params, 'tools', 'sortIntervalByGivenChrOrder_perl_file', 'file')\n\tif (!new File(tool).exists()) {\n\t\tthrow new IllegalArgumentException( \"sortIntervalByGivenChrOrder_perl_file under 'tools' does not exist: \" + tool)\n\t}\n\t'''\n\techo \"@HD\tVN:1.4\" > rrna_interval.txt\n\tperl -lane 'print \"\\\\@SQ\\\\tSN:$F[0]\\\\tLN:$F[1]\\\\tAS:$genomeName\"' chrom_size.txt | grep -v _ >> rrna_interval.txt\n\n\tgrep 'gene_type \"rRNA\"' !{gtf} |  awk '$3 == \"transcript\"' |  cut -f1,4,5,7,9 | \\\n\t\tperl -lane '\n\t        /transcript_id \"([^\"]+)\"/ or die \"no transcript_id on $.\";\n\t        print join \"\\\\t\", (@F[0,1,2,3], $1)\n\t    ' | \\\n\t    sort -k1V -k2n -k3n | \\\n\t\t\tperl !{tool} rrna_interval.txt >> rrna_interval.txt\n\t'''\n}",
        "nb_lignes_process": 33,
        "string_script": "\ttool = action.call(params, 'tools', 'sortIntervalByGivenChrOrder_perl_file', 'file')\n\tif (!new File(tool).exists()) {\n\t\tthrow new IllegalArgumentException( \"sortIntervalByGivenChrOrder_perl_file under 'tools' does not exist: \" + tool)\n\t}\n\t'''\n\techo \"@HD\tVN:1.4\" > rrna_interval.txt\n\tperl -lane 'print \"\\\\@SQ\\\\tSN:$F[0]\\\\tLN:$F[1]\\\\tAS:$genomeName\"' chrom_size.txt | grep -v _ >> rrna_interval.txt\n\n\tgrep 'gene_type \"rRNA\"' !{gtf} |  awk '$3 == \"transcript\"' |  cut -f1,4,5,7,9 | \\\n\t\tperl -lane '\n\t        /transcript_id \"([^\"]+)\"/ or die \"no transcript_id on $.\";\n\t        print join \"\\\\t\", (@F[0,1,2,3], $1)\n\t    ' | \\\n\t    sort -k1V -k2n -k3n | \\\n\t\t\tperl !{tool} rrna_interval.txt >> rrna_interval.txt\n\t'''",
        "nb_lignes_script": 15,
        "language_script": "bash",
        "tools": [
            "GTOOL"
        ],
        "tools_url": [
            "https://bio.tools/gtool"
        ],
        "tools_dico": [
            {
                "name": "GTOOL",
                "uri": "https://bio.tools/gtool",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3516",
                            "term": "Genotyping experiment"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Program for transforming sets of genotype data for use with the programs SNPTEST and IMPUTE.",
                "homepage": "http://www.well.ox.ac.uk/~cfreeman/software/gwas/gtool.html"
            }
        ],
        "inputs": [
            "CHRSIZE",
            "RRNA_GTF"
        ],
        "nb_inputs": 2,
        "outputs": [
            "RRNA"
        ],
        "nb_outputs": 1,
        "name_workflow": "ericaenjoy3__rna_nf",
        "directive": [
            "label 'singleCore'",
            "tag \"rRNAInterval\""
        ],
        "when": "action.call(params, 'compute', 'run_bamqc_boolean', 'boolean')",
        "stub": ""
    },
    "seqMetrics": {
        "name_process": "seqMetrics",
        "string_process": "\nprocess seqMetrics {\n\n\tlabel 'multiCore'\n\n\ttag \"seqMetrics: $sample\"\n\n\tpublishDir path: joinPath(getDir('output', 'base_dir', params, canonPath = true),\n\t\tgetDir('output', 'bamqc_dir', params, canonPath = false)),\n\t\tmode: \"copy\", saveAs: {\n\t\t\treturn joinPath(\"$sample\", it)\n\t\t}\n\n\tinput:\n\tset val(sample), file(bam) from BAM_2SEQ_STATS\n\tfile fa from PICARD_SEQ_GENOME_FA.collect()\n\tfile \"rrna_interval.txt\" from RRNA.collect()\n\tfile \"refFlat.txt\" from REFFlat_FOUT.collect()\n\n\toutput:\n\tfile \"${sample}.CollectRnaSeqMetrics.txt\" into SEQ_STATS\n\n\twhen:\n\taction.call(params, 'compute', 'run_bamqc_boolean', 'boolean')\n\n\tscript:\n\ttmp_dir = getDir('intermediates', 'base_dir', params, canonPath = true)\n\t\"\"\"\n\t\tpicard CollectRnaSeqMetrics \\\n\t    VALIDATION_STRINGENCY=LENIENT \\\n\t    MAX_RECORDS_IN_RAM=4000000 \\\n\t    STRAND_SPECIFICITY=NONE \\\n\t    MINIMUM_LENGTH=500 \\\n\t    RRNA_FRAGMENT_PERCENTAGE=0.8 \\\n\t    METRIC_ACCUMULATION_LEVEL=ALL_READS \\\n\t    R=${fa} \\\n\t    REF_FLAT=refFlat.txt \\\n\t    RIBOSOMAL_INTERVALS=rrna_interval.txt \\\n\t    INPUT=${bam} \\\n\t    OUTPUT=${sample}.CollectRnaSeqMetrics.txt \\\n\t    TMP_DIR=${tmp_dir}\n\t\"\"\"\n}",
        "nb_lignes_process": 41,
        "string_script": "\ttmp_dir = getDir('intermediates', 'base_dir', params, canonPath = true)\n\t\"\"\"\n\t\tpicard CollectRnaSeqMetrics \\\n\t    VALIDATION_STRINGENCY=LENIENT \\\n\t    MAX_RECORDS_IN_RAM=4000000 \\\n\t    STRAND_SPECIFICITY=NONE \\\n\t    MINIMUM_LENGTH=500 \\\n\t    RRNA_FRAGMENT_PERCENTAGE=0.8 \\\n\t    METRIC_ACCUMULATION_LEVEL=ALL_READS \\\n\t    R=${fa} \\\n\t    REF_FLAT=refFlat.txt \\\n\t    RIBOSOMAL_INTERVALS=rrna_interval.txt \\\n\t    INPUT=${bam} \\\n\t    OUTPUT=${sample}.CollectRnaSeqMetrics.txt \\\n\t    TMP_DIR=${tmp_dir}\n\t\"\"\"",
        "nb_lignes_script": 15,
        "language_script": "bash",
        "tools": [
            "Picard"
        ],
        "tools_url": [
            "https://bio.tools/picard_tools"
        ],
        "tools_dico": [
            {
                "name": "Picard",
                "uri": "https://bio.tools/picard_tools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A set of command line tools for manipulating high-throughput sequencing (HTS) data in formats such as SAM/BAM/CRAM and VCF. Available as a standalone program or within the GATK4 program.",
                "homepage": "https://github.com/broadinstitute/picard"
            }
        ],
        "inputs": [
            "BAM_2SEQ_STATS",
            "PICARD_SEQ_GENOME_FA",
            "RRNA",
            "REFFlat_FOUT"
        ],
        "nb_inputs": 4,
        "outputs": [
            "SEQ_STATS"
        ],
        "nb_outputs": 1,
        "name_workflow": "ericaenjoy3__rna_nf",
        "directive": [
            "label 'multiCore'",
            "tag \"seqMetrics: $sample\"",
            "publishDir path: joinPath(getDir('output', 'base_dir', params, canonPath = true), getDir('output', 'bamqc_dir', params, canonPath = false)) , mode: \"copy\", saveAs: { return joinPath(\"$sample\", it) }"
        ],
        "when": "action.call(params, 'compute', 'run_bamqc_boolean', 'boolean')",
        "stub": ""
    },
    "featureCounts": {
        "name_process": "featureCounts",
        "string_process": "\nprocess featureCounts {\n\n\tlabel 'multiCore'\n\n\ttag \"featureCounts: $sample\"\n\n\tpublishDir path: joinPath(getDir('output', 'base_dir', params, canonPath = true),\n\t\tgetDir('output', 'featurecounts_dir', params, canonPath = false)),\n\t\tmode: \"copy\", saveAs: {\n\t\t\t\t\treturn joinPath(\"$sample\", it)\n\t\t}\n\n\tinput:\n\tset val(sample), file(bam) from BAM_2CNT\n\tfile gtf from CNT_GTF.collect()\n\n\toutput:\n\tfile \"${sample}.exon.geneID.txt\" into CNT_FOUT\n\n\twhen:\n\taction.call(params, 'compute', 'run_featurecounts_boolean', 'boolean')\n\n\tshell:\n\tthreads = task.cpus\n\n\tif (!strand) {\n\t\tthrow new IllegalArgumentException(\"For featureCounts, strand variable is unset or empty.\");\n\t}\n\n\tswitch(strand) {\n\t\tcase 'fr-firststrand':\n\t\t\tstrand_flag = '-s 2'\n\t\t\tbreak\n\t\tcase 'fr-secondstrand':\n\t\t\tstrand_flag = '-s 1'\n\t\t\tbreak\n\t\tcase 'fr-unstranded':\n\t\t\tstrand_flag = '-s 0'\n\t\t\tbreak\n\t\tdefault:\n\t\t\tthrow new IllegalArgumentException(\"For featureCounts, strand variable is not matched to tophat specification: \" + strand);\n\t}\n\n\ttmp_dir = getDir('intermediates', 'base_dir', params, canonPath = true)\n\t'''\n\t\tPE=`samtools view -c -f 1 !{bam}`\n\n\t\tif [[ ${PE} -gt 0 ]]; then\n\t\t\tPE_FLAG=\"-p\"\n\t\telif [[ ${PE} -eq 0 ]]; then\n\t\t\tPE_FLAG=\"\"\n\t\telse\n\t\t\techo \"Unknown PE/SE setting ${PE}\"\n\t\t\texit 1\n\t\tfi\n\n \t\tfeatureCounts ${PE_FLAG} -T !{threads} \\\n\t\t\t-t exon \\\n\t\t\t-g gene_id \\\n\t\t\t-a !{gtf} \\\n\t\t\t-o !{sample}.exon.geneID.txt \\\n\t\t\t--tmpDir !{tmp_dir} \\\n\t\t\t!{bam}\n\t'''\n}",
        "nb_lignes_process": 64,
        "string_script": "\tthreads = task.cpus\n\n\tif (!strand) {\n\t\tthrow new IllegalArgumentException(\"For featureCounts, strand variable is unset or empty.\");\n\t}\n\n\tswitch(strand) {\n\t\tcase 'fr-firststrand':\n\t\t\tstrand_flag = '-s 2'\n\t\t\tbreak\n\t\tcase 'fr-secondstrand':\n\t\t\tstrand_flag = '-s 1'\n\t\t\tbreak\n\t\tcase 'fr-unstranded':\n\t\t\tstrand_flag = '-s 0'\n\t\t\tbreak\n\t\tdefault:\n\t\t\tthrow new IllegalArgumentException(\"For featureCounts, strand variable is not matched to tophat specification: \" + strand);\n\t}\n\n\ttmp_dir = getDir('intermediates', 'base_dir', params, canonPath = true)\n\t'''\n\t\tPE=`samtools view -c -f 1 !{bam}`\n\n\t\tif [[ ${PE} -gt 0 ]]; then\n\t\t\tPE_FLAG=\"-p\"\n\t\telif [[ ${PE} -eq 0 ]]; then\n\t\t\tPE_FLAG=\"\"\n\t\telse\n\t\t\techo \"Unknown PE/SE setting ${PE}\"\n\t\t\texit 1\n\t\tfi\n\n \t\tfeatureCounts ${PE_FLAG} -T !{threads} \\\n\t\t\t-t exon \\\n\t\t\t-g gene_id \\\n\t\t\t-a !{gtf} \\\n\t\t\t-o !{sample}.exon.geneID.txt \\\n\t\t\t--tmpDir !{tmp_dir} \\\n\t\t\t!{bam}\n\t'''",
        "nb_lignes_script": 40,
        "language_script": "bash",
        "tools": [
            "CASE",
            "BreakSeq",
            "FeatureCounts"
        ],
        "tools_url": [
            "https://bio.tools/CASE",
            "https://bio.tools/breakseq",
            "https://bio.tools/featurecounts"
        ],
        "tools_dico": [
            {
                "name": "CASE",
                "uri": "https://bio.tools/CASE",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0749",
                            "term": "Transcription factors and regulatory sites"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Model organisms"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0089",
                            "term": "Ontology and terminology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0621",
                            "term": "Organisms"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3436",
                                    "term": "Aggregation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3559",
                                    "term": "Ontology visualisation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3559",
                                    "term": "Ontology browsing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Advancing Coordinated Cyber-investigations and Tool Interoperability using a Community Developed Specification Language.\n\nSource files for the CASE website.\n\nAPI used for instantiating CASE objects (includes ontological verification and type checking).\n\nCyber-investigation Analysis Standard Expression (CASE).\n\nRead the CASE Wiki tab to learn everything you need to know about the Cyber-investigation Analysis Standard Expression (CASE) ontology. For learning about the Unified Cyber Ontology, CASE's parent, see UCO.\n\n\"@vocab\": \"http://case.example.org/core#\",.\n\nDET ER DINE PENGER DET DREIER SEG OM...\n\nVi er ikke st\ufffdrst, men garanterer effektiv behandling.\n\nLast ned v\ufffdr brosjyre i PDF format.\n\n||| COMMON LINK WITH (PUB. & NAME DIFFERENT) bio.tools/pymzml (GITHUB.COM).\n\n||| CORRECT NAME OF TOOL COULD ALSO BE 'UCO', 'cyber-investigation', 'cyber-investigations', 'plaso'",
                "homepage": "http://CASE.as"
            },
            {
                "name": "BreakSeq",
                "uri": "https://bio.tools/breakseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Structural variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "Genomic structural variation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3175",
                            "term": "DNA structural variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Database of known human breakpoint junctions and software to search short reads against them.",
                "homepage": "http://sv.gersteinlab.org/breakseq/"
            },
            {
                "name": "FeatureCounts",
                "uri": "https://bio.tools/featurecounts",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3793",
                                    "term": "Read summarisation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "featureCounts is a very efficient read quantifier. It can be used to summarize RNA-seq reads and gDNA-seq reads to a variety of genomic features such as genes, exons, promoters, gene bodies and genomic bins. It is included in the Bioconductor Rsubread package and also in the SourceForge Subread package.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/Rsubread.html"
            }
        ],
        "inputs": [
            "BAM_2CNT",
            "CNT_GTF"
        ],
        "nb_inputs": 2,
        "outputs": [
            "CNT_FOUT"
        ],
        "nb_outputs": 1,
        "name_workflow": "ericaenjoy3__rna_nf",
        "directive": [
            "label 'multiCore'",
            "tag \"featureCounts: $sample\"",
            "publishDir path: joinPath(getDir('output', 'base_dir', params, canonPath = true), getDir('output', 'featurecounts_dir', params, canonPath = false)) , mode: \"copy\", saveAs: { return joinPath(\"$sample\", it) }"
        ],
        "when": "action.call(params, 'compute', 'run_featurecounts_boolean', 'boolean')",
        "stub": ""
    },
    "salmonQuant": {
        "name_process": "salmonQuant",
        "string_process": "\nprocess salmonQuant {\n\n\tlabel 'multiCore'\n\n  tag \"salmonQuant: $sample\"\n\n\tpublishDir path: concatDir(getDir('output', 'base_dir', params, canonPath = true),\n\t\tgetDir('output', 'salmon', params, canonPath = false)),\n\t\tmode: \"copy\"\n\n  input:\n  file index from SALMON_INDEX.first()\n  set val(sample), file(reads) from SALMON_FQ\n\n  output:\n  set val(sample), file(\"$sample\") into SALMON_OUT\n\n\twhen:\n\taction.call(params, 'compute', 'run_salmon_boolean', 'boolean')\n\n  script:\n  def single = reads instanceof Path\n  threads = 1\n  if (single) {\n    \"\"\"\n\n\t    echo \"\\n===\\nProcessing salmonQuant\\n===\\nread: ${reads}\\n===\\n\"\n\n\t    salmon quant --quiet -i ${index} -l A -r ${reads} -o \"$salmon\" -p ${threads}\n    \"\"\"\n  } else {\n    \"\"\"\n\n\t    echo \"\\n===\\nProcessing salmonQuant\\n===\\nR1: ${reads[0]} and R2: ${reads[1]}\\n===\\n\"\n\n\t    salmon quant --quiet -i ${index} -l A -1 ${reads[0]} -2 ${reads[1]} -o \"$sample\" -p ${threads}\n    \"\"\"\n  }\n}",
        "nb_lignes_process": 38,
        "string_script": "  def single = reads instanceof Path\n  threads = 1\n  if (single) {\n    \"\"\"\n\n\t    echo \"\\n===\\nProcessing salmonQuant\\n===\\nread: ${reads}\\n===\\n\"\n\n\t    salmon quant --quiet -i ${index} -l A -r ${reads} -o \"$salmon\" -p ${threads}\n    \"\"\"\n  } else {\n    \"\"\"\n\n\t    echo \"\\n===\\nProcessing salmonQuant\\n===\\nR1: ${reads[0]} and R2: ${reads[1]}\\n===\\n\"\n\n\t    salmon quant --quiet -i ${index} -l A -1 ${reads[0]} -2 ${reads[1]} -o \"$sample\" -p ${threads}\n    \"\"\"\n  }",
        "nb_lignes_script": 16,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "SALMON_INDEX",
            "SALMON_FQ"
        ],
        "nb_inputs": 2,
        "outputs": [
            "SALMON_OUT"
        ],
        "nb_outputs": 1,
        "name_workflow": "ericaenjoy3__rna_nf",
        "directive": [
            "label 'multiCore'",
            "tag \"salmonQuant: $sample\"",
            "publishDir path: concatDir(getDir('output', 'base_dir', params, canonPath = true), getDir('output', 'salmon', params, canonPath = false)) , mode: \"copy\""
        ],
        "when": "action.call(params, 'compute', 'run_salmon_boolean', 'boolean')",
        "stub": ""
    }
}