{
    "filter_contigs": {
        "name_process": "filter_contigs",
        "string_process": "\nprocess filter_contigs{\n  tag {\"${sample_id}\"}\n\n  publishDir \"${params.publish_base_dir}/${sample_id}/selecting_files_with_seq\", mode:'link'\n\n  input:\n  set sample_id, contig from contig_files \n  \n  output:\n  set sample_id, stdout, \"${sample_id}_selected_seq_filt.fasta\" into filt_contigs\n  \n  script:\n\"\"\" \n seqtk seq -L ${params.seq_size} ${contig[0]} > \"${sample_id}_selected_seq_filt.fasta\"\n  nr_of_seq=\\$(cat \"${sample_id}_selected_seq_filt.fasta\" | grep \">\" | wc -l)\n if [ \\$nr_of_seq -eq 0 ]\n then\n    echo false\n else\n    echo true\n fi\n\"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "\"\"\" \n seqtk seq -L ${params.seq_size} ${contig[0]} > \"${sample_id}_selected_seq_filt.fasta\"\n  nr_of_seq=\\$(cat \"${sample_id}_selected_seq_filt.fasta\" | grep \">\" | wc -l)\n if [ \\$nr_of_seq -eq 0 ]\n then\n    echo false\n else\n    echo true\n fi\n\"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [
            "seqtk"
        ],
        "tools_url": [
            "https://bio.tools/seqtk"
        ],
        "tools_dico": [
            {
                "name": "seqtk",
                "uri": "https://bio.tools/seqtk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Data handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2121",
                                    "term": "Sequence file editing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Utility operation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File handling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "File processing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2409",
                                    "term": "Report handling"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A tool for processing sequences in the FASTA or FASTQ format. It parses both FASTA and FASTQ files which can also be optionally compressed by gzip.",
                "homepage": "https://github.com/lh3/seqtk"
            }
        ],
        "inputs": [
            "contig_files"
        ],
        "nb_inputs": 1,
        "outputs": [
            "filt_contigs"
        ],
        "nb_outputs": 1,
        "name_workflow": "Amanj1__PhyloProtTTV",
        "directive": [
            "tag {\"${sample_id}\"}",
            "publishDir \"${params.publish_base_dir}/${sample_id}/selecting_files_with_seq\", mode:'link'"
        ],
        "when": "",
        "stub": ""
    },
    "add_outgroup_to_seq": {
        "name_process": "add_outgroup_to_seq",
        "string_process": "\nprocess add_outgroup_to_seq{\n  tag {\"${sample_id}\"}\n\n  publishDir \"${params.publish_base_dir}/${sample_id}/outgroup_added\", mode:'link'\n\n  input:\n  set sample_id, bool, contig, outgrp_name, outgrp_seq from combine_filt_contigs_outgroup \n  \n  output:\n  set sample_id, \"${sample_id}_selected_seq_filt_with_outgrp.fasta\" into filt_contigs_and_outgrp\n  \n  script:\n\"\"\" \n#!/usr/bin/python \n\nf1 = open(\"${contig}\",\"r+\")\ncontigs = f1.readlines()\nf2 = open(\"${outgrp_seq[0]}\",\"r+\")\noutgrp = f2.readlines()\nf3 = open(\"${sample_id}_selected_seq_filt_with_outgrp.fasta\", \"a+\")\nval = 0\nif \"ORF1\" in \"${sample_id}\":\n    val = 1\nelif \"ORF2\" in \"${sample_id}\":\n    val = 2\nelif \"ORF3\" in \"${sample_id}\":\n    val = 3\nelif \"ORF4\" in \"${sample_id}\":\n    val = 4\n\nfor i in range(len(outgrp)):\n    if val == 1 and \"ORF1\" in outgrp[i]:\n        f3.write(outgrp[i])\n        f3.write(outgrp[i+1])\n    elif val == 2 and \"ORF2\" in outgrp[i]:\n        f3.write(outgrp[i])\n        f3.write(outgrp[i+1])\n    elif val == 3 and \"ORF3\" in outgrp[i]:\n        f3.write(outgrp[i])\n        f3.write(outgrp[i+1])\n    elif val == 4 and \"ORF4\" in outgrp[i]:\n        f3.write(outgrp[i])\n        f3.write(outgrp[i+1])\nfor x in contigs:\n    f3.write(x)\nf1.close()\nf2.close()\nf3.close()\n\"\"\"\n}",
        "nb_lignes_process": 49,
        "string_script": "\"\"\" \n#!/usr/bin/python \n\nf1 = open(\"${contig}\",\"r+\")\ncontigs = f1.readlines()\nf2 = open(\"${outgrp_seq[0]}\",\"r+\")\noutgrp = f2.readlines()\nf3 = open(\"${sample_id}_selected_seq_filt_with_outgrp.fasta\", \"a+\")\nval = 0\nif \"ORF1\" in \"${sample_id}\":\n    val = 1\nelif \"ORF2\" in \"${sample_id}\":\n    val = 2\nelif \"ORF3\" in \"${sample_id}\":\n    val = 3\nelif \"ORF4\" in \"${sample_id}\":\n    val = 4\n\nfor i in range(len(outgrp)):\n    if val == 1 and \"ORF1\" in outgrp[i]:\n        f3.write(outgrp[i])\n        f3.write(outgrp[i+1])\n    elif val == 2 and \"ORF2\" in outgrp[i]:\n        f3.write(outgrp[i])\n        f3.write(outgrp[i+1])\n    elif val == 3 and \"ORF3\" in outgrp[i]:\n        f3.write(outgrp[i])\n        f3.write(outgrp[i+1])\n    elif val == 4 and \"ORF4\" in outgrp[i]:\n        f3.write(outgrp[i])\n        f3.write(outgrp[i+1])\nfor x in contigs:\n    f3.write(x)\nf1.close()\nf2.close()\nf3.close()\n\"\"\"",
        "nb_lignes_script": 36,
        "language_script": "python",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "combine_filt_contigs_outgroup"
        ],
        "nb_inputs": 1,
        "outputs": [
            "filt_contigs_and_outgrp"
        ],
        "nb_outputs": 1,
        "name_workflow": "Amanj1__PhyloProtTTV",
        "directive": [
            "tag {\"${sample_id}\"}",
            "publishDir \"${params.publish_base_dir}/${sample_id}/outgroup_added\", mode:'link'"
        ],
        "when": "",
        "stub": ""
    },
    "mafft": {
        "name_process": "mafft",
        "string_process": "\nprocess mafft{\n  tag {\"${sample_id}\"}\n\n  publishDir \"${params.publish_base_dir}/${sample_id}/mafft\", mode:'link'\n\n  input:\n  set sample_id, seq from filt_contigs_and_outgrp \n  \n  output:\n  set sample_id,\"${sample_id}_mafft_alignment.fasta\" into mafft_out\n  \n  script:\n\"\"\" \n mafft --thread ${task.cpus} --threadtb 5 --threadit 0 --inputorder --anysymbol --auto ${seq} > \"${sample_id}_mafft_alignment.fasta\" \n\"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "\"\"\" \n mafft --thread ${task.cpus} --threadtb 5 --threadit 0 --inputorder --anysymbol --auto ${seq} > \"${sample_id}_mafft_alignment.fasta\" \n\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "MAFFT"
        ],
        "tools_url": [
            "https://bio.tools/MAFFT"
        ],
        "tools_dico": [
            {
                "name": "MAFFT",
                "uri": "https://bio.tools/MAFFT",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0492",
                                    "term": "Multiple sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0492",
                                    "term": "Multiple alignment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            }
                        ]
                    }
                ],
                "description": "MAFFT (Multiple Alignment using Fast Fourier Transform) is a high speed multiple sequence alignment program.",
                "homepage": "http://mafft.cbrc.jp/alignment/server/index.html"
            }
        ],
        "inputs": [
            "filt_contigs_and_outgrp"
        ],
        "nb_inputs": 1,
        "outputs": [
            "mafft_out"
        ],
        "nb_outputs": 1,
        "name_workflow": "Amanj1__PhyloProtTTV",
        "directive": [
            "tag {\"${sample_id}\"}",
            "publishDir \"${params.publish_base_dir}/${sample_id}/mafft\", mode:'link'"
        ],
        "when": "",
        "stub": ""
    },
    "trimAl": {
        "name_process": "trimAl",
        "string_process": "\nprocess trimAl{\n  tag {\"${sample_id}\"}\n\n  publishDir \"${params.publish_base_dir}/${sample_id}/trimAl\", mode:'link'\n\n  input:\n  set sample_id, mafft_aln from mafft_out \n  \n  output:\n  set sample_id, \"${sample_id}_trimAl_trimmed.fasta\" into trim_out\n  \n  script:\n\"\"\" \n trimal -in ${mafft_aln} -out \"${sample_id}_trimAl_trimmed.fasta\" -gt 0.9\n\"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "\"\"\" \n trimal -in ${mafft_aln} -out \"${sample_id}_trimAl_trimmed.fasta\" -gt 0.9\n\"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "trimAl"
        ],
        "tools_url": [
            "https://bio.tools/trimal"
        ],
        "tools_dico": [
            {
                "name": "trimAl",
                "uri": "https://bio.tools/trimal",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0160",
                            "term": "Sequence sites, features and motifs"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0492",
                                    "term": "Multiple sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0492",
                                    "term": "Multiple alignment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            }
                        ]
                    }
                ],
                "description": "Tool for the automated removal of spurious sequences or poorly aligned regions from a multiple sequence alignment.",
                "homepage": "http://trimal.cgenomics.org"
            }
        ],
        "inputs": [
            "mafft_out"
        ],
        "nb_inputs": 1,
        "outputs": [
            "trim_out"
        ],
        "nb_outputs": 1,
        "name_workflow": "Amanj1__PhyloProtTTV",
        "directive": [
            "tag {\"${sample_id}\"}",
            "publishDir \"${params.publish_base_dir}/${sample_id}/trimAl\", mode:'link'"
        ],
        "when": "",
        "stub": ""
    },
    "RAxML": {
        "name_process": "RAxML",
        "string_process": "\nprocess RAxML{\n  tag {\"${sample_id}\"}\n\n  publishDir \"${params.publish_base_dir}/${sample_id}/RAxML\", mode:'link'\n\n  input:\n  set sample_id, seq from trim_out \n  \n  output:\n  set sample_id, \"${sample_id}*\" into raxml_out\n  \n  script:\n\"\"\" \n  raxml-ng --msa ${seq} --model LG --opt-branches on --opt-model on --tree pars{10},rand{10} --all --bs-trees 100 --force --threads ${task.cpus} --prefix ${sample_id}\n\n\"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "\"\"\" \n  raxml-ng --msa ${seq} --model LG --opt-branches on --opt-model on --tree pars{10},rand{10} --all --bs-trees 100 --force --threads ${task.cpus} --prefix ${sample_id}\n\n\"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "RAxML-NG"
        ],
        "tools_url": [
            "https://bio.tools/RAxML-NG"
        ],
        "tools_dico": [
            {
                "name": "RAxML-NG",
                "uri": "https://bio.tools/RAxML-NG",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3810",
                            "term": "Agricultural science"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0194",
                            "term": "Phylogenomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3293",
                            "term": "Phylogenetics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0547",
                                    "term": "Phylogenetic inference (maximum likelihood and Bayesian methods)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0552",
                                    "term": "Phylogenetic tree bootstrapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0547",
                                    "term": "Phylogenetic tree construction (maximum likelihood and Bayesian methods)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0547",
                                    "term": "Phylogenetic tree generation (maximum likelihood and Bayesian methods)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Phylogenetic tree inference tool which uses maximum-likelihood (ML) optimality criterion.",
                "homepage": "https://raxml-ng.vital-it.ch/"
            }
        ],
        "inputs": [
            "trim_out"
        ],
        "nb_inputs": 1,
        "outputs": [
            "raxml_out"
        ],
        "nb_outputs": 1,
        "name_workflow": "Amanj1__PhyloProtTTV",
        "directive": [
            "tag {\"${sample_id}\"}",
            "publishDir \"${params.publish_base_dir}/${sample_id}/RAxML\", mode:'link'"
        ],
        "when": "",
        "stub": ""
    }
}