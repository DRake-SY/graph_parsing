{
    "OPERATION_1": {
        "string": "Channel.fromPath(\"${demuxDir}/*\", type: \"dir\", maxDepth: 1)\n.filter { dir ->\n                                                            \n    ! \"${dir.baseName}\".endsWith(\"_test\") && ! \"${dir.baseName}\".endsWith(\"_oldgood\")\n}\n.map { dir ->\n    def fullpath = new File(\"${dir}\").getCanonicalPath()\n    def basename = \"${dir.baseName}\"\n    def type = \"demux\"\n    return([ type, dir, basename, fullpath ])\n}\n.set { demux_ch }",
        "origin": [
            [
                "\"${demuxDir}/*\", type: \"dir\", maxDepth: 1",
                "A"
            ]
        ],
        "gives": [
            [
                "demux_ch",
                "P"
            ]
        ]
    },
    "OPERATION_2": {
        "string": "Channel.fromPath(\"${NGS580Dir}/*\", type: \"dir\", maxDepth: 1)\n.filter { dir ->\n                                                            \n    ! \"${dir.baseName}\".endsWith(\"_test\") && ! \"${dir.baseName}\".endsWith(\"_test2\")\n}\n.map { dir ->\n    def fullpath = new File(\"${dir}\").getCanonicalPath()\n    def basename = \"${dir.baseName}\"\n    def type = \"NGS580\"\n    return([ type, dir, basename, fullpath ])\n}\n.set { ngs580_ch }",
        "origin": [
            [
                "\"${NGS580Dir}/*\", type: \"dir\", maxDepth: 1",
                "A"
            ]
        ],
        "gives": [
            [
                "ngs580_ch",
                "P"
            ]
        ]
    },
    "OPERATION_3": {
        "string": "Channel.fromPath(\"${samplesheetDir}/*\", type: \"dir\", maxDepth: 1)\n.map { dir ->\n    def fullpath = new File(\"${dir}\").getCanonicalPath()\n    def basename = \"${dir.baseName}\"\n    def type = \"samplesheet\"\n    return([ type, dir, basename, fullpath ])\n}\n.set { samplesheet_ch }",
        "origin": [
            [
                "\"${samplesheetDir}/*\", type: \"dir\", maxDepth: 1",
                "A"
            ]
        ],
        "gives": [
            [
                "samplesheet_ch",
                "P"
            ]
        ]
    },
    "OPERATION_4": {
        "string": "Channel.from([\n    file(\"${pipelinesDir}/demux-nf\"),\n    file(\"${pipelinesDir}/NGS580-nf\"),\n    file(\"${pipelinesDir}/queue-stats\"),\n    ])\n.map { dir ->\n    def fullpath = new File(\"${dir}\").getCanonicalPath()\n    def basename = \"${dir.baseName}\"\n    def type = \"pipeline\"\n    return([ type, dir, basename, fullpath ])\n}\n.set { pipelines_dirs }",
        "origin": [],
        "gives": [
            [
                "pipelines_dirs",
                "P"
            ]
        ]
    }
}