{
    "OPERATION_1": {
        "string": "kraken2_output_ch = Channel\n  .fromPath(params.input_kraken2_dir + '/' + params.kraken2_output)\n  .ifEmpty { exit 1, \"Cannot find  kraken2 report matching: ${params.kraken2_output}\"}\n  .map { file -> tuple(file.simpleName, file) }",
        "origin": [
            [
                "params.input_kraken2_dir + '/' + params.kraken2_output",
                "A"
            ]
        ],
        "gives": [
            [
                "kraken2_output_ch",
                "P"
            ]
        ]
    },
    "OPERATION_2": {
        "string": "reads_ch = Channel\n                        .fromPath(params.input_seq_dir + '/' + params.single_end)\n                        .map { file -> tuple(file.simpleName, file) }",
        "origin": [
            [
                "params.input_seq_dir + '/' + params.single_end",
                "A"
            ]
        ],
        "gives": [
            [
                "reads_ch",
                "P"
            ]
        ]
    },
    "OPERATION_3": {
        "string": "Channel\n      .fromFilePairs(params.input_seq_dir + '/' + params.paired_end, size: 2 )\n      .ifEmpty { exit 1, \"Cannot find any reads matching: ${params.paired_end}\"}\n      .set {reads_ch}",
        "origin": [
            [
                "params.input_seq_dir + '/' + params.paired_end, size: 2",
                "A"
            ]
        ],
        "gives": [
            [
                "reads_ch",
                "P"
            ]
        ]
    },
    "OPERATION_4": {
        "string": "Channel.fromPath(\"${params.outdir}/tbprofiler/results\", type: 'dir')\n  .ifEmpty { exit 1, \"Cannot find  directory: ${params.outdir}tbprofiler/results\"}\n  .set{ results_dir_ch}",
        "origin": [
            [
                "\"${params.outdir}/tbprofiler/results\", type: 'dir'",
                "A"
            ]
        ],
        "gives": [
            [
                "results_dir_ch",
                "P"
            ]
        ]
    }
}