{
    "OPERATION_1": {
        "string": "read_pairs = Channel.fromFilePairs(\"$PWD/fq_${params.marker}/*_L001_R{1,2}_001.fastq\", flat: true).ifEmpty(\"No fastq files are found\")",
        "origin": [
            [
                "\"$PWD/fq_${params.marker}/*_L001_R{1,2}_001.fastq\", flat: true",
                "A"
            ]
        ],
        "gives": [
            [
                "read_pairs",
                "P"
            ]
        ]
    },
    "OPERATION_2": {
        "string": "read_pairs = Channel.fromFilePairs(\"$PWD/fq_${params.marker}/*_L001_R{1,2}_001.fastq\", flat: true).ifEmpty(\"No fastq files are found\")",
        "origin": [
            [
                "\"$PWD/fq_${params.marker}/*_L001_R{1,2}_001.fastq\", flat: true",
                "A"
            ]
        ],
        "gives": [
            [
                "read_pairs",
                "P"
            ]
        ]
    },
    "OPERATION_3": {
        "string": "Channel.empty().ifEmpty(\"No fastq files are provided\")",
        "origin": [],
        "gives": []
    },
    "OPERATION_4": {
        "string": "out.println(\"\")",
        "origin": [
            [
                "out",
                "P"
            ]
        ],
        "gives": []
    },
    "OPERATION_5": {
        "string": "out.println(\"nfp4MBC - A nextflow pipeline for metabarcoding amplicon sequences - Version: 1.20.03.2020 (20.03.2020)\")",
        "origin": [
            [
                "out",
                "P"
            ]
        ],
        "gives": []
    },
    "OPERATION_6": {
        "string": "out.println(\"\")",
        "origin": [
            [
                "out",
                "P"
            ]
        ],
        "gives": []
    },
    "OPERATION_7": {
        "string": "out.println(\"Usage: \")",
        "origin": [
            [
                "out",
                "P"
            ]
        ],
        "gives": []
    },
    "OPERATION_8": {
        "string": "out.println(\"\tnextflow run nfp4MBC.nf \")",
        "origin": [
            [
                "out",
                "P"
            ]
        ],
        "gives": []
    }
}