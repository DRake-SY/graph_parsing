{
    "OPERATION_1": {
        "string": "Channel\n  .fromPath(sheet_nf)\n  .splitCsv(header:true)\n  .map { row -> tuple( row.Sample_ID, row.fastq_1, row.fastq_2, row.Sample_Species ) }\n  .tap{ infoall }\n  .set { fastq_ch }",
        "origin": [
            [
                "sheet_nf",
                "A"
            ]
        ],
        "gives": [
            [
                "fastq_ch",
                "P"
            ],
            [
                "infoall",
                "P"
            ]
        ]
    },
    "OPERATION_2": {
        "string": "Channel\n  .fromPath(sheet_nf)\n  .splitCsv(header:true)\n  .map { row -> tuple( row.Sample_ID, row.bam, row.Sample_Strandness, row.Sample_Species, row.Sample_RIN, row.Sample_Concentration ) }\n  .tap { infobam }\n  .into { bam_checkbam_ch; bam_qualimap_ch; bam_rseqc_ch; bam_bladderreport_ch; bam_rnaseqmetrics_ch }",
        "origin": [
            [
                "sheet_nf",
                "A"
            ]
        ],
        "gives": [
            [
                "bam_checkbam_ch",
                "P"
            ],
            [
                "bam_qualimap_ch",
                "P"
            ],
            [
                "bam_rseqc_ch",
                "P"
            ],
            [
                "bam_bladderreport_ch",
                "P"
            ],
            [
                "bam_rnaseqmetrics_ch",
                "P"
            ],
            [
                "infobam",
                "P"
            ]
        ]
    },
    "OPERATION_3": {
        "string": "Channel\n    .fromPath(sheet_nf)\n    .splitCsv(header:true)\n    .map { row -> tuple( row.bam ) }\n    .tap{ infoallfcounts }\n    .set { bam_featurecounts_ch }",
        "origin": [
            [
                "sheet_nf",
                "A"
            ]
        ],
        "gives": [
            [
                "bam_featurecounts_ch",
                "P"
            ],
            [
                "infoallfcounts",
                "P"
            ]
        ]
    },
    "OPERATION_4": {
        "string": "infoall.subscribe { println \"Info: $it\" }",
        "origin": [
            [
                "infoall",
                "P"
            ]
        ],
        "gives": []
    }
}