{
    "OPERATION_1": {
        "string": "Channel\n\t.fromFilePairs( params.reads, size: params.se ? 1 : 2 )\n\t.ifEmpty { exit 1, \"Cannot find any reads matching: ${params.reads}\" }\n\t.into { read_files_fastqc ; read_files_trimming ; reads_mapping }",
        "origin": [
            [
                "params.reads, size: params.se ? 1 : 2",
                "A"
            ]
        ],
        "gives": [
            [
                "read_files_fastqc",
                "P"
            ],
            [
                "read_files_trimming",
                "P"
            ],
            [
                "reads_mapping",
                "P"
            ]
        ]
    },
    "OPERATION_2": {
        "string": "bismark_index = Channel\n\t\t.fromPath(params.index)\n\t\t.ifEmpty { exit 1, \"Bismark index not found : ${params.index}\" }",
        "origin": [
            [
                "params.index",
                "A"
            ]
        ],
        "gives": [
            [
                "bismark_index",
                "P"
            ]
        ]
    },
    "OPERATION_3": {
        "string": "fastqc_results = Channel.from(false)",
        "origin": [
            [
                "false",
                "V"
            ]
        ],
        "gives": [
            [
                "fastqc_results",
                "P"
            ]
        ]
    },
    "OPERATION_4": {
        "string": "trimgalore_results = Channel.from(false)",
        "origin": [
            [
                "false",
                "V"
            ]
        ],
        "gives": [
            [
                "trimgalore_results",
                "P"
            ]
        ]
    },
    "OPERATION_5": {
        "string": "trimmed_reads = read_files_trimming",
        "origin": [
            [
                "read_files_trimming",
                "P"
            ]
        ],
        "gives": [
            [
                "trimmed_reads",
                "P"
            ]
        ]
    }
}