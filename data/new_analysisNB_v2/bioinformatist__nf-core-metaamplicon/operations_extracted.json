{
    "OPERATION_1": {
        "string": "Channel\n        .fromPath(params.reads)\n        .ifEmpty { exit 1, \"params.readPaths was empty - no input files supplied\" }\n        .set { read_files }",
        "origin": [
            [
                "params.reads",
                "A"
            ]
        ],
        "gives": [
            [
                "read_files",
                "P"
            ]
        ]
    },
    "OPERATION_2": {
        "string": "Channel\n        .fromFilePairs(params.reads, size: -1)\n        .ifEmpty { exit 1, \"Cannot find any reads in directory: ${params.reads}\\nNB: Path needs to be enclosed in quotes!\" }\n        .set { read_files }",
        "origin": [
            [
                "params.reads, size: -1",
                "A"
            ]
        ],
        "gives": [
            [
                "read_files",
                "P"
            ]
        ]
    },
    "OPERATION_3": {
        "string": "Channel\n\t.fromPath(params.reference)\n\t.ifEmpty { exit 1, \"No reference alignments file found!\" }\n\t.set{ reference }",
        "origin": [
            [
                "params.reference",
                "A"
            ]
        ],
        "gives": [
            [
                "reference",
                "P"
            ]
        ]
    },
    "OPERATION_4": {
        "string": "Channel\n\t.fromPath(params.taxonomy)\n\t.ifEmpty { exit 1, \"No taxonomy alignments file found!\" }\n\t.set{ taxonomy }",
        "origin": [
            [
                "params.taxonomy",
                "A"
            ]
        ],
        "gives": [
            [
                "taxonomy",
                "P"
            ]
        ]
    },
    "OPERATION_5": {
        "string": "summary.collect { k,v -> \"${k.padRight(15)}: $v\" }.join(\"\\n\")",
        "origin": [
            [
                "summary",
                "P"
            ]
        ],
        "gives": []
    },
    "OPERATION_6": {
        "string": "for_mothur0.subscribe { it.copyTo(mothur_temp) }",
        "origin": [
            [
                "for_mothur0",
                "P"
            ]
        ],
        "gives": []
    },
    "OPERATION_7": {
        "string": "for_mothur1.subscribe { it.copyTo(mothur_temp) }",
        "origin": [
            [
                "for_mothur1",
                "P"
            ]
        ],
        "gives": []
    },
    "OPERATION_8": {
        "string": "for_mothur0.subscribe { it.each { it.copyTo(mothur_temp) } }",
        "origin": [
            [
                "for_mothur0",
                "P"
            ]
        ],
        "gives": []
    }
}