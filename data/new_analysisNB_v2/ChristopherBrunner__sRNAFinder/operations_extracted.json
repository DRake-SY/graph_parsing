{
    "OPERATION_1": {
        "string": "Channel\n    .from(fastaFile)\n    .splitFasta( record: [id: true, seqString: true ])\n    .collectFile(name: chromLen) { record -> record.id + \"\\t\" + \"0\" + \"\\t\" + record.seqString.length() + \"\\n\"}\n    .set{lengthGenome}",
        "origin": [
            [
                "fastaFile",
                "V"
            ]
        ],
        "gives": [
            [
                "lengthGenome",
                "P"
            ]
        ]
    },
    "OPERATION_2": {
        "string": "Channel\n    .from(genLen)\n    .set{lengthGenome_sRNAbed}",
        "origin": [
            [
                "genLen",
                "V"
            ]
        ],
        "gives": [
            [
                "lengthGenome_sRNAbed",
                "P"
            ]
        ]
    },
    "OPERATION_3": {
        "string": "lengthGenome.into {\n    lengthGenome_sRNAbed\n    lengthGenomePlot\n    lengthGenomeFilter\n}",
        "origin": [
            [
                "lengthGenome",
                "P"
            ]
        ],
        "gives": []
    },
    "OPERATION_4": {
        "string": "sRNAWindowsBED.into {\n    sRNAWindowsBEDsRNACharP\n    sRNAWindowsBEDJoin\n}",
        "origin": [
            [
                "sRNAWindowsBED",
                "P"
            ]
        ],
        "gives": []
    },
    "OPERATION_5": {
        "string": "sRNAWindowsBEDsRNACharP\n.collectFile(name: file(\"${params.org}_genomesRNAWindows.bed\"))",
        "origin": [
            [
                "sRNAWindowsBEDsRNACharP",
                "P"
            ]
        ],
        "gives": []
    },
    "OPERATION_6": {
        "string": "proteinCodingBED\n .collectFile(name: file(\"${params.org}_genomeAnnotation_proteincoding.bed\"))",
        "origin": [
            [
                "proteinCodingBED",
                "P"
            ]
        ],
        "gives": []
    },
    "OPERATION_7": {
        "string": "sRNACharPresult\n.collectFile(name: file(\"${params.org}_FeatureTable.tsv\"))",
        "origin": [
            [
                "sRNACharPresult",
                "P"
            ]
        ],
        "gives": []
    },
    "OPERATION_8": {
        "string": "sRNARankingJoined.into {\n    sRNARankingJoinedFilter\n    sRNARankingJoinedPlot\n    sRNARankingJoinedOutput\n}",
        "origin": [
            [
                "sRNARankingJoined",
                "P"
            ]
        ],
        "gives": []
    },
    "OPERATION_9": {
        "string": "sRNARankingJoinedOutput\n.collectFile(name: file(\"${params.org}_Genome_sRNAScores.txt\"))",
        "origin": [
            [
                "sRNARankingJoinedOutput",
                "P"
            ]
        ],
        "gives": []
    },
    "OPERATION_10": {
        "string": "GenomePlotsRNA\n.collectFile(name: file(\"${params.org}_GenomePlotsRNA.html\"))",
        "origin": [
            [
                "GenomePlotsRNA",
                "P"
            ]
        ],
        "gives": []
    },
    "OPERATION_11": {
        "string": "GenomePlotNosRNA\n.collectFile(name: file(\"${params.org}_GenomePlotNosRNA.html\"))",
        "origin": [
            [
                "GenomePlotNosRNA",
                "P"
            ]
        ],
        "gives": []
    },
    "OPERATION_12": {
        "string": "pipelineRerun\n.collectFile(name: file(\"${params.org}_GenomeWindows.bed\"))",
        "origin": [
            [
                "pipelineRerun",
                "P"
            ]
        ],
        "gives": []
    }
}