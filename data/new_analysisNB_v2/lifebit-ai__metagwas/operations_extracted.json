{
    "OPERATION_1": {
        "string": "Channel\n    .fromPath(params.studies, checkIfExists: true)\n    .ifEmpty { exit 1, \"List of studies to analyze not found: ${params.studies}\" }\n    .splitCsv(header:true)\n    .map{ row -> file(row.study) }\n    .flatten()\n    .set { all_input_studies_ch }",
        "origin": [
            [
                "params.studies, checkIfExists: true",
                "A"
            ]
        ],
        "gives": [
            [
                "all_input_studies_ch",
                "P"
            ]
        ]
    },
    "OPERATION_2": {
        "string": "Channel\n    .fromPath(params.ancestry_sample_file, checkIfExists: true)\n    .ifEmpty { exit 1, \"Sample file with ancestries not found: ${params.ancestry_sample_file}\" }\n    .set { ch_ancestry_sample_file }",
        "origin": [
            [
                "params.ancestry_sample_file, checkIfExists: true",
                "A"
            ]
        ],
        "gives": [
            [
                "ch_ancestry_sample_file",
                "P"
            ]
        ]
    },
    "OPERATION_3": {
        "string": "Channel\n    .fromPath(params.snp_ancestry_file, checkIfExists: true)\n    .ifEmpty { exit 1, \"SNP file with ancestries not found: ${params.snp_ancestry_file}\" }\n    .set { ch_snp_ancestry_file }",
        "origin": [
            [
                "params.snp_ancestry_file, checkIfExists: true",
                "A"
            ]
        ],
        "gives": [
            [
                "ch_snp_ancestry_file",
                "P"
            ]
        ]
    },
    "OPERATION_4": {
        "string": "Channel\n    .fromFilePairs(params.merged_ref_panel, size:3, flat : true)\n    .ifEmpty { exit 1, \"Ref panel plink files not found: ${params.merged_ref_panel}\" }\n    .set { ch_merged_ref_panel }",
        "origin": [
            [
                "params.merged_ref_panel, size:3, flat : true",
                "A"
            ]
        ],
        "gives": [
            [
                "ch_merged_ref_panel",
                "P"
            ]
        ]
    },
    "OPERATION_5": {
        "string": "Channel\n    .fromPath(params.ss_1)\n    .ifEmpty { exit 1, \"Ref panel plink files not found: ${params.merged_ref_panel}\" }\n    .set { ch_ss_1 }",
        "origin": [
            [
                "params.ss_1",
                "A"
            ]
        ],
        "gives": [
            [
                "ch_ss_1",
                "P"
            ]
        ]
    },
    "OPERATION_6": {
        "string": "Channel\n    .fromPath(params.ss_2)\n    .ifEmpty { exit 1, \"Ref panel plink files not found: ${params.merged_ref_panel}\" }\n    .set { ch_ss_2 }",
        "origin": [
            [
                "params.ss_2",
                "A"
            ]
        ],
        "gives": [
            [
                "ch_ss_2",
                "P"
            ]
        ]
    },
    "OPERATION_7": {
        "string": "summary.collect { k,v -> \"${k.padRight(18)}: $v\" }.join(\"\\n\")",
        "origin": [
            [
                "summary",
                "P"
            ]
        ],
        "gives": []
    }
}