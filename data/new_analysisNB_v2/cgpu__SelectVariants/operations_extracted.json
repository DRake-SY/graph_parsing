{
    "OPERATION_1": {
        "string": "Channel.fromPath(params.fasta)\n           .ifEmpty { exit 1, \"fasta annotation file not found: ${params.fasta}\" }\n           .into { fasta_select_variants_PASS; fasta_vcf2maf }",
        "origin": [
            [
                "params.fasta",
                "A"
            ]
        ],
        "gives": [
            [
                "fasta_select_variants_PASS",
                "P"
            ],
            [
                "fasta_vcf2maf",
                "P"
            ]
        ]
    },
    "OPERATION_2": {
        "string": "Channel.fromPath(params.fai)\n           .ifEmpty { exit 1, \"fasta index file not found: ${params.fai}\" }\n           .into { fai_select_variants_PASS ; fai_vcf2maf  }",
        "origin": [
            [
                "params.fai",
                "A"
            ]
        ],
        "gives": [
            [
                "fai_select_variants_PASS",
                "P"
            ],
            [
                "fai_vcf2maf",
                "P"
            ]
        ]
    },
    "OPERATION_3": {
        "string": "Channel.fromPath(params.dict)\n           .ifEmpty { exit 1, \"dict annotation file not found: ${params.dict}\" }\n           .into { dict_select_variants_PASS ; dict_vcf2maf }",
        "origin": [
            [
                "params.dict",
                "A"
            ]
        ],
        "gives": [
            [
                "dict_select_variants_PASS",
                "P"
            ],
            [
                "dict_vcf2maf",
                "P"
            ]
        ]
    },
    "OPERATION_4": {
        "string": "Channel\n    .fromPath(\"${params.inputdir}/*.vcf\")\n    .set {  vcf_filtered_for_select_variants}",
        "origin": [
            [
                "\"${params.inputdir}/*.vcf\"",
                "A"
            ]
        ],
        "gives": [
            [
                "vcf_filtered_for_select_variants",
                "P"
            ]
        ]
    },
    "OPERATION_5": {
        "string": "Channel\n    .fromPath(\"${params.inputdir}/*.idx\")\n    .set {  idx_vcf_filtered_for_select_variants}",
        "origin": [
            [
                "\"${params.inputdir}/*.idx\"",
                "A"
            ]
        ],
        "gives": [
            [
                "idx_vcf_filtered_for_select_variants",
                "P"
            ]
        ]
    }
}