{
    "get_software_versions": {
        "name_process": "get_software_versions",
        "string_process": "\nprocess get_software_versions {\n    publishDir \"${params.outdir}/pipeline_info\", mode: 'copy',\n    saveAs: {filename ->\n        if (filename.indexOf(\".csv\") > 0) filename\n        else null\n    }\n\n    output:\n    file 'software_versions_mqc.yaml' into software_versions_yaml\n    file \"software_versions.csv\"\n\n    script:\n    \"\"\"\n    echo $workflow.manifest.version &> v_pipeline.txt\n    echo $workflow.nextflow.version &> v_nextflow.txt\n    fastqc --version &> v_fastqc.txt  || true\n    STAR --version &> v_star.txt  || true\n    samtools --version &> v_samtools.txt  || true\n    multiqc --version &> v_multiqc.txt  || true\n    scrape_software_versions.py &> software_versions_mqc.yaml\n    \"\"\"\n}",
        "nb_lignes_process": 21,
        "string_script": "    \"\"\"\n    echo $workflow.manifest.version &> v_pipeline.txt\n    echo $workflow.nextflow.version &> v_nextflow.txt\n    fastqc --version &> v_fastqc.txt  || true\n    STAR --version &> v_star.txt  || true\n    samtools --version &> v_samtools.txt  || true\n    multiqc --version &> v_multiqc.txt  || true\n    scrape_software_versions.py &> software_versions_mqc.yaml\n    \"\"\"",
        "nb_lignes_script": 8,
        "language_script": "bash",
        "tools": [
            "FastQC",
            "STAR",
            "SAMtools",
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc",
            "https://bio.tools/star",
            "https://bio.tools/samtools",
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            },
            {
                "name": "STAR",
                "uri": "https://bio.tools/star",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Ultrafast universal RNA-seq aligner",
                "homepage": "http://code.google.com/p/rna-star/"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [
            "software_versions_yaml"
        ],
        "nb_outputs": 1,
        "name_workflow": "pilm-bioinformatics__pipelines-nf-circtools",
        "directive": [
            "publishDir \"${params.outdir}/pipeline_info\", mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\".csv\") > 0) filename else null }"
        ],
        "when": "",
        "stub": ""
    },
    "makeSTARindex": {
        "name_process": "makeSTARindex",
        "string_process": " process makeSTARindex {\n        label 'high_memory'\n        tag \"$fasta\"\n        publishDir path: { params.saveReference ? \"${params.outdir}/reference_genome\" : params.outdir },\n                   saveAs: { params.saveReference ? it : null }, mode: 'copy'\n\n        input:\n        file fasta from ch_fasta_for_star_index\n        file gtf from gtf_makeSTARindex\n\n        output:\n        file \"star\" into star_index\n\n        script:\n        def avail_mem = task.memory ? \"--limitGenomeGenerateRAM ${task.memory.toBytes() - 100000000}\" : ''\n        \"\"\"\n        mkdir star\n        STAR \\\\\n            --runMode genomeGenerate \\\\\n            --runThreadN ${task.cpus} \\\\\n            --sjdbGTFfile $gtf \\\\\n            --genomeDir star/ \\\\\n            --genomeFastaFiles $fasta \\\\\n            $avail_mem\n        \"\"\"\n    }",
        "nb_lignes_process": 24,
        "string_script": "        def avail_mem = task.memory ? \"--limitGenomeGenerateRAM ${task.memory.toBytes() - 100000000}\" : ''\n        \"\"\"\n        mkdir star\n        STAR \\\\\n            --runMode genomeGenerate \\\\\n            --runThreadN ${task.cpus} \\\\\n            --sjdbGTFfile $gtf \\\\\n            --genomeDir star/ \\\\\n            --genomeFastaFiles $fasta \\\\\n            $avail_mem\n        \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "STAR"
        ],
        "tools_url": [
            "https://bio.tools/star"
        ],
        "tools_dico": [
            {
                "name": "STAR",
                "uri": "https://bio.tools/star",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3308",
                            "term": "Transcriptomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Ultrafast universal RNA-seq aligner",
                "homepage": "http://code.google.com/p/rna-star/"
            }
        ],
        "inputs": [
            "ch_fasta_for_star_index",
            "gtf_makeSTARindex"
        ],
        "nb_inputs": 2,
        "outputs": [
            "star_index"
        ],
        "nb_outputs": 1,
        "name_workflow": "pilm-bioinformatics__pipelines-nf-circtools",
        "directive": [
            "label 'high_memory'",
            "tag \"$fasta\"",
            "publishDir path: { params.saveReference ? \"${params.outdir}/reference_genome\" : params.outdir } , saveAs: { params.saveReference ? it : null }, mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "makeRRNAindex": {
        "name_process": "makeRRNAindex",
        "string_process": "\nprocess makeRRNAindex {\n    tag \"$rrna.simpleName\"\n    publishDir path: { \"${params.outdir}\" },\n               mode: 'copy'\n\n    input:\n    file rrna from tx_rrna_ch\n\n    output:\n    file 'rrna_index' into rrna_index_ch\n\n    script:\n    \"\"\"\n    mkdir rrna_index\n    bowtie2-build --threads $task.cpus $rrna rrna_index/rrna\n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "    \"\"\"\n    mkdir rrna_index\n    bowtie2-build --threads $task.cpus $rrna rrna_index/rrna\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "tx_rrna_ch"
        ],
        "nb_inputs": 1,
        "outputs": [
            "rrna_index_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "pilm-bioinformatics__pipelines-nf-circtools",
        "directive": [
            "tag \"$rrna.simpleName\"",
            "publishDir path: { \"${params.outdir}\" } , mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "fastqc": {
        "name_process": "fastqc",
        "string_process": "\nprocess fastqc {\n    tag \"$name\"\n    publishDir \"${params.outdir}/fastqc\", mode: 'copy',\n        saveAs: {filename -> filename.indexOf(\".zip\") > 0 ? \"zips/$filename\" : \"$filename\"}\n\n    input:\n    set val(name), file(reads) from raw_reads_fastqc\n\n    output:\n    file \"*_fastqc.{zip,html}\" into fastqc_results\n\n    script:\n    \"\"\"\n    fastqc -q $reads\n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "    \"\"\"\n    fastqc -q $reads\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "raw_reads_fastqc"
        ],
        "nb_inputs": 1,
        "outputs": [
            "fastqc_results"
        ],
        "nb_outputs": 1,
        "name_workflow": "pilm-bioinformatics__pipelines-nf-circtools",
        "directive": [
            "tag \"$name\"",
            "publishDir \"${params.outdir}/fastqc\", mode: 'copy' , saveAs: {filename -> filename.indexOf(\".zip\") > 0 ? \"zips/$filename\" : \"$filename\"}"
        ],
        "when": "",
        "stub": ""
    },
    "trim": {
        "name_process": "trim",
        "string_process": "\nprocess trim {\n    label 'low_memory'\n    tag \"$name\"\n    publishDir \"${params.outdir}/trimmed\", mode: 'copy'\n\n    input:\n    set val(name), file(reads) from raw_reads_trim\n\n    output:\n    file \"*_trimmed.fq.gz\" into trimmed_reads\n    file \"*.txt\" into trimmed_logs\n\n    script:\n    \"\"\"\n    # flexbar -r $reads -t $name -n 1 -z GZ -m 30 -u 0 -q TAIL -qt 28 -as AGATCGGAAGAG -qf sanger -j\n    trim_galore --gzip $reads --trim-n -a AGATCGGAAGAG -q 28 --polyA\n    \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "    \"\"\"\n    # flexbar -r $reads -t $name -n 1 -z GZ -m 30 -u 0 -q TAIL -qt 28 -as AGATCGGAAGAG -qf sanger -j\n    trim_galore --gzip $reads --trim-n -a AGATCGGAAGAG -q 28 --polyA\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "raw_reads_trim"
        ],
        "nb_inputs": 1,
        "outputs": [
            "trimmed_reads",
            "trimmed_logs"
        ],
        "nb_outputs": 2,
        "name_workflow": "pilm-bioinformatics__pipelines-nf-circtools",
        "directive": [
            "label 'low_memory'",
            "tag \"$name\"",
            "publishDir \"${params.outdir}/trimmed\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "rrna": {
        "name_process": "rrna",
        "string_process": "\nprocess rrna {\n    tag \"$sample\"\n    label 'low_memory'\n    publishDir \"${params.outdir}/rrna\", mode: 'copy'\n\n    input:\n    file rrna_index from rrna_index_ch.collect()\n    file reads from trimmed_reads\n\n    output:\n    file \"*_clean.fastq.gz\" into clean_ch\n    \n    script:\n    prefix = reads[0].toString() - ~/(_trimmed)?(\\.fq)?(\\.gz)?$/\n    if (params.singleEnd){\n        \"\"\"\n        bowtie2 -x $rrna_index/rrna -U $reads  --no-unal --omit-sec-seq --threads ${task.cpus} --mm --seed 1337 --un-gz ${prefix}_clean.fastq.gz --time -S ${prefix}.sam 2> ${prefix}.log\n        \"\"\"\n    }else{\n        \"\"\"\n        bowtie2 -x $rrna_index -1 $reads[0] -2 $reads[1] -S ${reads.baseName}.sam --no-unal --omit-sec-seq --threads ${task.cpus} --mm --seed 1337 --time --un-conc-gz ${reads.baseName}.fastq.gz 2> ${reads.baseName}.log\n\n        \"\"\"\n    }\n}",
        "nb_lignes_process": 24,
        "string_script": "    prefix = reads[0].toString() - ~/(_trimmed)?(\\.fq)?(\\.gz)?$/\n    if (params.singleEnd){\n        \"\"\"\n        bowtie2 -x $rrna_index/rrna -U $reads  --no-unal --omit-sec-seq --threads ${task.cpus} --mm --seed 1337 --un-gz ${prefix}_clean.fastq.gz --time -S ${prefix}.sam 2> ${prefix}.log\n        \"\"\"\n    }else{\n        \"\"\"\n        bowtie2 -x $rrna_index -1 $reads[0] -2 $reads[1] -S ${reads.baseName}.sam --no-unal --omit-sec-seq --threads ${task.cpus} --mm --seed 1337 --time --un-conc-gz ${reads.baseName}.fastq.gz 2> ${reads.baseName}.log\n\n        \"\"\"\n    }",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "Rbowtie2"
        ],
        "tools_url": [
            "https://bio.tools/rbowtie2"
        ],
        "tools_dico": [
            {
                "name": "Rbowtie2",
                "uri": "https://bio.tools/rbowtie2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence merging"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence splicing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This package provides an R wrapper of the popular bowtie2 sequencing reads aligner and AdapterRemoval, a convenient tool for rapid adapter trimming, identification, and read merging.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/Rbowtie2.html"
            }
        ],
        "inputs": [
            "rrna_index_ch",
            "trimmed_reads"
        ],
        "nb_inputs": 2,
        "outputs": [
            "clean_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "pilm-bioinformatics__pipelines-nf-circtools",
        "directive": [
            "tag \"$sample\"",
            "label 'low_memory'",
            "publishDir \"${params.outdir}/rrna\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "star": {
        "name_process": "star",
        "string_process": " process star {\n      label 'high_memory'\n      tag \"${reads.baseName}\"\n      publishDir \"${params.outdir}/STAR\", mode: 'copy',\n          saveAs: {filename ->\n              if (filename.indexOf(\".bam\") == -1) \"logs/$filename\"\n              else \"$filename\"\n          }\n\n      input:\n      file reads from clean_ch\n      file index from star_index.collect()\n      file gtf from gtf_star.collect()\n\n      output:\n      file(\"*Log.final.out\") into bam_log\n      file ('*.bam') into bam_ch\n      file \"*.out\" into alignment_logs\n      file \"*SJ.out.tab\"\n      file \"*Log.out\" into star_log\n      file  \"*Chimeric.out.junction\" into circtools_ch\n\n      script:\n      prefix = reads[0].toString() - ~/(_clean)?(\\.fastq)?(\\.gz)?$/\n      def avail_mem = task.memory ? \"--limitGenomeGenerateRAM ${task.memory.toBytes() - 100000000}\" : ''\n      \"\"\"\n      mkdir -p $prefix\n      STAR\t--runThreadN ${task.cpus}\\\\\n      \t--genomeDir $index \\\\\n      \t--genomeLoad NoSharedMemory\\\\\n      \t--readFilesIn $reads\\\\\n      \t--readFilesCommand zcat\\\\\n      \t--outFileNamePrefix $prefix\\\\\n      \t--outReadsUnmapped Fastx\\\\\n      \t--outSAMattributes NH   HI   AS   nM   NM   MD   jM   jI   XS\\\\\n      \t--outSJfilterOverhangMin 15   15   15   15\\\\\n      \t--outFilterMultimapNmax 20\\\\\n      \t--outFilterScoreMin 1\\\\\n      \t--outFilterMatchNminOverLread 0.7\\\\\n      \t--outFilterMismatchNmax 999\\\\\n      \t--outFilterMismatchNoverLmax 0.05\\\\\n      \t--alignIntronMin 20\\\\\n      \t--alignIntronMax 1000000\\\\\n      \t--alignMatesGapMax 1000000\\\\\n      \t--alignSJoverhangMin 15\\\\\n      \t--alignSJDBoverhangMin 10\\\\\n      \t--alignSoftClipAtReferenceEnds No\\\\\n      \t--chimSegmentMin 15\\\\\n      \t--chimScoreMin 15\\\\\n      \t--chimScoreSeparation 10\\\\\n      \t--chimJunctionOverhangMin 15\\\\\n      \t--sjdbGTFfile $gtf \\\\\n      \t--quantMode GeneCounts\\\\\n      \t--twopassMode Basic\\\\\n      \t--chimOutType Junctions SeparateSAMold \\\\\n        --outSAMtype BAM SortedByCoordinate $avail_mem\n      \"\"\"\n  }",
        "nb_lignes_process": 56,
        "string_script": "      prefix = reads[0].toString() - ~/(_clean)?(\\.fastq)?(\\.gz)?$/\n      def avail_mem = task.memory ? \"--limitGenomeGenerateRAM ${task.memory.toBytes() - 100000000}\" : ''\n      \"\"\"\n      mkdir -p $prefix\n      STAR\t--runThreadN ${task.cpus}\\\\\n      \t--genomeDir $index \\\\\n      \t--genomeLoad NoSharedMemory\\\\\n      \t--readFilesIn $reads\\\\\n      \t--readFilesCommand zcat\\\\\n      \t--outFileNamePrefix $prefix\\\\\n      \t--outReadsUnmapped Fastx\\\\\n      \t--outSAMattributes NH   HI   AS   nM   NM   MD   jM   jI   XS\\\\\n      \t--outSJfilterOverhangMin 15   15   15   15\\\\\n      \t--outFilterMultimapNmax 20\\\\\n      \t--outFilterScoreMin 1\\\\\n      \t--outFilterMatchNminOverLread 0.7\\\\\n      \t--outFilterMismatchNmax 999\\\\\n      \t--outFilterMismatchNoverLmax 0.05\\\\\n      \t--alignIntronMin 20\\\\\n      \t--alignIntronMax 1000000\\\\\n      \t--alignMatesGapMax 1000000\\\\\n      \t--alignSJoverhangMin 15\\\\\n      \t--alignSJDBoverhangMin 10\\\\\n      \t--alignSoftClipAtReferenceEnds No\\\\\n      \t--chimSegmentMin 15\\\\\n      \t--chimScoreMin 15\\\\\n      \t--chimScoreSeparation 10\\\\\n      \t--chimJunctionOverhangMin 15\\\\\n      \t--sjdbGTFfile $gtf \\\\\n      \t--quantMode GeneCounts\\\\\n      \t--twopassMode Basic\\\\\n      \t--chimOutType Junctions SeparateSAMold \\\\\n        --outSAMtype BAM SortedByCoordinate $avail_mem\n      \"\"\"",
        "nb_lignes_script": 33,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "clean_ch",
            "star_index",
            "gtf_star"
        ],
        "nb_inputs": 3,
        "outputs": [
            "bam_log",
            "bam_ch",
            "alignment_logs",
            "star_log",
            "circtools_ch"
        ],
        "nb_outputs": 5,
        "name_workflow": "pilm-bioinformatics__pipelines-nf-circtools",
        "directive": [
            "label 'high_memory'",
            "tag \"${reads.baseName}\"",
            "publishDir \"${params.outdir}/STAR\", mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\".bam\") == -1) \"logs/$filename\" else \"$filename\" }"
        ],
        "when": "",
        "stub": ""
    },
    "circtools": {
        "name_process": "circtools",
        "string_process": "\nprocess circtools {\n    tag \"$sample\"\n    label 'low_memory'\n    publishDir \"${params.outdir}/circtools\", mode: 'copy'\n\n    input:\n    file samples from circtools_ch.collect()\n    file bams from bam_ch.collect()\n    file gtf from gtf_circtools.collect()\n    file repeat from repeat_ch.collect()\n    file genome from ch_fasta_for_circtools.collect()\n\n    output:\n    file \"*.circRNA\" into circtools_out\n    file \"*.circRNAmapped\" into circtools_mapped_out\n    file \"CircRNACount\" into rnacount\n    file \"CircCoordinates\" into coordinates\n    \n    script:\n    \"\"\"\n    circtools detect $samples -B $bams -D -F -M -Nr 2 1 -fg -G -R $repeat -an $gtf -A $genome\n  \n    # circtools detect $samples -D -Pi -F -M -Nr 5 1 -fg -G -R $repeat -an $gtf -A $genome\n    \"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "    \"\"\"\n    circtools detect $samples -B $bams -D -F -M -Nr 2 1 -fg -G -R $repeat -an $gtf -A $genome\n  \n    # circtools detect $samples -D -Pi -F -M -Nr 5 1 -fg -G -R $repeat -an $gtf -A $genome\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "circtools"
        ],
        "tools_url": [
            "https://bio.tools/circtools"
        ],
        "tools_dico": [
            {
                "name": "circtools",
                "uri": "https://bio.tools/circtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "Gene transcripts"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0659",
                            "term": "Functional, regulatory and non-coding RNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0632",
                            "term": "Probes and primers"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "mRNA features"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3501",
                                    "term": "Enrichment analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3501",
                                    "term": "Enrichment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3501",
                                    "term": "Over-representation analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Software for computational circRNA analyses.",
                "homepage": "https://github.com/dieterich-lab/circtools"
            }
        ],
        "inputs": [
            "circtools_ch",
            "bam_ch",
            "gtf_circtools",
            "repeat_ch",
            "ch_fasta_for_circtools"
        ],
        "nb_inputs": 5,
        "outputs": [
            "circtools_out",
            "circtools_mapped_out",
            "rnacount",
            "coordinates"
        ],
        "nb_outputs": 4,
        "name_workflow": "pilm-bioinformatics__pipelines-nf-circtools",
        "directive": [
            "tag \"$sample\"",
            "label 'low_memory'",
            "publishDir \"${params.outdir}/circtools\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "multiqc": {
        "name_process": "multiqc",
        "string_process": "\nprocess multiqc {\n    publishDir \"${params.outdir}/MultiQC\", mode: 'copy'\n\n    when:\n    !params.skip_multiqc\n\n    input:\n    file multiqc_config from ch_multiqc_config\n    file (fastqc:'fastqc/*') from fastqc_results.collect().ifEmpty([])\n    file ('trim/*') from trimmed_logs.collect()\n    file ('alignment/*') from alignment_logs.collect()\n    file ('software_versions/*') from software_versions_yaml\n    file workflow_summary from create_workflow_summary(summary)\n\n    output:\n    file \"*multiqc_report.html\" into multiqc_report\n    file \"*_data\"\n    file \"multiqc_plots\"\n\n    script:\n    rtitle = custom_runName ? \"--title \\\"$custom_runName\\\"\" : ''\n    rfilename = custom_runName ? \"--filename \" + custom_runName.replaceAll('\\\\W','_').replaceAll('_+','_') + \"_multiqc_report\" : ''\n    \"\"\"\n    multiqc . -f $rtitle $rfilename --config $multiqc_config \\\\\n        -m custom_content -m star -m cutadapt -m fastqc\n    \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "    rtitle = custom_runName ? \"--title \\\"$custom_runName\\\"\" : ''\n    rfilename = custom_runName ? \"--filename \" + custom_runName.replaceAll('\\\\W','_').replaceAll('_+','_') + \"_multiqc_report\" : ''\n    \"\"\"\n    multiqc . -f $rtitle $rfilename --config $multiqc_config \\\\\n        -m custom_content -m star -m cutadapt -m fastqc\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [
            "ch_multiqc_config",
            "fastqc_results",
            "trimmed_logs",
            "alignment_logs",
            "software_versions_yaml",
            "summary"
        ],
        "nb_inputs": 6,
        "outputs": [
            "multiqc_report"
        ],
        "nb_outputs": 1,
        "name_workflow": "pilm-bioinformatics__pipelines-nf-circtools",
        "directive": [
            "publishDir \"${params.outdir}/MultiQC\", mode: 'copy'"
        ],
        "when": "!params.skip_multiqc",
        "stub": ""
    },
    "output_documentation": {
        "name_process": "output_documentation",
        "string_process": "\nprocess output_documentation {\n    publishDir \"${params.outdir}/pipeline_info\", mode: 'copy'\n\n    when:\n    false \n    \n    input:\n    file output_docs from ch_output_docs\n\n    output:\n    file \"results_description.html\"\n\n    script:\n    \"\"\"\n    markdown_to_html.r $output_docs results_description.html\n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "    \"\"\"\n    markdown_to_html.r $output_docs results_description.html\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_output_docs"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "pilm-bioinformatics__pipelines-nf-circtools",
        "directive": [
            "publishDir \"${params.outdir}/pipeline_info\", mode: 'copy'"
        ],
        "when": "false",
        "stub": ""
    }
}