{
    "OPERATION_1": {
        "string": "Channel\n.fromFilePairs( params.reads, size: single ? 1 : 2 )\n.ifEmpty { exit 1, \"Cannot find any reads matching: ${params.reads}, make sure it's enclosed in quotes\"}\n.into{raw_fastqc; raw_trimgalore}",
        "origin": [
            [
                "params.reads, size: single ? 1 : 2",
                "A"
            ]
        ],
        "gives": [
            [
                "raw_fastqc",
                "P"
            ],
            [
                "raw_trimgalore",
                "P"
            ]
        ]
    },
    "OPERATION_2": {
        "string": "Channel.fromPath(params.gtf).ifEmpty{exit 1, \"GTF file not found in ${params.gtf}\"}\n    .into{gen_gtf; idx_gtf, trans_gtf}",
        "origin": [
            [
                "params.gtf",
                "A"
            ]
        ],
        "gives": []
    },
    "OPERATION_3": {
        "string": "Channel.fromPath(params.fasta).ifEmpty{exit 1, \"GTF file not found in ${params.fasta}\"}\n    .into{idx_fasta; platypus_fasta; raw_fasta; alt_fasta}",
        "origin": [
            [
                "params.fasta",
                "A"
            ]
        ],
        "gives": [
            [
                "idx_fasta",
                "P"
            ],
            [
                "platypus_fasta",
                "P"
            ],
            [
                "raw_fasta",
                "P"
            ],
            [
                "alt_fasta",
                "P"
            ]
        ]
    },
    "OPERATION_4": {
        "string": "star_index = Channel.fromPath(params.star_index).ifEmpty{exit 1, \"STAR Index not found in ${params.star_index}. \\\n    Please select the correct path or leave blank and let the tool create an index using your genome.\"} ",
        "origin": [
            [
                "params.star_index",
                "A"
            ]
        ],
        "gives": [
            [
                "star_index",
                "P"
            ]
        ]
    }
}