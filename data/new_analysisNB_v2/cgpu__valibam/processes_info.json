{
    "generate_md5": {
        "name_process": "generate_md5",
        "string_process": "\nprocess generate_md5 {\n  tag \"$bam\"\n  publishDir \"$params.outdir/md5sum\", mode: 'copy'\n\n  input:\n  file(bam) from md5_channel\n\n  output:\n  file(\"*\") into nowhere_channel_\n\n  script:\n  \"\"\"\n  filename=`echo ${bam}`\n  sum=`md5sum $bam | cut -d \" \" -f1`\n  filename=\"\\${filename}__md5_\\${sum}\"\n  touch \"\\$filename\"\n  \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "  \"\"\"\n  filename=`echo ${bam}`\n  sum=`md5sum $bam | cut -d \" \" -f1`\n  filename=\"\\${filename}__md5_\\${sum}\"\n  touch \"\\$filename\"\n  \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "md5_channel"
        ],
        "nb_inputs": 1,
        "outputs": [
            "nowhere_channel_"
        ],
        "nb_outputs": 1,
        "name_workflow": "cgpu__valibam",
        "directive": [
            "tag \"$bam\"",
            "publishDir \"$params.outdir/md5sum\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "validate_bam": {
        "name_process": "validate_bam",
        "string_process": "\nprocess validate_bam {\n  tag \"$bam\"\n  publishDir \"$params.outdir/ValidateBamFiles\", mode: 'copy'\n\n  input:\n  file(bam) from validate_bam_channel\n  each file(ref) from ref_validate_bam_channel\n\n  output:\n  file(\"*_summary.txt\") into multiqc_channel_validate_bam\n\n  when: !(params.skipPicard)\n\n  script:\n  \"\"\"\n  gatk ValidateSamFile \\\n  --INPUT ${bam} \\\n  --OUTPUT ${bam.baseName}_summary.txt \\\n  --INDEX_VALIDATION_STRINGENCY NONE \\\n  --VALIDATE_INDEX false \\\n  --IS_BISULFITE_SEQUENCED false \\\n  --MAX_OPEN_TEMP_FILES 8000 \\\n  --MAX_OUTPUT 1000 \\\n  --MODE SUMMARY \\\n  --SKIP_MATE_VALIDATION false \\\n  --REFERENCE_SEQUENCE ${ref}\n  \"\"\"\n}",
        "nb_lignes_process": 27,
        "string_script": "  \"\"\"\n  gatk ValidateSamFile \\\n  --INPUT ${bam} \\\n  --OUTPUT ${bam.baseName}_summary.txt \\\n  --INDEX_VALIDATION_STRINGENCY NONE \\\n  --VALIDATE_INDEX false \\\n  --IS_BISULFITE_SEQUENCED false \\\n  --MAX_OPEN_TEMP_FILES 8000 \\\n  --MAX_OUTPUT 1000 \\\n  --MODE SUMMARY \\\n  --SKIP_MATE_VALIDATION false \\\n  --REFERENCE_SEQUENCE ${ref}\n  \"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [
            "GATK"
        ],
        "tools_url": [
            "https://bio.tools/gatk"
        ],
        "tools_dico": [
            {
                "name": "GATK",
                "uri": "https://bio.tools/gatk",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3202",
                                    "term": "Polymorphism detection"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3196",
                                    "term": "Genotyping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The Genome Analysis Toolkit (GATK) is a set of bioinformatic tools for analyzing high-throughput sequencing (HTS) and variant call format (VCF) data. The toolkit is well established for germline short variant discovery from whole genome and exome sequencing data. GATK4 expands functionality into copy number and somatic analyses and offers pipeline scripts for workflows.  \n\nVersion 4 (GATK4) is open-source at https://github.com/broadinstitute/gatk.",
                "homepage": "https://software.broadinstitute.org/gatk/"
            }
        ],
        "inputs": [
            "validate_bam_channel",
            "ref_validate_bam_channel"
        ],
        "nb_inputs": 2,
        "outputs": [
            "multiqc_channel_validate_bam"
        ],
        "nb_outputs": 1,
        "name_workflow": "cgpu__valibam",
        "directive": [
            "tag \"$bam\"",
            "publishDir \"$params.outdir/ValidateBamFiles\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "samtools_flagstat": {
        "name_process": "samtools_flagstat",
        "string_process": "\nprocess samtools_flagstat {\n  tag \"$bam\"\n  publishDir \"$params.outdir/SamtoolsFlagstat\", mode: 'copy'\n\n  input:\n  file(bam) from samtools_flagstat_channel\n  each file(ref) from ref_samtools_flagstat_channel\n\n  output:\n  file(\"*\") into multiqc_channel_samtools_flagstat\n\n  script:\n  \"\"\"\n  samtools flagstat ${bam} > \"${bam.baseName}.flagstats.txt\"\n  \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "  \"\"\"\n  samtools flagstat ${bam} > \"${bam.baseName}.flagstats.txt\"\n  \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "samtools_flagstat_channel",
            "ref_samtools_flagstat_channel"
        ],
        "nb_inputs": 2,
        "outputs": [
            "multiqc_channel_samtools_flagstat"
        ],
        "nb_outputs": 1,
        "name_workflow": "cgpu__valibam",
        "directive": [
            "tag \"$bam\"",
            "publishDir \"$params.outdir/SamtoolsFlagstat\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "qualimap_bamqc": {
        "name_process": "qualimap_bamqc",
        "string_process": "\nprocess qualimap_bamqc {\n  tag \"$bam\"\n\n  input:\n  file(bam) from qualimap_bamqc_channel\n  each file(ref) from ref_qualimap_bamqc_channel\n\n  output:\n  file(\"${bam.baseName}_folder\") into inliner_channel\n  file(\"*\") into multiqc_channel_qualimap_bamqc\n  \n  script:\n  \"\"\"\n  qualimap \\\n  bamqc \\\n  -bam ${bam} \\\n  --paint-chromosome-limits \\\n  --genome-gc-distr HUMAN \\\n  -skip-duplicated \\\n  --skip-dup-mode 0 \\\n  -outdir ${bam.baseName}_folder \\\n  -outformat HTML \\\n  -nt ${task.cpus}\n  \"\"\"\n}",
        "nb_lignes_process": 24,
        "string_script": "  \"\"\"\n  qualimap \\\n  bamqc \\\n  -bam ${bam} \\\n  --paint-chromosome-limits \\\n  --genome-gc-distr HUMAN \\\n  -skip-duplicated \\\n  --skip-dup-mode 0 \\\n  -outdir ${bam.baseName}_folder \\\n  -outformat HTML \\\n  -nt ${task.cpus}\n  \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "QualiMap"
        ],
        "tools_url": [
            "https://bio.tools/qualimap"
        ],
        "tools_dico": [
            {
                "name": "QualiMap",
                "uri": "https://bio.tools/qualimap",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Platform-independent application written in Java and R that provides both a Graphical User Inteface (GUI) and a command-line interface to facilitate the quality control of alignment sequencing data.",
                "homepage": "http://qualimap.bioinfo.cipf.es/"
            }
        ],
        "inputs": [
            "qualimap_bamqc_channel",
            "ref_qualimap_bamqc_channel"
        ],
        "nb_inputs": 2,
        "outputs": [
            "inliner_channel",
            "multiqc_channel_qualimap_bamqc"
        ],
        "nb_outputs": 2,
        "name_workflow": "cgpu__valibam",
        "directive": [
            "tag \"$bam\""
        ],
        "when": "",
        "stub": ""
    },
    "inliner": {
        "name_process": "inliner",
        "string_process": "\nprocess inliner {\n  tag \"inliner\"\n  publishDir \"$params.outdir/QualimapBamQC\", mode: 'copy'\n  echo true \n\n  input:\n  file(folder) from inliner_channel\n\n  output:\n  file(\"${folder}/${folder}_report.html\") into qualimap_bamqc_results\n\n  script:\n  \"\"\"\n  cd ${folder}\n  inliner qualimapReport.html  >  ${folder}_report.html\n  \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "  \"\"\"\n  cd ${folder}\n  inliner qualimapReport.html  >  ${folder}_report.html\n  \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "inliner_channel"
        ],
        "nb_inputs": 1,
        "outputs": [
            "qualimap_bamqc_results"
        ],
        "nb_outputs": 1,
        "name_workflow": "cgpu__valibam",
        "directive": [
            "tag \"inliner\"",
            "publishDir \"$params.outdir/QualimapBamQC\", mode: 'copy'",
            "echo true"
        ],
        "when": "",
        "stub": ""
    },
    "multiqc": {
        "name_process": "multiqc",
        "string_process": "\nprocess multiqc {\n    publishDir \"$params.outdir/MultiQC\", mode: 'copy'\n\n    when:\n    !params.skip_multiqc\n\n    input:\n    file (validateSamFile) from multiqc_channel_validate_bam.collect().ifEmpty([])\n    file (flagstat) from multiqc_channel_samtools_flagstat.collect().ifEmpty([])\n    file (bamqc) from multiqc_channel_qualimap_bamqc.collect().ifEmpty([])\n    \n    output:\n    file \"*multiqc_report.html\" into multiqc_report\n    file \"*_data\"\n\n    script:\n    \"\"\"\n    multiqc .  -m picard -m qualimap -m samtools\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "    \"\"\"\n    multiqc .  -m picard -m qualimap -m samtools\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [
            "multiqc_channel_validate_bam",
            "multiqc_channel_samtools_flagstat",
            "multiqc_channel_qualimap_bamqc"
        ],
        "nb_inputs": 3,
        "outputs": [
            "multiqc_report"
        ],
        "nb_outputs": 1,
        "name_workflow": "cgpu__valibam",
        "directive": [
            "publishDir \"$params.outdir/MultiQC\", mode: 'copy'"
        ],
        "when": "!params.skip_multiqc",
        "stub": ""
    }
}