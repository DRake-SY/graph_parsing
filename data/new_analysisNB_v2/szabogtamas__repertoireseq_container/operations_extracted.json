{
    "OPERATION_1": {
        "string": "Channel\n    .fromFilePairs(params.input_folder + '/' + params.sample_prefix + '*_{1,2}.f*')\n    .map{ [it[1][0], it[1][1], it[0]] }\n    .set{ insamples }",
        "origin": [
            [
                "params.input_folder + '/' + params.sample_prefix + '*_{1,2}.f*'",
                "A"
            ]
        ],
        "gives": [
            [
                "insamples",
                "P"
            ]
        ]
    },
    "OPERATION_2": {
        "string": "Channel\n    .fromPath(params.sample_metadata)\n    .set{ sample_metafile }",
        "origin": [
            [
                "params.sample_metadata",
                "A"
            ]
        ],
        "gives": [
            [
                "sample_metafile",
                "P"
            ]
        ]
    },
    "OPERATION_3": {
        "string": "Channel\n    .fromPath(params.report_template)\n    .set{ report_template }",
        "origin": [
            [
                "params.report_template",
                "A"
            ]
        ],
        "gives": [
            [
                "report_template",
                "P"
            ]
        ]
    },
    "OPERATION_4": {
        "string": "tagged_repertoire_table\n    .collectFile(name: 'merged_repertoire.txt', keepHeader: true, newLine: true)\n    .set{ tagged_repertoire }",
        "origin": [
            [
                "tagged_repertoire_table",
                "P"
            ]
        ],
        "gives": [
            [
                "tagged_repertoire",
                "P"
            ]
        ]
    }
}