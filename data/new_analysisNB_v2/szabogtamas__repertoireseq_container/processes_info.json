{
    "rnaBulkTrimmomaticPE": {
        "name_process": "rnaBulkTrimmomaticPE",
        "string_process": "\nprocess rnaBulkTrimmomaticPE {\n\n    label 'manycpu'\n\n    input:\n        val adapterFileIllumina from params.adapterFileIllumina\n        val manycpu from params.numcores\n        tuple forward, reverse, sample from insamples\n\n    output:\n        tuple sample, \"${sample}_trim_1.fastq\", \"${sample}_trim_2.fastq\" into trimmed_fastqs\n\n    \"\"\"\n    TrimmomaticPE $forward $reverse\\\n    ${sample}_trim_1.fastq ${sample}_forward_unpaired.fastq\\\n    ${sample}_trim_2.fastq ${sample}_reverse_unpaired.fastq\\\n    ILLUMINACLIP:$adapterFileIllumina:2:30:10:8:keepBothReads LEADING:3 TRAILING:3 MINLEN:36\\\n    -threads $manycpu\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "\"\"\"\n    TrimmomaticPE $forward $reverse\\\n    ${sample}_trim_1.fastq ${sample}_forward_unpaired.fastq\\\n    ${sample}_trim_2.fastq ${sample}_reverse_unpaired.fastq\\\n    ILLUMINACLIP:$adapterFileIllumina:2:30:10:8:keepBothReads LEADING:3 TRAILING:3 MINLEN:36\\\n    -threads $manycpu\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "params",
            "params",
            "insamples"
        ],
        "nb_inputs": 3,
        "outputs": [
            "trimmed_fastqs"
        ],
        "nb_outputs": 1,
        "name_workflow": "szabogtamas__repertoireseq_container",
        "directive": [
            "label 'manycpu'"
        ],
        "when": "",
        "stub": ""
    },
    "reconstructBCRepertoireMiXCR": {
        "name_process": "reconstructBCRepertoireMiXCR",
        "string_process": "\nprocess reconstructBCRepertoireMiXCR {\n\n    publishDir params.clonotype_dir, pattern: '*.txt', mode: 'copy'\n\n    input:\n        val species_alias from params.species_alias\n        tuple sample, \"${sample}_trim_1.fastq\", \"${sample}_trim_2.fastq\" from trimmed_fastqs\n\n    output:\n        file \"${sample}_repertoire.txt\" into repertoire_reports\n        tuple sample, \"${sample}.clns\" into repertoire_clns\n\n    \"\"\"\n    /usr/share/mixcr/mixcr-3.0.13/mixcr analyze shotgun\\\n    --only-productive\\\n    --starting-material rna\\\n    --receptor-type bcr\\\n    --species $species_alias\\\n    --report ${sample}_repertoire.txt\\\n    ${sample}_trim_1.fastq ${sample}_trim_2.fastq\\\n    $sample\n    \"\"\"\n}",
        "nb_lignes_process": 22,
        "string_script": "\"\"\"\n    /usr/share/mixcr/mixcr-3.0.13/mixcr analyze shotgun\\\n    --only-productive\\\n    --starting-material rna\\\n    --receptor-type bcr\\\n    --species $species_alias\\\n    --report ${sample}_repertoire.txt\\\n    ${sample}_trim_1.fastq ${sample}_trim_2.fastq\\\n    $sample\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [
            "MiXCR"
        ],
        "tools_url": [
            "https://bio.tools/MiXCR"
        ],
        "tools_dico": [
            {
                "name": "MiXCR",
                "uri": "https://bio.tools/MiXCR",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2830",
                            "term": "Immunoproteins and antigens"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0160",
                            "term": "Sequence sites, features and motifs"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0310",
                                    "term": "Sequence assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "Software for extraction of T- and B-cell receptor repertoires from any type of sequencing data.",
                "homepage": "https://milaboratory.com/software/mixcr/"
            }
        ],
        "inputs": [
            "params",
            "trimmed_fastqs"
        ],
        "nb_inputs": 2,
        "outputs": [
            "repertoire_reports",
            "repertoire_clns"
        ],
        "nb_outputs": 2,
        "name_workflow": "szabogtamas__repertoireseq_container",
        "directive": [
            "publishDir params.clonotype_dir, pattern: '*.txt', mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "mergeChainedMiXCR": {
        "name_process": "mergeChainedMiXCR",
        "string_process": "\nprocess mergeChainedMiXCR {\n\n    publishDir params.clonotype_dir, pattern: '*.txt', mode: 'copy'\n\n    input:\n        tuple sample, \"clones.clns\" from repertoire_clns\n\n    output:\n        tuple sample, \"${sample}_clones.txt\" into repertoire_tables\n\n    \"\"\"\n    /usr/share/mixcr/mixcr-3.0.13/mixcr exportClones clones.clns ${sample}_clones.txt\n    \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "\"\"\"\n    /usr/share/mixcr/mixcr-3.0.13/mixcr exportClones clones.clns ${sample}_clones.txt\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "MiXCR"
        ],
        "tools_url": [
            "https://bio.tools/MiXCR"
        ],
        "tools_dico": [
            {
                "name": "MiXCR",
                "uri": "https://bio.tools/MiXCR",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_2830",
                            "term": "Immunoproteins and antigens"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0160",
                            "term": "Sequence sites, features and motifs"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0310",
                                    "term": "Sequence assembly"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2403",
                                    "term": "Sequence analysis (general)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "Software for extraction of T- and B-cell receptor repertoires from any type of sequencing data.",
                "homepage": "https://milaboratory.com/software/mixcr/"
            }
        ],
        "inputs": [
            "repertoire_clns"
        ],
        "nb_inputs": 1,
        "outputs": [
            "repertoire_tables"
        ],
        "nb_outputs": 1,
        "name_workflow": "szabogtamas__repertoireseq_container",
        "directive": [
            "publishDir params.clonotype_dir, pattern: '*.txt', mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "addPathToTable": {
        "name_process": "addPathToTable",
        "string_process": "\nprocess addPathToTable {\n\n    input:\n        tuple sample, \"clones.txt\" from repertoire_tables\n\n    output:\n        file \"tagged_clones.txt\" into tagged_repertoire_table\n\n    \"\"\"\n    R --slave -e ' \\\n      tb <- read.csv(\"clones.txt\", sep=\"\\\\t\", stringsAsFactors=FALSE); \\\n      tb[\"Sample_code\"] <- \"${sample}\"; \\\n      write.csv(tb, \"tagged_clones.txt\", row.names=FALSE) \\\n    '\n    \"\"\"\n}",
        "nb_lignes_process": 15,
        "string_script": "\"\"\"\n    R --slave -e ' \\\n      tb <- read.csv(\"clones.txt\", sep=\"\\\\t\", stringsAsFactors=FALSE); \\\n      tb[\"Sample_code\"] <- \"${sample}\"; \\\n      write.csv(tb, \"tagged_clones.txt\", row.names=FALSE) \\\n    '\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "TBI"
        ],
        "tools_url": [
            "https://bio.tools/tbi"
        ],
        "tools_dico": [
            {
                "name": "TBI",
                "uri": "https://bio.tools/tbi",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0099",
                            "term": "RNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0097",
                            "term": "Nucleic acid structure analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0097",
                            "term": "Nucleic acid structure"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2481",
                                    "term": "Nucleic acid structure analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "TBI (Tightly Bound Ion Model ) predicts the electrostatic free energy, the different free energy components, the average binding fraction of ions, and the most probable ion binding modes for a given RNA structure (provided in the PDB format) in a salt solution of given ion concentrations.",
                "homepage": "http://rna.physics.missouri.edu/MCTBI/"
            }
        ],
        "inputs": [
            "repertoire_tables"
        ],
        "nb_inputs": 1,
        "outputs": [
            "tagged_repertoire_table"
        ],
        "nb_outputs": 1,
        "name_workflow": "szabogtamas__repertoireseq_container",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "generateReport": {
        "name_process": "generateReport",
        "string_process": "\nprocess generateReport {\n\n    publishDir params.report_folder, mode: 'copy'\n\n    input:\n        val report_title from params.report_title\n        val report_author from params.report_author\n        val condition_column from params.condition_column\n        val condition_order from params.condition_order\n        val species from params.species\n        val figformat from params.figformat\n        val table_path from params.table_path\n        val figure_path from params.figure_path\n        val report_filename from params.report_filename\n        file \"template.Rmd\" from report_template\n        file \"sample_meta.csv\" from sample_metafile\n        file clonotype_tab from tagged_repertoire\n\n    output:\n        file \"${table_path}\" into summary_tab\n        file \"${report_filename}\" into final_report\n        file \"${report_filename.replaceAll(/html$/, 'Rmd')}\" into report_source\n\n    \"\"\"\n    cp template.Rmd \"${report_filename.replaceAll(/html$/, 'Rmd')}\"\n    R --slave -e ' \\\n      rmarkdown::render( \\\n        \"${report_filename.replaceAll(/html$/, 'Rmd')}\", \\\n        output_file=\"${report_filename}\", \\\n        params = list( \\\n          tagged_repertoire=\"${clonotype_tab}\", \\\n          sample_metadata=\"sample_meta.csv\", \\\n          condition_column=\"${condition_column}\", \\\n          condition_order=\"${condition_order}\", \\\n          table_path=\"${table_path}\", \\\n          figure_path=\"${figure_path}\", \\\n          figformat=\"${figformat}\", \\\n          species=\"${species}\" \\\n        ) \\\n      ) \\\n    '\n    \"\"\"\n}",
        "nb_lignes_process": 42,
        "string_script": "\"\"\"\n    cp template.Rmd \"${report_filename.replaceAll(/html$/, 'Rmd')}\"\n    R --slave -e ' \\\n      rmarkdown::render( \\\n        \"${report_filename.replaceAll(/html$/, 'Rmd')}\", \\\n        output_file=\"${report_filename}\", \\\n        params = list( \\\n          tagged_repertoire=\"${clonotype_tab}\", \\\n          sample_metadata=\"sample_meta.csv\", \\\n          condition_column=\"${condition_column}\", \\\n          condition_order=\"${condition_order}\", \\\n          table_path=\"${table_path}\", \\\n          figure_path=\"${figure_path}\", \\\n          figformat=\"${figformat}\", \\\n          species=\"${species}\" \\\n        ) \\\n      ) \\\n    '\n    \"\"\"",
        "nb_lignes_script": 18,
        "language_script": "bash",
        "tools": [
            "PDEparams"
        ],
        "tools_url": [
            "https://bio.tools/PDEparams"
        ],
        "tools_dico": [
            {
                "name": "PDEparams",
                "uri": "https://bio.tools/PDEparams",
                "topic": [
                    [],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Parameter fitting toolbox for partial differential equations in Python.",
                "homepage": "http://github.com/systemsmedicine/PDE_params"
            }
        ],
        "inputs": [
            "params",
            "params",
            "params",
            "params",
            "params",
            "params",
            "params",
            "params",
            "params",
            "report_template",
            "sample_metafile",
            "tagged_repertoire"
        ],
        "nb_inputs": 12,
        "outputs": [
            "summary_tab",
            "final_report",
            "report_source"
        ],
        "nb_outputs": 3,
        "name_workflow": "szabogtamas__repertoireseq_container",
        "directive": [
            "publishDir params.report_folder, mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    }
}