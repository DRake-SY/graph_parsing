{
    "get_software_versions": {
        "name_process": "get_software_versions",
        "string_process": "\nprocess get_software_versions {\n    validExitStatus 0,1,127\n    publishDir \"${params.outdir}/software_versions/\", mode: 'copy', pattern: '*.txt'\n\n    output:\n    file 'software_versions_mqc.yaml' into software_versions_yaml\n    file '*.txt' into software_versions_text\n\n    script:\n    \"\"\"\n    echo $params.version > v_pipeline.txt\n    echo $workflow.nextflow.version > v_nextflow.txt\n    fastqc --version > v_fastqc.txt\n    bbversion.sh --version > v_bbduk.txt\n    hisat2 --version > v_hisat2.txt\n    samtools --version > v_samtools.txt\n    fastq-dump --version > v_fastq-dump.txt\n    preseq > v_preseq.txt\n    bedtools --version > v_bedtools.txt\n    igvtools version > v_igv-tools.txt\n\n    for X in `ls *.txt`; do\n        cat \\$X >> all_versions.txt;\n    done\n    scrape_software_versions.py > software_versions_mqc.yaml\n    \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "    \"\"\"\n    echo $params.version > v_pipeline.txt\n    echo $workflow.nextflow.version > v_nextflow.txt\n    fastqc --version > v_fastqc.txt\n    bbversion.sh --version > v_bbduk.txt\n    hisat2 --version > v_hisat2.txt\n    samtools --version > v_samtools.txt\n    fastq-dump --version > v_fastq-dump.txt\n    preseq > v_preseq.txt\n    bedtools --version > v_bedtools.txt\n    igvtools version > v_igv-tools.txt\n\n    for X in `ls *.txt`; do\n        cat \\$X >> all_versions.txt;\n    done\n    scrape_software_versions.py > software_versions_mqc.yaml\n    \"\"\"",
        "nb_lignes_script": 16,
        "language_script": "bash",
        "tools": [
            "FastQC",
            "HISAT2",
            "SAMtools",
            "preseq",
            "BEDTools",
            "IGVtools"
        ],
        "tools_url": [
            "https://bio.tools/fastqc",
            "https://bio.tools/hisat2",
            "https://bio.tools/samtools",
            "https://bio.tools/preseq",
            "https://bio.tools/bedtools",
            "https://bio.tools/igvtools"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            },
            {
                "name": "HISAT2",
                "uri": "https://bio.tools/hisat2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Alignment program for mapping next-generation sequencing reads (both DNA and RNA) to a population of human genomes (as well as to a single reference genome).",
                "homepage": "https://ccb.jhu.edu/software/hisat2/index.shtml"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "preseq",
                "uri": "https://bio.tools/preseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2423",
                                    "term": "Prediction and recognition"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This package is aimed at predicting and number of distinct reads and how many will be expected from additional sequencing using an initial sequencing experiment. The estimates can then be used to examine the utility of further sequencing, optimize the sequencing depth, or to screen multiple libraries to avoid low complexity samples.",
                "homepage": "http://smithlabresearch.org/software/preseq/"
            },
            {
                "name": "BEDTools",
                "uri": "https://bio.tools/bedtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "BEDTools is an extensive suite of utilities for comparing genomic features in BED format.",
                "homepage": "https://github.com/arq5x/bedtools2"
            },
            {
                "name": "IGVtools",
                "uri": "https://bio.tools/igvtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0256",
                                    "term": "Sequence feature comparison"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0256",
                                    "term": "Feature comparison"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0256",
                                    "term": "Feature table comparison"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The igvtools utility provides a set of tools for pre-processing data files.",
                "homepage": "https://software.broadinstitute.org/software/igv/igvtools"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [
            "software_versions_yaml",
            "software_versions_text"
        ],
        "nb_outputs": 2,
        "name_workflow": "Dowell-Lab__RNAseq-Flow",
        "directive": [
            "validExitStatus 0,1,127",
            "publishDir \"${params.outdir}/software_versions/\", mode: 'copy', pattern: '*.txt'"
        ],
        "when": "",
        "stub": ""
    },
    "sra_dump": {
        "name_process": "sra_dump",
        "string_process": "\nprocess sra_dump {\n    tag \"$prefix\"\n    if (params.threadfqdump) {\n        cpus 8 }\n    else {\n        cpus 1\n    }\n    if (params.savefq || params.saveAllfq) {\n        publishDir \"${params.outdir}/fastq\", mode: 'copy'\n    }\n    \n    input:\n    set val(prefix), file(reads) from read_files_sra\n\n    output:\n    set val(prefix), file(\"*.fastq.gz\") into fastq_reads_qc_sra, fastq_reads_trim_sra, fastq_reads_hisat2_notrim_sra\n   \n\n    script:\n    prefix = reads.baseName\n    if (!params.threadfqdump) {\n        \"\"\"\n        echo ${prefix}\n        fastq-dump ${reads} --gzip\n        \"\"\"\n    } else if (!params.singleEnd) {\n         \"\"\"\n        export PATH=~/.local/bin:$PATH\n        parallel-fastq-dump \\\n            --threads 8 \\\n            --gzip \\\n            --split-3 \\\n            --sra-id ${reads}\n        \"\"\"\n    } else if (!params.threadfqdump && !params.singleEnd) {\n        \"\"\"\n        echo ${prefix}\n        fastq-dump --split-3 ${reads} --gzip\n        \"\"\"\n    } else {\n        \"\"\"\n        export PATH=~/.local/bin:$PATH\n        parallel-fastq-dump \\\n            --threads 8 \\\n            --gzip \\\n            --sra-id ${reads}\n        \"\"\"\n    }\n}",
        "nb_lignes_process": 48,
        "string_script": "    prefix = reads.baseName\n    if (!params.threadfqdump) {\n        \"\"\"\n        echo ${prefix}\n        fastq-dump ${reads} --gzip\n        \"\"\"\n    } else if (!params.singleEnd) {\n         \"\"\"\n        export PATH=~/.local/bin:$PATH\n        parallel-fastq-dump \\\n            --threads 8 \\\n            --gzip \\\n            --split-3 \\\n            --sra-id ${reads}\n        \"\"\"\n    } else if (!params.threadfqdump && !params.singleEnd) {\n        \"\"\"\n        echo ${prefix}\n        fastq-dump --split-3 ${reads} --gzip\n        \"\"\"\n    } else {\n        \"\"\"\n        export PATH=~/.local/bin:$PATH\n        parallel-fastq-dump \\\n            --threads 8 \\\n            --gzip \\\n            --sra-id ${reads}\n        \"\"\"\n    }",
        "nb_lignes_script": 28,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "read_files_sra"
        ],
        "nb_inputs": 1,
        "outputs": [
            "fastq_reads_qc_sra",
            "fastq_reads_trim_sra",
            "fastq_reads_hisat2_notrim_sra"
        ],
        "nb_outputs": 3,
        "name_workflow": "Dowell-Lab__RNAseq-Flow",
        "directive": [
            "tag \"$prefix\" if (params.threadfqdump) { cpus 8 } else { cpus 1 } if (params.savefq || params.saveAllfq) { publishDir \"${params.outdir}/fastq\", mode: 'copy' }"
        ],
        "when": "",
        "stub": ""
    },
    "fastQC": {
        "name_process": "fastQC",
        "string_process": "\nprocess fastQC {\n    validExitStatus 0,1\n    tag \"$prefix\"\n    memory '8 GB'\n    publishDir \"${params.outdir}\" , mode: 'copy',\n    saveAs: {filename ->\n             if (filename.indexOf(\"zip\") > 0)     \"qc/fastqc/zips/$filename\"\n        else if (filename.indexOf(\"html\") > 0)    \"qc/fastqc/$filename\"\n        else if (filename.indexOf(\"txt\") > 0)     \"qc/fastqc_stats/$filename\"\n        else null            \n    }\n    \n    when:\n    !params.skipFastQC && !params.skipAllQC\n\n    input:\n    set val(prefix), file(reads) from fastq_reads_qc.mix(fastq_reads_qc_sra)\n\n    output:\n    file \"*.{zip,html}\" into fastqc_results\n    file \"*.fastqc_stats.txt\" into fastqc_stats\n\n    script:\n    \"\"\"\n    echo ${prefix}\n    fastqc $reads\n    \n    ${params.extract_fastqc_stats} \\\n        --srr=${prefix} \\\n        > ${prefix}.fastqc_stats.txt    \n    \"\"\"\n}",
        "nb_lignes_process": 31,
        "string_script": "    \"\"\"\n    echo ${prefix}\n    fastqc $reads\n    \n    ${params.extract_fastqc_stats} \\\n        --srr=${prefix} \\\n        > ${prefix}.fastqc_stats.txt    \n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "fastq_reads_qc",
            "fastq_reads_qc_sra"
        ],
        "nb_inputs": 2,
        "outputs": [
            "fastqc_results",
            "fastqc_stats"
        ],
        "nb_outputs": 2,
        "name_workflow": "Dowell-Lab__RNAseq-Flow",
        "directive": [
            "validExitStatus 0,1",
            "tag \"$prefix\"",
            "memory '8 GB'",
            "publishDir \"${params.outdir}\" , mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\"zip\") > 0) \"qc/fastqc/zips/$filename\" else if (filename.indexOf(\"html\") > 0) \"qc/fastqc/$filename\" else if (filename.indexOf(\"txt\") > 0) \"qc/fastqc_stats/$filename\" else null }"
        ],
        "when": "!params.skipFastQC && !params.skipAllQC",
        "stub": ""
    },
    "bbduk_hisat2": {
        "name_process": "bbduk_hisat2",
        "string_process": "\nprocess bbduk_hisat2 {\n    validExitStatus 0\n    tag \"$name\"\n    cpus 32\n    time '2h'\n    memory '40 GB'\n    publishDir \"${params.outdir}/qc/trimstats\", mode: 'copy', pattern: \"*.{refstats,trimstats}.txt\"\n    publishDir \"${params.outdir}/qc/hisat2_mapstats\", mode: 'copy', pattern: \"*hisat2_mapstats.txt\"    \n    if (params.saveTrim || params.saveAllfq) {\n        publishDir \"${params.outdir}/fastq_trimmed\", mode: 'copy', pattern: \"*.fastq.gz\"\n    }\n    \n    when:\n    !params.noTrim\n\n    input:\n    file(indices) from hisat2_indices\n    val(indices_path) from hisat2_indices        \n    set val(name), file(reads) from fastq_reads_trim.mix(fastq_reads_trim_sra)\n\n    output:\n    set val(name), file(\"*.trim.fastq.gz\") into trimmed_reads_fastqc\n    file \"*.{refstats,trimstats}.txt\" into trim_stats\n    set val(name), file(\"*.sam\") into hisat2_sam\n    file(\"*hisat2_mapstats.txt\") into hisat2_mapstats       \n\n    script:\n    prefix_pe = reads[0].toString() - ~/(_1\\.)?(_R1)?(\\.fq)?(fq)?(\\.fastq)?(fastq)?(\\.gz)?$/\n    prefix_se = reads[0].toString() - ~/(\\.fq)?(\\.fastq)?(\\.gz)?$/\n    \n    def rnastrandness = ''\n    if (params.forwardStranded && !params.unStranded){\n        rnastrandness = params.singleEnd ? '--rna-strandness F' : '--rna-strandness FR'\n    } else if (params.reverseStranded && !params.unStranded){\n        rnastrandness = params.singleEnd ? '--rna-strandness R' : '--rna-strandness RF'\n    }\n    \n    if (!params.singleEnd && params.flip) {\n        \"\"\"\n        echo ${name}         \n                \n        bbduk.sh -Xmx40g \\\n                  t=32 \\\n                  in=${reads[0]} \\\n                  in2=${reads[1]} \\\n                  out=${prefix_pe}_1.trim.fastq.gz \\\n                  out2=${prefix_pe}_2.trim.fastq.gz \\\n                  ref=${bbmap_adapters} \\\n                  ktrim=r qtrim=r trimq=10 k=23 mink=11 hdist=1 \\\n                  maq=10 minlen=25 \\\n                  tpe tbo \\\n                  literal=AAAAAAAAAAAAAAAAAAAAAAA \\\n                  stats=${prefix_pe}.trimstats.txt \\\n                  refstats=${prefix_pe}.refstats.txt\n                  \n        reformat.sh -Xmx40g \\\n                t=32 \\\n                in=${prefix_pe}_1.trim.fastq.gz \\\n                in2=${prefix_pe}_2.trim.fastq.gz \\\n                out=${prefix_pe}_1.flip.trim.fastq.gz \\\n                out2=${prefix_pe}_2.flip.trim.fastq.gz \\\n                rcomp=t\n        \n        hisat2 -p 32 \\\n               --very-sensitive \\\n               -x ${indices_path} \\\n               -1 ${prefix_pe}_1.flip.trim.fastq.gz \\\n               -2 ${prefix_pe}_2.flip.trim.fastq.gz \\\n                $rnastrandness \\\n               --pen-noncansplice 14 \\\n               --mp 1,0 \\\n               --sp 3,1 \\\n               --new-summary \\\n               > ${prefix_pe}.sam \\\n               2> ${prefix_pe}.hisat2_mapstats.txt                  \n        \"\"\"\n    } else if (params.singleEnd && params.flip) {\n        \"\"\"\n        echo ${name}        \n        \n        bbduk.sh -Xmx40g \\\n                  t=32 \\\n                  in=${reads} \\\n                  out=${prefix_se}.trim.fastq.gz \\\n                  ref=${bbmap_adapters} \\\n                  ktrim=r qtrim=r trimq=10 k=23 mink=11 hdist=1 \\\n                  maq=10 minlen=25 \\\n                  literal=AAAAAAAAAAAAAAAAAAAAAAA \\\n                  stats=${prefix_se}.trimstats.txt \\\n                  refstats=${prefix_se}.refstats.txt\n                  \n        reformat.sh -Xmx40g \\\n                t=32 \\\n                in=${prefix_se}.trim.fastq.gz \\\n                out=${prefix_se}.flip.trim.fastq.gz \\\n                rcomp=t\n\n        hisat2  -p 32 \\\n                --very-sensitive \\\n                $rnastrandness \\\n                --pen-noncansplice 14 \\\n                --mp 1,0 \\\n                --sp 3,1 \\\n                -x ${indices_path}\\\n                -U ${prefix_se}.flip.trim.fastq.gz \\\n                --new-summary \\\n                > ${prefix_se}.sam \\\n                2> ${prefix_se}.hisat2_mapstats.txt               \n        \"\"\"\n    } else if (!params.singleEnd && params.flipR2) {\n                \"\"\"\n        echo ${prefix_pe}\n\n        bbduk.sh -Xmx40g \\\n                t=32 \\\n                in=${reads[0]} \\\n                in2=${reads[1]} \\\n                out=${prefix_pe}_1.trim.fastq.gz \\\n                out2=${prefix_pe}_2.trim.fastq.gz \\\n                ref=${bbmap_adapters} \\\n                ktrim=r qtrim=r trimq=10 k=23 mink=11 hdist=1 \\\n                nullifybrokenquality=t \\\n                maq=10 minlen=25 \\\n                tpe tbo \\\n                literal=AAAAAAAAAAAAAAAAAAAAAAA \\\n                stats=${prefix_pe}.trimstats.txt \\\n                refstats=${prefix_pe}.refstats.txt\n                \n        reformat.sh -Xmx40g \\\n                t=32 \\\n                in=${prefix_pe}_1.trim.fastq.gz \\\n                in2=${prefix_pe}_2.trim.fastq.gz \\\n                out=${prefix_pe}_1.flip.trim.fastq.gz \\\n                out2=${prefix_pe}_2.flip.trim.fastq.gz \\\n                rcompmate=t\n\n        hisat2 -p 32 \\\n               --very-sensitive \\\n               -x ${indices_path} \\\n               -1 ${prefix_pe}_1.flip.trim.fastq.gz \\\n               -2 ${prefix_pe}_2.flip.trim.fastq.gz \\\n                $rnastrandness \\\n               --pen-noncansplice 14 \\\n               --mp 1,0 \\\n               --sp 3,1 \\\n               --new-summary \\\n               > ${prefix_pe}.sam \\\n               2> ${prefix_pe}.hisat2_mapstats.txt                   \n        \"\"\"\n    } else if (!params.singleEnd) {\n        \"\"\"\n        echo ${prefix_pe}\n\n        bbduk.sh -Xmx40g \\\n                  t=32 \\\n                  in=${reads[0]} \\\n                  in2=${reads[1]} \\\n                  out=${prefix_pe}_1.trim.fastq.gz \\\n                  out2=${prefix_pe}_2.trim.fastq.gz \\\n                  ref=${bbmap_adapters} \\\n                  ktrim=r qtrim=r trimq=10 k=23 mink=11 hdist=1 \\\n                  maq=10 minlen=25 \\\n                  tpe tbo \\\n                  literal=AAAAAAAAAAAAAAAAAAAAAAA \\\n                  stats=${prefix_pe}.trimstats.txt \\\n                  refstats=${prefix_pe}.refstats.txt\n                  \n        hisat2 -p 32 \\\n               --very-sensitive \\\n               -x ${indices_path} \\\n               -1 ${prefix_pe}_1.trim.fastq.gz \\\n               -2 ${prefix_pe}_2.trim.fastq.gz \\\n                $rnastrandness \\\n               --pen-noncansplice 14 \\\n               --mp 1,0 \\\n               --sp 3,1 \\\n               --new-summary \\\n               > ${prefix_pe}.sam \\\n               2> ${prefix_pe}.hisat2_mapstats.txt                              \n        \"\"\"\n    } else {\n        \"\"\"\n        echo ${prefix_se}\n\n        bbduk.sh -Xmx40g \\\n                  t=32 \\\n                  in=${reads} \\\n                  out=${prefix_se}.trim.fastq.gz \\\n                  ref=${bbmap_adapters} \\\n                  ktrim=r qtrim=r trimq=10 k=23 mink=11 hdist=1 \\\n                  maq=10 minlen=25 \\\n                  literal=AAAAAAAAAAAAAAAAAAAAAAA \\\n                  stats=${prefix_se}.trimstats.txt \\\n                  refstats=${prefix_se}.refstats.txt                   \n                  \n        hisat2  -p 32 \\\n                --very-sensitive \\\n                $rnastrandness \\\n                --pen-noncansplice 14 \\\n                --mp 1,0 \\\n                --sp 3,1 \\\n                -x ${indices_path} \\\n                -U ${prefix_se}.trim.fastq.gz \\\n                --new-summary \\\n                > ${prefix_se}.sam \\\n                2> ${prefix_se}.hisat2_mapstats.txt                  \n        \"\"\"\n    } \n}",
        "nb_lignes_process": 208,
        "string_script": "    prefix_pe = reads[0].toString() - ~/(_1\\.)?(_R1)?(\\.fq)?(fq)?(\\.fastq)?(fastq)?(\\.gz)?$/\n    prefix_se = reads[0].toString() - ~/(\\.fq)?(\\.fastq)?(\\.gz)?$/\n    \n    def rnastrandness = ''\n    if (params.forwardStranded && !params.unStranded){\n        rnastrandness = params.singleEnd ? '--rna-strandness F' : '--rna-strandness FR'\n    } else if (params.reverseStranded && !params.unStranded){\n        rnastrandness = params.singleEnd ? '--rna-strandness R' : '--rna-strandness RF'\n    }\n    \n    if (!params.singleEnd && params.flip) {\n        \"\"\"\n        echo ${name}         \n                \n        bbduk.sh -Xmx40g \\\n                  t=32 \\\n                  in=${reads[0]} \\\n                  in2=${reads[1]} \\\n                  out=${prefix_pe}_1.trim.fastq.gz \\\n                  out2=${prefix_pe}_2.trim.fastq.gz \\\n                  ref=${bbmap_adapters} \\\n                  ktrim=r qtrim=r trimq=10 k=23 mink=11 hdist=1 \\\n                  maq=10 minlen=25 \\\n                  tpe tbo \\\n                  literal=AAAAAAAAAAAAAAAAAAAAAAA \\\n                  stats=${prefix_pe}.trimstats.txt \\\n                  refstats=${prefix_pe}.refstats.txt\n                  \n        reformat.sh -Xmx40g \\\n                t=32 \\\n                in=${prefix_pe}_1.trim.fastq.gz \\\n                in2=${prefix_pe}_2.trim.fastq.gz \\\n                out=${prefix_pe}_1.flip.trim.fastq.gz \\\n                out2=${prefix_pe}_2.flip.trim.fastq.gz \\\n                rcomp=t\n        \n        hisat2 -p 32 \\\n               --very-sensitive \\\n               -x ${indices_path} \\\n               -1 ${prefix_pe}_1.flip.trim.fastq.gz \\\n               -2 ${prefix_pe}_2.flip.trim.fastq.gz \\\n                $rnastrandness \\\n               --pen-noncansplice 14 \\\n               --mp 1,0 \\\n               --sp 3,1 \\\n               --new-summary \\\n               > ${prefix_pe}.sam \\\n               2> ${prefix_pe}.hisat2_mapstats.txt                  \n        \"\"\"\n    } else if (params.singleEnd && params.flip) {\n        \"\"\"\n        echo ${name}        \n        \n        bbduk.sh -Xmx40g \\\n                  t=32 \\\n                  in=${reads} \\\n                  out=${prefix_se}.trim.fastq.gz \\\n                  ref=${bbmap_adapters} \\\n                  ktrim=r qtrim=r trimq=10 k=23 mink=11 hdist=1 \\\n                  maq=10 minlen=25 \\\n                  literal=AAAAAAAAAAAAAAAAAAAAAAA \\\n                  stats=${prefix_se}.trimstats.txt \\\n                  refstats=${prefix_se}.refstats.txt\n                  \n        reformat.sh -Xmx40g \\\n                t=32 \\\n                in=${prefix_se}.trim.fastq.gz \\\n                out=${prefix_se}.flip.trim.fastq.gz \\\n                rcomp=t\n\n        hisat2  -p 32 \\\n                --very-sensitive \\\n                $rnastrandness \\\n                --pen-noncansplice 14 \\\n                --mp 1,0 \\\n                --sp 3,1 \\\n                -x ${indices_path}\\\n                -U ${prefix_se}.flip.trim.fastq.gz \\\n                --new-summary \\\n                > ${prefix_se}.sam \\\n                2> ${prefix_se}.hisat2_mapstats.txt               \n        \"\"\"\n    } else if (!params.singleEnd && params.flipR2) {\n                \"\"\"\n        echo ${prefix_pe}\n\n        bbduk.sh -Xmx40g \\\n                t=32 \\\n                in=${reads[0]} \\\n                in2=${reads[1]} \\\n                out=${prefix_pe}_1.trim.fastq.gz \\\n                out2=${prefix_pe}_2.trim.fastq.gz \\\n                ref=${bbmap_adapters} \\\n                ktrim=r qtrim=r trimq=10 k=23 mink=11 hdist=1 \\\n                nullifybrokenquality=t \\\n                maq=10 minlen=25 \\\n                tpe tbo \\\n                literal=AAAAAAAAAAAAAAAAAAAAAAA \\\n                stats=${prefix_pe}.trimstats.txt \\\n                refstats=${prefix_pe}.refstats.txt\n                \n        reformat.sh -Xmx40g \\\n                t=32 \\\n                in=${prefix_pe}_1.trim.fastq.gz \\\n                in2=${prefix_pe}_2.trim.fastq.gz \\\n                out=${prefix_pe}_1.flip.trim.fastq.gz \\\n                out2=${prefix_pe}_2.flip.trim.fastq.gz \\\n                rcompmate=t\n\n        hisat2 -p 32 \\\n               --very-sensitive \\\n               -x ${indices_path} \\\n               -1 ${prefix_pe}_1.flip.trim.fastq.gz \\\n               -2 ${prefix_pe}_2.flip.trim.fastq.gz \\\n                $rnastrandness \\\n               --pen-noncansplice 14 \\\n               --mp 1,0 \\\n               --sp 3,1 \\\n               --new-summary \\\n               > ${prefix_pe}.sam \\\n               2> ${prefix_pe}.hisat2_mapstats.txt                   \n        \"\"\"\n    } else if (!params.singleEnd) {\n        \"\"\"\n        echo ${prefix_pe}\n\n        bbduk.sh -Xmx40g \\\n                  t=32 \\\n                  in=${reads[0]} \\\n                  in2=${reads[1]} \\\n                  out=${prefix_pe}_1.trim.fastq.gz \\\n                  out2=${prefix_pe}_2.trim.fastq.gz \\\n                  ref=${bbmap_adapters} \\\n                  ktrim=r qtrim=r trimq=10 k=23 mink=11 hdist=1 \\\n                  maq=10 minlen=25 \\\n                  tpe tbo \\\n                  literal=AAAAAAAAAAAAAAAAAAAAAAA \\\n                  stats=${prefix_pe}.trimstats.txt \\\n                  refstats=${prefix_pe}.refstats.txt\n                  \n        hisat2 -p 32 \\\n               --very-sensitive \\\n               -x ${indices_path} \\\n               -1 ${prefix_pe}_1.trim.fastq.gz \\\n               -2 ${prefix_pe}_2.trim.fastq.gz \\\n                $rnastrandness \\\n               --pen-noncansplice 14 \\\n               --mp 1,0 \\\n               --sp 3,1 \\\n               --new-summary \\\n               > ${prefix_pe}.sam \\\n               2> ${prefix_pe}.hisat2_mapstats.txt                              \n        \"\"\"\n    } else {\n        \"\"\"\n        echo ${prefix_se}\n\n        bbduk.sh -Xmx40g \\\n                  t=32 \\\n                  in=${reads} \\\n                  out=${prefix_se}.trim.fastq.gz \\\n                  ref=${bbmap_adapters} \\\n                  ktrim=r qtrim=r trimq=10 k=23 mink=11 hdist=1 \\\n                  maq=10 minlen=25 \\\n                  literal=AAAAAAAAAAAAAAAAAAAAAAA \\\n                  stats=${prefix_se}.trimstats.txt \\\n                  refstats=${prefix_se}.refstats.txt                   \n                  \n        hisat2  -p 32 \\\n                --very-sensitive \\\n                $rnastrandness \\\n                --pen-noncansplice 14 \\\n                --mp 1,0 \\\n                --sp 3,1 \\\n                -x ${indices_path} \\\n                -U ${prefix_se}.trim.fastq.gz \\\n                --new-summary \\\n                > ${prefix_se}.sam \\\n                2> ${prefix_se}.hisat2_mapstats.txt                  \n        \"\"\"\n    }",
        "nb_lignes_script": 180,
        "language_script": "bash",
        "tools": [
            "TPES",
            "HISAT2"
        ],
        "tools_url": [
            "https://bio.tools/TPES",
            "https://bio.tools/hisat2"
        ],
        "tools_dico": [
            {
                "name": "TPES",
                "uri": "https://bio.tools/TPES",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "Genetic variation"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0199",
                            "term": "DNA variation"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Tumor Purity Estimation from SNVs.",
                "homepage": "https://bitbucket.org/l0ka/tpes.git"
            },
            {
                "name": "HISAT2",
                "uri": "https://bio.tools/hisat2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Alignment program for mapping next-generation sequencing reads (both DNA and RNA) to a population of human genomes (as well as to a single reference genome).",
                "homepage": "https://ccb.jhu.edu/software/hisat2/index.shtml"
            }
        ],
        "inputs": [
            "hisat2_indices",
            "hisat2_indices",
            "fastq_reads_trim",
            "fastq_reads_trim_sra"
        ],
        "nb_inputs": 4,
        "outputs": [
            "trimmed_reads_fastqc",
            "trim_stats",
            "hisat2_sam",
            "hisat2_mapstats"
        ],
        "nb_outputs": 4,
        "name_workflow": "Dowell-Lab__RNAseq-Flow",
        "directive": [
            "validExitStatus 0",
            "tag \"$name\"",
            "cpus 32",
            "time '2h'",
            "memory '40 GB'",
            "publishDir \"${params.outdir}/qc/trimstats\", mode: 'copy', pattern: \"*.{refstats,trimstats}.txt\"",
            "publishDir \"${params.outdir}/qc/hisat2_mapstats\", mode: 'copy', pattern: \"*hisat2_mapstats.txt\" if (params.saveTrim || params.saveAllfq) { publishDir \"${params.outdir}/fastq_trimmed\", mode: 'copy', pattern: \"*.fastq.gz\" }"
        ],
        "when": "!params.noTrim",
        "stub": ""
    },
    "fastQC_trim": {
        "name_process": "fastQC_trim",
        "string_process": "\nprocess fastQC_trim {\n    validExitStatus 0,1\n    tag \"$name\"\n    memory '4 GB'\n    publishDir \"${params.outdir}\" , mode: 'copy',\n    saveAs: {filename ->\n             if (filename.indexOf(\"zip\") > 0)   \"qc/fastqc/zips/$filename\"\n        else if (filename.indexOf(\"html\") > 0)  \"qc/fastqc/$filename\"\n        else null            \n    }\n    \n    when:\n    !params.skipFastQC && !params.skipAllQC && !noTrim\n\n    input:\n    set val(name), file(trimmed_reads) from trimmed_reads_fastqc\n\n    output:\n    file \"*_fastqc.{zip,html}\" into trimmed_fastqc_results\n\n    script:\n    \"\"\"\n    echo ${name}\n    \n    fastqc ${trimmed_reads}\n    \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "    \"\"\"\n    echo ${name}\n    \n    fastqc ${trimmed_reads}\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "trimmed_reads_fastqc"
        ],
        "nb_inputs": 1,
        "outputs": [
            "trimmed_fastqc_results"
        ],
        "nb_outputs": 1,
        "name_workflow": "Dowell-Lab__RNAseq-Flow",
        "directive": [
            "validExitStatus 0,1",
            "tag \"$name\"",
            "memory '4 GB'",
            "publishDir \"${params.outdir}\" , mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\"zip\") > 0) \"qc/fastqc/zips/$filename\" else if (filename.indexOf(\"html\") > 0) \"qc/fastqc/$filename\" else null }"
        ],
        "when": "!params.skipFastQC && !params.skipAllQC && !noTrim",
        "stub": ""
    },
    "hisat2": {
        "name_process": "hisat2",
        "string_process": " process hisat2 {\n        tag \"$name\"\n        validExitStatus 0\n        cpus 32\n        memory '40 GB'\n        time '2h'\n        publishDir \"${params.outdir}/qc/hisat2_mapstats\", mode: 'copy', pattern: \"*.txt\"\n    \n        input:\n        file(indices) from hisat2_indices\n        val(indices_path) from hisat2_indices\n        set val(name), file(reads) from fastq_reads_hisat2_notrim_sra.mix(fastq_reads_hisat2_notrim)\n    \n        output:\n        set val(name), file(\"*.sam\") into hisat2_sam\n        file(\"*.txt\") into hisat2_mapstats\n    \n        script:\n        prefix_pe = trimmed_reads[0].toString() - ~/(_1\\.)?(_R1)?(flip)?(trim)?(\\.flip)?(\\.fq)?(fq)?(\\.fastq)?(fastq)?(\\.gz)?$/\n        prefix_se = trimmed_reads[0].toString() - ~/(\\.flip)?(\\.fq)?(\\.fastq)?(\\.gz)?$/\n        \n        def rnastrandness = ''\n        if (params.forwardStranded && !params.unStranded){\n            rnastrandness = params.singleEnd ? '--rna-strandness F' : '--rna-strandness FR'\n        } else if (params.reverseStranded && !params.unStranded){\n            rnastrandness = params.singleEnd ? '--rna-strandness R' : '--rna-strandness RF'\n        }\n        \n        if (!params.singleEnd) {\n            \"\"\"\n            echo ${prefix_pe}\n        \n            hisat2 -p 32 \\\n                   --very-sensitive \\\n                   $rnastrandness \\\n                   --pen-noncansplice 14 \\\n                   --mp 1,0 \\\n                   --sp 3,1 \\\n                   -x ${indices_path} \\\n                   -1 ${reads[0]} \\\n                   -2 ${reads[1]} \\\n                   --new-summary \\\n                   > ${prefix_pe}.sam \\\n                   2> ${prefix_pe}.hisat2_mapstats.txt                \n            \"\"\"\n        }\n        else {\n            \"\"\"\n            echo ${prefix_se}\n        \n            hisat2  -p 32 \\\n                   --very-sensitive \\\n                   $rnastrandness \\\n                   --pen-noncansplice 14 \\\n                   --mp 1,0 \\\n                   --sp 3,1 \\\n                   -x ${indices_path} \\\n                   -U ${reads} \\\n                   --new-summary \\\n                   > ${prefix_se}.sam \\\n                   2> ${prefix_se}.hisat2_mapstats.txt                \n            \"\"\"\n        }\n    }",
        "nb_lignes_process": 62,
        "string_script": "        prefix_pe = trimmed_reads[0].toString() - ~/(_1\\.)?(_R1)?(flip)?(trim)?(\\.flip)?(\\.fq)?(fq)?(\\.fastq)?(fastq)?(\\.gz)?$/\n        prefix_se = trimmed_reads[0].toString() - ~/(\\.flip)?(\\.fq)?(\\.fastq)?(\\.gz)?$/\n        \n        def rnastrandness = ''\n        if (params.forwardStranded && !params.unStranded){\n            rnastrandness = params.singleEnd ? '--rna-strandness F' : '--rna-strandness FR'\n        } else if (params.reverseStranded && !params.unStranded){\n            rnastrandness = params.singleEnd ? '--rna-strandness R' : '--rna-strandness RF'\n        }\n        \n        if (!params.singleEnd) {\n            \"\"\"\n            echo ${prefix_pe}\n        \n            hisat2 -p 32 \\\n                   --very-sensitive \\\n                   $rnastrandness \\\n                   --pen-noncansplice 14 \\\n                   --mp 1,0 \\\n                   --sp 3,1 \\\n                   -x ${indices_path} \\\n                   -1 ${reads[0]} \\\n                   -2 ${reads[1]} \\\n                   --new-summary \\\n                   > ${prefix_pe}.sam \\\n                   2> ${prefix_pe}.hisat2_mapstats.txt                \n            \"\"\"\n        }\n        else {\n            \"\"\"\n            echo ${prefix_se}\n        \n            hisat2  -p 32 \\\n                   --very-sensitive \\\n                   $rnastrandness \\\n                   --pen-noncansplice 14 \\\n                   --mp 1,0 \\\n                   --sp 3,1 \\\n                   -x ${indices_path} \\\n                   -U ${reads} \\\n                   --new-summary \\\n                   > ${prefix_se}.sam \\\n                   2> ${prefix_se}.hisat2_mapstats.txt                \n            \"\"\"\n        }",
        "nb_lignes_script": 44,
        "language_script": "bash",
        "tools": [
            "HISAT2"
        ],
        "tools_url": [
            "https://bio.tools/hisat2"
        ],
        "tools_dico": [
            {
                "name": "HISAT2",
                "uri": "https://bio.tools/hisat2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Alignment program for mapping next-generation sequencing reads (both DNA and RNA) to a population of human genomes (as well as to a single reference genome).",
                "homepage": "https://ccb.jhu.edu/software/hisat2/index.shtml"
            }
        ],
        "inputs": [
            "hisat2_indices",
            "hisat2_indices",
            "fastq_reads_hisat2_notrim_sra",
            "fastq_reads_hisat2_notrim"
        ],
        "nb_inputs": 4,
        "outputs": [
            "hisat2_sam",
            "hisat2_mapstats"
        ],
        "nb_outputs": 2,
        "name_workflow": "Dowell-Lab__RNAseq-Flow",
        "directive": [
            "tag \"$name\"",
            "validExitStatus 0",
            "cpus 32",
            "memory '40 GB'",
            "time '2h'",
            "publishDir \"${params.outdir}/qc/hisat2_mapstats\", mode: 'copy', pattern: \"*.txt\""
        ],
        "when": "",
        "stub": ""
    },
    "samtools": {
        "name_process": "samtools",
        "string_process": "\nprocess samtools {\n    tag \"$name\"\n    memory '40 GB'\n    cpus 16\n    publishDir \"${params.outdir}\" , mode: 'copy',\n    saveAs: {filename ->\n             if (filename.indexOf(\"sorted.bam\") > 0)                       \"mapped/bams/$filename\"\n        else if (filename.indexOf(\"sorted.bam.bai\") > 0)                    \"mapped/bams/$filename\"\n        else if (filename.indexOf(\"flagstat\") > 0)                          \"qc/mapstats/$filename\"\n        else if (filename.indexOf(\"millionsmapped\") > 0)                    \"qc/mapstats/$filename\"\n        else if (filename.indexOf(\"sorted.cram\") > 0)                       \"mapped/crams/$filename\"\n        else if (filename.indexOf(\"sorted.cram.crai\") > 0)                  \"mapped/crams/$filename\"\n        else null            \n    }\n\n    input:\n    set val(name), file(mapped_sam) from hisat2_sam\n\n    output:\n    set val(name), file(\"${name}.sorted.bam\") into sorted_bam_ch\n    set val(name), file(\"${name}.sorted.bam.bai\") into sorted_bam_indices_ch\n    set val(name), file(\"${name}.flagstat\") into bam_flagstat\n    set val(name), file(\"${name}.millionsmapped\") into bam_milmapped_bedgraph\n    set val(name), file(\"${name}.sorted.cram\") into cram\n    set val(name), file(\"${name}.sorted.cram.crai\") into cram_index\n\n    script:\n    \"\"\"\n    samtools view -@ 16 -bS -o ${name}.bam ${mapped_sam}\n    samtools sort -@ 16 ${name}.bam > ${name}.sorted.bam\n    samtools flagstat ${name}.sorted.bam > ${name}.flagstat\n    samtools view -@ 16 -F 0x904 -c ${name}.sorted.bam > ${name}.millionsmapped\n    samtools index ${name}.sorted.bam ${name}.sorted.bam.bai\n    samtools view -@ 16 -C -T ${genome} -o ${name}.cram ${name}.sorted.bam\n    samtools sort -@ 16 -O cram ${name}.cram > ${name}.sorted.cram\n    samtools index -c ${name}.sorted.cram ${name}.sorted.cram.crai\n    \"\"\"\n}",
        "nb_lignes_process": 37,
        "string_script": "    \"\"\"\n    samtools view -@ 16 -bS -o ${name}.bam ${mapped_sam}\n    samtools sort -@ 16 ${name}.bam > ${name}.sorted.bam\n    samtools flagstat ${name}.sorted.bam > ${name}.flagstat\n    samtools view -@ 16 -F 0x904 -c ${name}.sorted.bam > ${name}.millionsmapped\n    samtools index ${name}.sorted.bam ${name}.sorted.bam.bai\n    samtools view -@ 16 -C -T ${genome} -o ${name}.cram ${name}.sorted.bam\n    samtools sort -@ 16 -O cram ${name}.cram > ${name}.sorted.cram\n    samtools index -c ${name}.sorted.cram ${name}.sorted.cram.crai\n    \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "hisat2_sam"
        ],
        "nb_inputs": 1,
        "outputs": [
            "sorted_bam_ch",
            "sorted_bam_indices_ch",
            "bam_flagstat",
            "bam_milmapped_bedgraph",
            "cram",
            "cram_index"
        ],
        "nb_outputs": 6,
        "name_workflow": "Dowell-Lab__RNAseq-Flow",
        "directive": [
            "tag \"$name\"",
            "memory '40 GB'",
            "cpus 16",
            "publishDir \"${params.outdir}\" , mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\"sorted.bam\") > 0) \"mapped/bams/$filename\" else if (filename.indexOf(\"sorted.bam.bai\") > 0) \"mapped/bams/$filename\" else if (filename.indexOf(\"flagstat\") > 0) \"qc/mapstats/$filename\" else if (filename.indexOf(\"millionsmapped\") > 0) \"qc/mapstats/$filename\" else if (filename.indexOf(\"sorted.cram\") > 0) \"mapped/crams/$filename\" else if (filename.indexOf(\"sorted.cram.crai\") > 0) \"mapped/crams/$filename\" else null }"
        ],
        "when": "",
        "stub": ""
    },
    "preseq": {
        "name_process": "preseq",
        "string_process": "\nprocess preseq {\n    tag \"$name\"\n    memory '20 GB'\n    time '8h'\n    errorStrategy 'ignore'\n    publishDir \"${params.outdir}/qc/preseq/\", mode: 'copy', pattern: \"*.txt\"\n\n    input:\n    set val(name), file(bam_file) from sorted_bams_for_preseq\n    file(bam_indices) from sorted_bam_indices_for_preseq\n\n    output:\n    file(\"*.txt\") into preseq_results\n\n    script:\n    \"\"\"\n    preseq c_curve -B -o ${name}.c_curve.txt \\\n           ${bam_file}\n\n    preseq lc_extrap -B -o ${name}.lc_extrap.txt \\\n           ${bam_file}\n    \"\"\"\n }",
        "nb_lignes_process": 22,
        "string_script": "    \"\"\"\n    preseq c_curve -B -o ${name}.c_curve.txt \\\n           ${bam_file}\n\n    preseq lc_extrap -B -o ${name}.lc_extrap.txt \\\n           ${bam_file}\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "preseq"
        ],
        "tools_url": [
            "https://bio.tools/preseq"
        ],
        "tools_dico": [
            {
                "name": "preseq",
                "uri": "https://bio.tools/preseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2423",
                                    "term": "Prediction and recognition"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This package is aimed at predicting and number of distinct reads and how many will be expected from additional sequencing using an initial sequencing experiment. The estimates can then be used to examine the utility of further sequencing, optimize the sequencing depth, or to screen multiple libraries to avoid low complexity samples.",
                "homepage": "http://smithlabresearch.org/software/preseq/"
            }
        ],
        "inputs": [
            "sorted_bams_for_preseq",
            "sorted_bam_indices_for_preseq"
        ],
        "nb_inputs": 2,
        "outputs": [
            "preseq_results"
        ],
        "nb_outputs": 1,
        "name_workflow": "Dowell-Lab__RNAseq-Flow",
        "directive": [
            "tag \"$name\"",
            "memory '20 GB'",
            "time '8h'",
            "errorStrategy 'ignore'",
            "publishDir \"${params.outdir}/qc/preseq/\", mode: 'copy', pattern: \"*.txt\""
        ],
        "when": "",
        "stub": ""
    },
    "rseqc_qc": {
        "name_process": "rseqc_qc",
        "string_process": "\nprocess rseqc_qc {\n    tag \"$name\"\n    time '8h'\n    validExitStatus 0,143\n    memory '40 GB'\n    publishDir \"${params.outdir}/qc/rseqc\" , mode: 'copy',\n        saveAs: {filename ->\n             if (filename.indexOf(\"infer_experiment.txt\") > 0)                       \"infer_experiment/$filename\"\n        else if (filename.indexOf(\"read_distribution.txt\") > 0)                      \"read_distribution/$filename\"\n        else if (filename.indexOf(\"read_duplication.DupRate_plot.pdf\") > 0)          \"read_duplication/$filename\"\n        else if (filename.indexOf(\"read_duplication.DupRate_plot.r\") > 0)            \"read_duplication/rscripts/$filename\"\n        else if (filename.indexOf(\"read_duplication.pos.DupRate.xls\") > 0)           \"read_duplication/dup_pos/$filename\"\n        else if (filename.indexOf(\"read_duplication.seq.DupRate.xls\") > 0)           \"read_duplication/dup_seq/$filename\"\n        else if (filename.indexOf(\"junction_annotation.junction.xls\") > 0)           \"junction_annotation/anno/$filename\"\n        else if (filename.indexOf(\"junction_annotation.junction_plot.r\") > 0)        \"junction_annotation/rscripts/$filename\"\n        else if (filename.indexOf(\"junction_annotation.splice_events.pdf\") > 0)      \"junction_annotation/$filename\"\n        else if (filename.indexOf(\"junction_annotation.splice_junction.pdf\") > 0)    \"junction_annotation/$filename\"\n        else if (filename.indexOf(\"bam_stat.txt\") > 0)                               \"bam_stat/$filename\"\n        else if (filename.indexOf(\"junction_saturation.junctionSaturation_plot.r\") > 0)                                                                                                                            \"junction_saturation/rscripts/$filename\"\n        else if (filename.indexOf(\"junction_saturation.junctionSaturation_plot.pdf\") > 0)                                                                                                                          \"junction_saturation/$filename\"\n        else filename\n        }\n    \n    when:\n    !params.skipRSeQC\n\n    input:\n    set val(name), file(bam_file) from sorted_bams_for_rseqc\n    file(bam_indices) from sorted_bam_indices_for_rseqc\n\n    output:\n    file \"*.{txt,pdf,r,xls}\" into rseqc_results\n\n    script:\n    \"\"\"\n    \n    export PATH=~/.local/bin:$PATH\n    \n    read_distribution.py -i ${bam_file} \\\n                         -r ${genome_refseq} \\\n                         > ${name}.read_distribution.txt\n\n    read_duplication.py -i ${bam_file} \\\n                        -o ${name}.read_duplication\n\n    infer_experiment.py -i ${bam_file} \\\n                        -r ${genome_refseq} \\\n                        > ${name}.infer_experiment.txt\n                        \n    bam_stat.py -i ${bam_file} \\\n                        > ${name}.bam_stat.txt\n                        \n    junction_annotation.py -i ${bam_file} \\\n                           -o ${name}.junction_annotation \\\n                           -r ${genome_refseq}\n                           \n    junction_saturation.py -i ${bam_file} \\\n                           -o ${name}.junction_saturation \\\n                           -r ${genome_refseq}                       \n    \"\"\"\n }",
        "nb_lignes_process": 60,
        "string_script": "    \"\"\"\n    \n    export PATH=~/.local/bin:$PATH\n    \n    read_distribution.py -i ${bam_file} \\\n                         -r ${genome_refseq} \\\n                         > ${name}.read_distribution.txt\n\n    read_duplication.py -i ${bam_file} \\\n                        -o ${name}.read_duplication\n\n    infer_experiment.py -i ${bam_file} \\\n                        -r ${genome_refseq} \\\n                        > ${name}.infer_experiment.txt\n                        \n    bam_stat.py -i ${bam_file} \\\n                        > ${name}.bam_stat.txt\n                        \n    junction_annotation.py -i ${bam_file} \\\n                           -o ${name}.junction_annotation \\\n                           -r ${genome_refseq}\n                           \n    junction_saturation.py -i ${bam_file} \\\n                           -o ${name}.junction_saturation \\\n                           -r ${genome_refseq}                       \n    \"\"\"",
        "nb_lignes_script": 25,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sorted_bams_for_rseqc",
            "sorted_bam_indices_for_rseqc"
        ],
        "nb_inputs": 2,
        "outputs": [
            "rseqc_results"
        ],
        "nb_outputs": 1,
        "name_workflow": "Dowell-Lab__RNAseq-Flow",
        "directive": [
            "tag \"$name\"",
            "time '8h'",
            "validExitStatus 0,143",
            "memory '40 GB'",
            "publishDir \"${params.outdir}/qc/rseqc\" , mode: 'copy' , saveAs: {filename -> if (filename.indexOf(\"infer_experiment.txt\") > 0) \"infer_experiment/$filename\" else if (filename.indexOf(\"read_distribution.txt\") > 0) \"read_distribution/$filename\" else if (filename.indexOf(\"read_duplication.DupRate_plot.pdf\") > 0) \"read_duplication/$filename\" else if (filename.indexOf(\"read_duplication.DupRate_plot.r\") > 0) \"read_duplication/rscripts/$filename\" else if (filename.indexOf(\"read_duplication.pos.DupRate.xls\") > 0) \"read_duplication/dup_pos/$filename\" else if (filename.indexOf(\"read_duplication.seq.DupRate.xls\") > 0) \"read_duplication/dup_seq/$filename\" else if (filename.indexOf(\"junction_annotation.junction.xls\") > 0) \"junction_annotation/anno/$filename\" else if (filename.indexOf(\"junction_annotation.junction_plot.r\") > 0) \"junction_annotation/rscripts/$filename\" else if (filename.indexOf(\"junction_annotation.splice_events.pdf\") > 0) \"junction_annotation/$filename\" else if (filename.indexOf(\"junction_annotation.splice_junction.pdf\") > 0) \"junction_annotation/$filename\" else if (filename.indexOf(\"bam_stat.txt\") > 0) \"bam_stat/$filename\" else if (filename.indexOf(\"junction_saturation.junctionSaturation_plot.r\") > 0) \"junction_saturation/rscripts/$filename\" else if (filename.indexOf(\"junction_saturation.junctionSaturation_plot.pdf\") > 0) \"junction_saturation/$filename\" else filename }"
        ],
        "when": "!params.skipRSeQC",
        "stub": ""
    },
    "rseqc_count": {
        "name_process": "rseqc_count",
        "string_process": "\nprocess rseqc_count {\n    tag \"$name\"\n    time '8h'\n    validExitStatus 0,143\n    memory '40 GB'\n    publishDir \"${params.outdir}/rseqc_counts\" , mode: 'copy', pattern: \"*FPKM.xls\"\n    \n    when:\n    params.count\n\n    input:\n    set val(name), file(bam_file) from sorted_bams_for_rseqc_count\n    file(bam_indices) from sorted_bam_indices_for_rseqc_count\n\n    output:\n    file \"*FPKM.xls\" into rseqc_counts\n\n    script:\n    \"\"\"\n    export PATH=~/.local/bin:$PATH\n    \n    FPKM_count.py -i ${bam_file} \\\n                           -o ${name}.counts \\\n                           -r ${genome_refseq} \\\n                           -e\n    \"\"\"\n }",
        "nb_lignes_process": 26,
        "string_script": "    \"\"\"\n    export PATH=~/.local/bin:$PATH\n    \n    FPKM_count.py -i ${bam_file} \\\n                           -o ${name}.counts \\\n                           -r ${genome_refseq} \\\n                           -e\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sorted_bams_for_rseqc_count",
            "sorted_bam_indices_for_rseqc_count"
        ],
        "nb_inputs": 2,
        "outputs": [
            "rseqc_counts"
        ],
        "nb_outputs": 1,
        "name_workflow": "Dowell-Lab__RNAseq-Flow",
        "directive": [
            "tag \"$name\"",
            "time '8h'",
            "validExitStatus 0,143",
            "memory '40 GB'",
            "publishDir \"${params.outdir}/rseqc_counts\" , mode: 'copy', pattern: \"*FPKM.xls\""
        ],
        "when": "params.count",
        "stub": ""
    },
    "pileup": {
        "name_process": "pileup",
        "string_process": "\nprocess pileup {\n    tag \"$name\"\n    memory '50 GB'\n    publishDir \"${params.outdir}/qc/pileup\", mode: 'copy', pattern: \"*.txt\"\n\n    input:\n    set val(name), file(bam_file) from sorted_bams_for_pileup\n    file(bam_indices) from sorted_bam_indicies_for_pileup\n\n    output:\n    file(\"*.txt\") into pileup_results\n\n    script:\n    \"\"\"\n\n    pileup.sh -Xmx20g \\\n              in=${bam_file} \\\n              out=${name}.coverage.stats.txt \\\n              hist=${name}.coverage.hist.txt\n    \"\"\"\n }",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n\n    pileup.sh -Xmx20g \\\n              in=${bam_file} \\\n              out=${name}.coverage.stats.txt \\\n              hist=${name}.coverage.hist.txt\n    \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "sorted_bams_for_pileup",
            "sorted_bam_indicies_for_pileup"
        ],
        "nb_inputs": 2,
        "outputs": [
            "pileup_results"
        ],
        "nb_outputs": 1,
        "name_workflow": "Dowell-Lab__RNAseq-Flow",
        "directive": [
            "tag \"$name\"",
            "memory '50 GB'",
            "publishDir \"${params.outdir}/qc/pileup\", mode: 'copy', pattern: \"*.txt\""
        ],
        "when": "",
        "stub": ""
    },
    "bedgraphs": {
        "name_process": "bedgraphs",
        "string_process": "\nprocess bedgraphs {\n    validExitStatus 0,143\n    tag \"$name\"\n    memory '80 GB'\n    time '4h'\n    publishDir \"${params.outdir}/mapped/bedgraphs\", mode: 'copy', pattern: \"${name}.bedGraph\"\n\n    input:\n    set val(name), file(bam_file) from sorted_bams_for_bedtools_bedgraph\n    set val(name), file(bam_indices) from sorted_bam_indices_for_bedtools_bedgraph\n    set val(name), file(millions_mapped) from bam_milmapped_bedgraph\n\n    output:\n    set val(name), file(\"*pos.bedGraph\") into pos_non_normalized_bedgraphs\n    set val(name), file(\"*neg.bedGraph\") into neg_non_normalized_bedgraphs\n    set val(name), file(\"${name}.bedGraph\") into non_normalized_bedgraphs\n    set val(name), file(\"${name}.rcc.bedGraph\") into bedgraph_tdf\n    set val(name), file(\"${name}.pos.rcc.bedGraph\") into bedgraph_bigwig_pos\n    set val(name), file(\"${name}.neg.rcc.bedGraph\") into bedgraph_bigwig_neg\n\n    script:\n    if (params.singleEnd) {\n    \"\"\"    \n    genomeCoverageBed \\\n        -bg \\\n        -split \\\n        -strand + \\\n        -g ${chrom_sizes} \\\n        -ibam ${bam_file} \\\n        > ${name}.pos.bedGraph\n    genomeCoverageBed \\\n        -bg \\\n        -split \\\n        -strand - \\\n        -g ${chrom_sizes} \\\n        -ibam ${bam_file} \\\n        | awk 'BEGIN{FS=OFS=\"\\t\"} {\\$4=-\\$4}1' \\\n        > ${name}.neg.bedGraph\n\n    cat ${name}.pos.bedGraph \\\n        ${name}.neg.bedGraph \\\n        > ${name}.unsorted.bedGraph\n        \n    sortBed \\\n        -i ${name}.unsorted.bedGraph \\\n        > ${name}.bedGraph\n\n    python ${params.rcc} \\\n        ${name}.bedGraph \\\n        ${millions_mapped} \\\n        ${name}.rcc.bedGraph\n        \n    python ${params.rcc} \\\n        ${name}.pos.bedGraph \\\n        ${millions_mapped} \\\n        ${name}.unsorted.pos.rcc.bedGraph\n    sortBed -i ${name}.unsorted.pos.rcc.bedGraph > ${name}.pos.rcc.bedGraph\n\n    python ${params.rcc} \\\n        ${name}.neg.bedGraph \\\n        ${millions_mapped} \\\n        ${name}.unsorted.neg.rcc.bedGraph\n    sortBed -i ${name}.unsorted.neg.rcc.bedGraph > ${name}.neg.rcc.bedGraph\n    \"\"\"\n    } else {\n    \"\"\"   \n    samtools view \\\n        -h -b -f 0x0040 \\\n        ${bam_file} \\\n        > ${name}.first_pair.bam\n        \n    samtools view \\\n        -h -b -f 0x0080 \\\n        ${bam_file} \\\n        > ${name}.second_pair.bam\n        \n    genomeCoverageBed \\\n        -bg \\\n        -split \\\n        -strand - \\\n        -g ${chrom_sizes} \\\n        -ibam ${name}.first_pair.bam \\\n        | sortBed \\\n        > ${name}.first_pair.pos.bedGraph\n    genomeCoverageBed \\\n        -bg \\\n        -split \\\n        -strand + \\\n        -g ${chrom_sizes} \\\n        -ibam ${name}.first_pair.bam \\\n        | sortBed \\\n        | awk 'BEGIN{FS=OFS=\"\\t\"} {\\$4=-\\$4}1' \\\n        > ${name}.first_pair.neg.bedGraph\n                     \n    genomeCoverageBed \\\n        -bg \\\n        -split \\\n        -strand + \\\n        -g ${chrom_sizes} \\\n        -ibam ${name}.second_pair.bam \\\n        | sortBed \\\n        > ${name}.second_pair.pos.bedGraph\n    genomeCoverageBed \\\n        -bg \\\n        -split \\\n        -strand - \\\n        -g ${chrom_sizes} \\\n        -ibam ${name}.second_pair.bam \\\n        | awk 'BEGIN{FS=OFS=\"\\t\"} {\\$4=-\\$4}1' \\\n        | sortBed \\\n        > ${name}.second_pair.neg.bedGraph\n                     \n    unionBedGraphs \\\n        -i ${name}.first_pair.pos.bedGraph ${name}.second_pair.pos.bedGraph \\\n        | awk -F '\\t' {'print \\$1\"\\t\"\\$2\"\\t\"\\$3\"\\t\"(\\$4+\\$5)'} \\\n        > ${name}.pos.bedGraph \n        \n    unionBedGraphs \\\n        -i ${name}.first_pair.neg.bedGraph ${name}.second_pair.neg.bedGraph \\\n        | awk -F '\\t' {'print \\$1\"\\t\"\\$2\"\\t\"\\$3\"\\t\"(\\$4+\\$5)'} \\\n        > ${name}.neg.bedGraph \n    \n    cat ${name}.pos.bedGraph \\\n        ${name}.neg.bedGraph \\\n        > ${name}.unsorted.bedGraph\n        \n    sortBed \\\n        -i ${name}.unsorted.bedGraph \\\n        > ${name}.bedGraph\n\n    python ${params.rcc} \\\n        ${name}.bedGraph \\\n        ${millions_mapped} \\\n        ${name}.rcc.bedGraph\n        \n    python ${params.rcc} \\\n        ${name}.pos.bedGraph \\\n        ${millions_mapped} \\\n        ${name}.unsorted.pos.rcc.bedGraph\n    sortBed -i ${name}.unsorted.pos.rcc.bedGraph > ${name}.pos.rcc.bedGraph\n\n    python ${params.rcc} \\\n        ${name}.neg.bedGraph \\\n        ${millions_mapped} \\\n        ${name}.unsorted.neg.rcc.bedGraph\n    sortBed -i ${name}.unsorted.neg.rcc.bedGraph > ${name}.neg.rcc.bedGraph     \n    \"\"\"\n    }\n }",
        "nb_lignes_process": 148,
        "string_script": "    if (params.singleEnd) {\n    \"\"\"    \n    genomeCoverageBed \\\n        -bg \\\n        -split \\\n        -strand + \\\n        -g ${chrom_sizes} \\\n        -ibam ${bam_file} \\\n        > ${name}.pos.bedGraph\n    genomeCoverageBed \\\n        -bg \\\n        -split \\\n        -strand - \\\n        -g ${chrom_sizes} \\\n        -ibam ${bam_file} \\\n        | awk 'BEGIN{FS=OFS=\"\\t\"} {\\$4=-\\$4}1' \\\n        > ${name}.neg.bedGraph\n\n    cat ${name}.pos.bedGraph \\\n        ${name}.neg.bedGraph \\\n        > ${name}.unsorted.bedGraph\n        \n    sortBed \\\n        -i ${name}.unsorted.bedGraph \\\n        > ${name}.bedGraph\n\n    python ${params.rcc} \\\n        ${name}.bedGraph \\\n        ${millions_mapped} \\\n        ${name}.rcc.bedGraph\n        \n    python ${params.rcc} \\\n        ${name}.pos.bedGraph \\\n        ${millions_mapped} \\\n        ${name}.unsorted.pos.rcc.bedGraph\n    sortBed -i ${name}.unsorted.pos.rcc.bedGraph > ${name}.pos.rcc.bedGraph\n\n    python ${params.rcc} \\\n        ${name}.neg.bedGraph \\\n        ${millions_mapped} \\\n        ${name}.unsorted.neg.rcc.bedGraph\n    sortBed -i ${name}.unsorted.neg.rcc.bedGraph > ${name}.neg.rcc.bedGraph\n    \"\"\"\n    } else {\n    \"\"\"   \n    samtools view \\\n        -h -b -f 0x0040 \\\n        ${bam_file} \\\n        > ${name}.first_pair.bam\n        \n    samtools view \\\n        -h -b -f 0x0080 \\\n        ${bam_file} \\\n        > ${name}.second_pair.bam\n        \n    genomeCoverageBed \\\n        -bg \\\n        -split \\\n        -strand - \\\n        -g ${chrom_sizes} \\\n        -ibam ${name}.first_pair.bam \\\n        | sortBed \\\n        > ${name}.first_pair.pos.bedGraph\n    genomeCoverageBed \\\n        -bg \\\n        -split \\\n        -strand + \\\n        -g ${chrom_sizes} \\\n        -ibam ${name}.first_pair.bam \\\n        | sortBed \\\n        | awk 'BEGIN{FS=OFS=\"\\t\"} {\\$4=-\\$4}1' \\\n        > ${name}.first_pair.neg.bedGraph\n                     \n    genomeCoverageBed \\\n        -bg \\\n        -split \\\n        -strand + \\\n        -g ${chrom_sizes} \\\n        -ibam ${name}.second_pair.bam \\\n        | sortBed \\\n        > ${name}.second_pair.pos.bedGraph\n    genomeCoverageBed \\\n        -bg \\\n        -split \\\n        -strand - \\\n        -g ${chrom_sizes} \\\n        -ibam ${name}.second_pair.bam \\\n        | awk 'BEGIN{FS=OFS=\"\\t\"} {\\$4=-\\$4}1' \\\n        | sortBed \\\n        > ${name}.second_pair.neg.bedGraph\n                     \n    unionBedGraphs \\\n        -i ${name}.first_pair.pos.bedGraph ${name}.second_pair.pos.bedGraph \\\n        | awk -F '\\t' {'print \\$1\"\\t\"\\$2\"\\t\"\\$3\"\\t\"(\\$4+\\$5)'} \\\n        > ${name}.pos.bedGraph \n        \n    unionBedGraphs \\\n        -i ${name}.first_pair.neg.bedGraph ${name}.second_pair.neg.bedGraph \\\n        | awk -F '\\t' {'print \\$1\"\\t\"\\$2\"\\t\"\\$3\"\\t\"(\\$4+\\$5)'} \\\n        > ${name}.neg.bedGraph \n    \n    cat ${name}.pos.bedGraph \\\n        ${name}.neg.bedGraph \\\n        > ${name}.unsorted.bedGraph\n        \n    sortBed \\\n        -i ${name}.unsorted.bedGraph \\\n        > ${name}.bedGraph\n\n    python ${params.rcc} \\\n        ${name}.bedGraph \\\n        ${millions_mapped} \\\n        ${name}.rcc.bedGraph\n        \n    python ${params.rcc} \\\n        ${name}.pos.bedGraph \\\n        ${millions_mapped} \\\n        ${name}.unsorted.pos.rcc.bedGraph\n    sortBed -i ${name}.unsorted.pos.rcc.bedGraph > ${name}.pos.rcc.bedGraph\n\n    python ${params.rcc} \\\n        ${name}.neg.bedGraph \\\n        ${millions_mapped} \\\n        ${name}.unsorted.neg.rcc.bedGraph\n    sortBed -i ${name}.unsorted.neg.rcc.bedGraph > ${name}.neg.rcc.bedGraph     \n    \"\"\"\n    }",
        "nb_lignes_script": 126,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "sorted_bams_for_bedtools_bedgraph",
            "sorted_bam_indices_for_bedtools_bedgraph",
            "bam_milmapped_bedgraph"
        ],
        "nb_inputs": 3,
        "outputs": [
            "pos_non_normalized_bedgraphs",
            "neg_non_normalized_bedgraphs",
            "non_normalized_bedgraphs",
            "bedgraph_tdf",
            "bedgraph_bigwig_pos",
            "bedgraph_bigwig_neg"
        ],
        "nb_outputs": 6,
        "name_workflow": "Dowell-Lab__RNAseq-Flow",
        "directive": [
            "validExitStatus 0,143",
            "tag \"$name\"",
            "memory '80 GB'",
            "time '4h'",
            "publishDir \"${params.outdir}/mapped/bedgraphs\", mode: 'copy', pattern: \"${name}.bedGraph\""
        ],
        "when": "",
        "stub": ""
    },
    "normalized_bigwigs": {
        "name_process": "normalized_bigwigs",
        "string_process": "\nprocess normalized_bigwigs {\n    validExitStatus 0\n    tag \"$name\"\n    memory '30 GB'\n    publishDir \"${params.outdir}/mapped/rcc_bigwig\", mode: 'copy'\n\n    input:\n    set val(name), file(neg_bedgraph) from bedgraph_bigwig_neg\n    set val(name), file(pos_bedgraph) from bedgraph_bigwig_pos\n    file(chrom_sizes) from chrom_sizes\n\n    output:\n    set val(name), file(\"*.rcc.bw\") into normalized_bigwig\n\n    script:\n    \"\"\"\n    ${params.bedGraphToBigWig} ${pos_bedgraph} ${chrom_sizes} ${name}.pos.rcc.bw\n    ${params.bedGraphToBigWig} ${neg_bedgraph} ${chrom_sizes} ${name}.neg.rcc.bw\n\n    \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n    ${params.bedGraphToBigWig} ${pos_bedgraph} ${chrom_sizes} ${name}.pos.rcc.bw\n    ${params.bedGraphToBigWig} ${neg_bedgraph} ${chrom_sizes} ${name}.neg.rcc.bw\n\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bedgraph_bigwig_neg",
            "bedgraph_bigwig_pos",
            "chrom_sizes"
        ],
        "nb_inputs": 3,
        "outputs": [
            "normalized_bigwig"
        ],
        "nb_outputs": 1,
        "name_workflow": "Dowell-Lab__RNAseq-Flow",
        "directive": [
            "validExitStatus 0",
            "tag \"$name\"",
            "memory '30 GB'",
            "publishDir \"${params.outdir}/mapped/rcc_bigwig\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "igvtools": {
        "name_process": "igvtools",
        "string_process": "\nprocess igvtools {\n    tag \"$name\"\n    memory '200 GB'\n    time '1h'\n                                                                             \n                                              \n    errorStrategy 'ignore'\n    publishDir \"${params.outdir}/mapped/tdfs\", mode: 'copy', pattern: \"*.tdf\"\n\n    input:\n    set val(name), file(normalized_bg) from bedgraph_tdf\n    file(chrom_sizes) from chrom_sizes\n\n    output:\n    set val(name), file(\"*.tdf\") into tiled_data_ch\n\n    script:\n    \"\"\"\n    igvtools toTDF ${normalized_bg} ${name}.rcc.tdf ${chrom_sizes}\n    \"\"\"\n }",
        "nb_lignes_process": 20,
        "string_script": "    \"\"\"\n    igvtools toTDF ${normalized_bg} ${name}.rcc.tdf ${chrom_sizes}\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "IGVtools"
        ],
        "tools_url": [
            "https://bio.tools/igvtools"
        ],
        "tools_dico": [
            {
                "name": "IGVtools",
                "uri": "https://bio.tools/igvtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0256",
                                    "term": "Sequence feature comparison"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0256",
                                    "term": "Feature comparison"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0256",
                                    "term": "Feature table comparison"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "The igvtools utility provides a set of tools for pre-processing data files.",
                "homepage": "https://software.broadinstitute.org/software/igv/igvtools"
            }
        ],
        "inputs": [
            "bedgraph_tdf",
            "chrom_sizes"
        ],
        "nb_inputs": 2,
        "outputs": [
            "tiled_data_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "Dowell-Lab__RNAseq-Flow",
        "directive": [
            "tag \"$name\"",
            "memory '200 GB'",
            "time '1h'",
            "errorStrategy 'ignore'",
            "publishDir \"${params.outdir}/mapped/tdfs\", mode: 'copy', pattern: \"*.tdf\""
        ],
        "when": "",
        "stub": ""
    },
    "multiQC": {
        "name_process": "multiQC",
        "string_process": "\nprocess multiQC {\n    validExitStatus 0,1,143\n    errorStrategy 'ignore'\n    publishDir \"${params.outdir}/multiqc/\", mode: 'copy', pattern: \"multiqc_report.html\"\n    publishDir \"${params.outdir}/multiqc/\", mode: 'copy', pattern: \"*_data\"\n\n    when:\n    !params.skipMultiQC\n\n    input:\n    file multiqc_config\n    file (fastqc:'qc/fastqc/*') from fastqc_results.collect()\n    file ('qc/fastqc/*') from trimmed_fastqc_results.collect()\n    file ('qc/trimstats/*') from trim_stats.collect()\n    file ('qc/mapstats/*') from bam_flagstat.collect()\n    file ('qc/rseqc/*') from rseqc_results.collect()\n    file ('qc/preseq/*') from preseq_results.collect()\n    file ('software_versions/*') from software_versions_yaml\n    file ('qc/hisat2_mapstats/*') from hisat2_mapstats.collect()\n\n    output:\n    file \"*multiqc_report.html\" into multiqc_report\n    file \"*_data\" into multiqc_report_files\n\n    script:\n    rtitle = custom_runName ? \"--title \\\"$custom_runName\\\"\" : ''\n    rfilename = custom_runName ? \"--filename \" + custom_runName.replaceAll('\\\\W','_').replaceAll('_+','_') + \"_multiqc_report\" : ''\n\n    \"\"\"\n    multiqc . -f $rtitle $rfilename --config $multiqc_config\n    \"\"\"\n}",
        "nb_lignes_process": 31,
        "string_script": "    rtitle = custom_runName ? \"--title \\\"$custom_runName\\\"\" : ''\n    rfilename = custom_runName ? \"--filename \" + custom_runName.replaceAll('\\\\W','_').replaceAll('_+','_') + \"_multiqc_report\" : ''\n\n    \"\"\"\n    multiqc . -f $rtitle $rfilename --config $multiqc_config\n    \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [
            "multiqc_config",
            "fastqc_results",
            "trimmed_fastqc_results",
            "trim_stats",
            "bam_flagstat",
            "rseqc_results",
            "preseq_results",
            "software_versions_yaml",
            "hisat2_mapstats"
        ],
        "nb_inputs": 9,
        "outputs": [
            "multiqc_report",
            "multiqc_report_files"
        ],
        "nb_outputs": 2,
        "name_workflow": "Dowell-Lab__RNAseq-Flow",
        "directive": [
            "validExitStatus 0,1,143",
            "errorStrategy 'ignore'",
            "publishDir \"${params.outdir}/multiqc/\", mode: 'copy', pattern: \"multiqc_report.html\"",
            "publishDir \"${params.outdir}/multiqc/\", mode: 'copy', pattern: \"*_data\""
        ],
        "when": "!params.skipMultiQC",
        "stub": ""
    }
}