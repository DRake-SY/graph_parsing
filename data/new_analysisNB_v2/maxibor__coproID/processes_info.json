{
    "decomp_kraken": {
        "name_process": "decomp_kraken",
        "string_process": " process decomp_kraken {\n        input:\n            file(ckdb) from comp_kraken\n        output:\n            file(\"kraken\") into krakendb_ch\n        script:\n            \"\"\"\n            tar xvzf $ckdb\n            \"\"\"\n    }",
        "nb_lignes_process": 8,
        "string_script": "            \"\"\"\n            tar xvzf $ckdb\n            \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "comp_kraken"
        ],
        "nb_inputs": 1,
        "outputs": [
            "krakendb_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "maxibor__coproID",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "fastqc": {
        "name_process": "fastqc",
        "string_process": "\nprocess fastqc {\n    tag \"$name\"\n\n    input:\n        set val(name), file(reads) from ch_read_files_fastqc\n\n    output:\n        file '*_fastqc.{zip,html}' into fastqc_results\n    script:\n        \"\"\"\n        fastqc -q $reads\n        \"\"\"\n}",
        "nb_lignes_process": 12,
        "string_script": "        \"\"\"\n        fastqc -q $reads\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "ch_read_files_fastqc"
        ],
        "nb_inputs": 1,
        "outputs": [
            "fastqc_results"
        ],
        "nb_outputs": 1,
        "name_workflow": "maxibor__coproID",
        "directive": [
            "tag \"$name\""
        ],
        "when": "",
        "stub": ""
    },
    "renameGenome1": {
        "name_process": "renameGenome1",
        "string_process": "\nprocess renameGenome1 {\n\n    input:\n        file (genome) from fasta1\n    output:\n        file (params.name1+\".fa\") into (genome1Fasta, genome1Size, genome1damageprofiler)\n    script:\n        outname = params.name1+\".fa\"\n        \"\"\"\n        mv $genome $outname\n        \"\"\"\n}",
        "nb_lignes_process": 11,
        "string_script": "        outname = params.name1+\".fa\"\n        \"\"\"\n        mv $genome $outname\n        \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "fasta1"
        ],
        "nb_inputs": 1,
        "outputs": [
            ""
        ],
        "nb_outputs": 1,
        "name_workflow": "maxibor__coproID",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "renameGenome2": {
        "name_process": "renameGenome2",
        "string_process": "\nprocess renameGenome2 {\n\n    input:\n        file (genome) from fasta2\n    output:\n        file (params.name2+\".fa\") into (genome2Fasta, genome2Size, genome2damageprofiler)\n    script:\n        outname = params.name2+\".fa\"\n        \"\"\"\n        mv $genome $outname\n        \"\"\"\n}",
        "nb_lignes_process": 11,
        "string_script": "        outname = params.name2+\".fa\"\n        \"\"\"\n        mv $genome $outname\n        \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "fasta2"
        ],
        "nb_inputs": 1,
        "outputs": [
            ""
        ],
        "nb_outputs": 1,
        "name_workflow": "maxibor__coproID",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "renameGenome3": {
        "name_process": "renameGenome3",
        "string_process": " process renameGenome3 {\n\n        input:\n            file (genome) from fasta3\n        output:\n            file (params.name3+\".fa\") into (genome3Fasta, genome3Size, genome3damageprofiler)\n        script:\n            outname = params.name3+\".fa\"\n            \"\"\"\n            mv $genome $outname\n            \"\"\"\n    }",
        "nb_lignes_process": 10,
        "string_script": "            outname = params.name3+\".fa\"\n            \"\"\"\n            mv $genome $outname\n            \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "fasta3"
        ],
        "nb_inputs": 1,
        "outputs": [
            ""
        ],
        "nb_outputs": 1,
        "name_workflow": "maxibor__coproID",
        "directive": [],
        "when": "",
        "stub": ""
    },
    "AdapterRemovalCollapse": {
        "name_process": "AdapterRemovalCollapse",
        "string_process": " process AdapterRemovalCollapse {\n        tag \"$name\"\n\n        label 'process_low'\n\n        input:\n            set val(name), file(reads) from ch_read_files_trimming\n\n        output:\n            set val(name), file('*.trimmed.fastq') into trimmed_reads_genome1, trimmed_reads_genome2, trimmed_reads_genome3, trimmed_reads_kraken\n            file(\"*.settings\") into adapter_removal_results\n\n        script:\n            out1 = name+\".pair1.discarded.fastq\"\n            out2 = name+\".pair2.discarded.fastq\"\n            col_out = name+\".trimmed.fastq\"\n            settings = name+\".settings\"\n            \"\"\"\n            AdapterRemoval --basename $name \\\\\n                           --file1 ${reads[0]} \\\\\n                           --file2 ${reads[1]} \\\\\n                           --trimns \\\\\n                           --trimqualities \\\\\n                           --collapse \\\\\n                           --minquality 20 \\\\\n                           --minlength 30 \\\\\n                           --output1 $out1 \\\\\n                           --output2 $out2 \\\\\n                           --outputcollapsed $col_out \\\\\n                           --threads ${task.cpus} \\\\\n                           --qualitybase ${params.phred} \\\\\n                           --settings $settings\n            \"\"\"\n    }",
        "nb_lignes_process": 32,
        "string_script": "            out1 = name+\".pair1.discarded.fastq\"\n            out2 = name+\".pair2.discarded.fastq\"\n            col_out = name+\".trimmed.fastq\"\n            settings = name+\".settings\"\n            \"\"\"\n            AdapterRemoval --basename $name \\\\\n                           --file1 ${reads[0]} \\\\\n                           --file2 ${reads[1]} \\\\\n                           --trimns \\\\\n                           --trimqualities \\\\\n                           --collapse \\\\\n                           --minquality 20 \\\\\n                           --minlength 30 \\\\\n                           --output1 $out1 \\\\\n                           --output2 $out2 \\\\\n                           --outputcollapsed $col_out \\\\\n                           --threads ${task.cpus} \\\\\n                           --qualitybase ${params.phred} \\\\\n                           --settings $settings\n            \"\"\"",
        "nb_lignes_script": 19,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_read_files_trimming"
        ],
        "nb_inputs": 1,
        "outputs": [
            "trimmed_reads_genome1",
            "trimmed_reads_genome2",
            "trimmed_reads_genome3",
            "trimmed_reads_kraken",
            "adapter_removal_results"
        ],
        "nb_outputs": 5,
        "name_workflow": "maxibor__coproID",
        "directive": [
            "tag \"$name\"",
            "label 'process_low'"
        ],
        "when": "",
        "stub": ""
    },
    "AdapterRemovalNoCollapse": {
        "name_process": "AdapterRemovalNoCollapse",
        "string_process": " process AdapterRemovalNoCollapse {\n        tag \"$name\"\n\n        label 'process_low'\n\n        input:\n            set val(name), file(reads) from ch_read_files_trimming\n\n        output:\n            set val(name), file('*.trimmed.fastq') into trimmed_reads_genome1, trimmed_reads_genome2, trimmed_reads_genome3\n            file(\"*.settings\") into adapter_removal_results\n\n        script:\n            out1 = name+\".pair1.trimmed.fastq\"\n            out2 = name+\".pair2.trimmed.fastq\"\n            se_out = name+\".trimmed.fastq\"\n            settings = name+\".settings\"\n            if (params.single_end == false) {\n                \"\"\"\n                AdapterRemoval --basename $name \\\\\n                               --file1 ${reads[0]} \\\\\n                               --file2 ${reads[1]} \\\\\n                               --trimns \\\\\n                               --trimqualities \\\\\n                               --minquality 20 \\\\\n                               --minlength 30 \\\\\n                               --output1 $out1 \\\\\n                               --output2 $out2 \\\\\n                               --threads ${task.cpus} \\\\\n                               --qualitybase ${params.phred} \\\\\n                               --settings $settings\n                \"\"\"\n            } else {\n                \"\"\"\n                AdapterRemoval --basename $name \\\\\n                               --file1 ${reads[0]} \\\\\n                               --trimns \\\\\n                               --trimqualities \\\\\n                               --minquality 20 \\\\\n                               --minlength 30 \\\\\n                               --output1 $se_out \\\\\n                               --threads ${task.cpus} \\\\\n                               --qualitybase ${params.phred} \\\\\n                               --settings $settings\n                \"\"\"\n            }\n            \n    }",
        "nb_lignes_process": 46,
        "string_script": "            out1 = name+\".pair1.trimmed.fastq\"\n            out2 = name+\".pair2.trimmed.fastq\"\n            se_out = name+\".trimmed.fastq\"\n            settings = name+\".settings\"\n            if (params.single_end == false) {\n                \"\"\"\n                AdapterRemoval --basename $name \\\\\n                               --file1 ${reads[0]} \\\\\n                               --file2 ${reads[1]} \\\\\n                               --trimns \\\\\n                               --trimqualities \\\\\n                               --minquality 20 \\\\\n                               --minlength 30 \\\\\n                               --output1 $out1 \\\\\n                               --output2 $out2 \\\\\n                               --threads ${task.cpus} \\\\\n                               --qualitybase ${params.phred} \\\\\n                               --settings $settings\n                \"\"\"\n            } else {\n                \"\"\"\n                AdapterRemoval --basename $name \\\\\n                               --file1 ${reads[0]} \\\\\n                               --trimns \\\\\n                               --trimqualities \\\\\n                               --minquality 20 \\\\\n                               --minlength 30 \\\\\n                               --output1 $se_out \\\\\n                               --threads ${task.cpus} \\\\\n                               --qualitybase ${params.phred} \\\\\n                               --settings $settings\n                \"\"\"\n            }",
        "nb_lignes_script": 32,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_read_files_trimming"
        ],
        "nb_inputs": 1,
        "outputs": [
            "trimmed_reads_genome1",
            "trimmed_reads_genome2",
            "trimmed_reads_genome3",
            "adapter_removal_results"
        ],
        "nb_outputs": 4,
        "name_workflow": "maxibor__coproID",
        "directive": [
            "tag \"$name\"",
            "label 'process_low'"
        ],
        "when": "",
        "stub": ""
    },
    "BowtieIndexGenome1": {
        "name_process": "BowtieIndexGenome1",
        "string_process": " process BowtieIndexGenome1 {\n        tag \"${params.name1}\"\n\n        label 'process_medium'\n\n        input:\n            file(fasta) from genome1Fasta\n        output:\n            file(\"*.bt2\") into bt1_ch\n        script:\n            \"\"\"\n            bowtie2-build $fasta ${bt1_index}\n            \"\"\"\n    }",
        "nb_lignes_process": 12,
        "string_script": "            \"\"\"\n            bowtie2-build $fasta ${bt1_index}\n            \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "genome1Fasta"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bt1_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "maxibor__coproID",
        "directive": [
            "tag \"${params.name1}\"",
            "label 'process_medium'"
        ],
        "when": "",
        "stub": ""
    },
    "AlignToGenome1": {
        "name_process": "AlignToGenome1",
        "string_process": "\nprocess AlignToGenome1 {\n    tag \"$name\"\n\n    label 'process_medium'\n\n    publishDir \"${params.outdir}/alignments/${params.name1}\", mode: 'copy', pattern: '*.sorted.bam'\n\n    input:\n        set val(name), file(reads) from trimmed_reads_genome1\n        file(index) from bt1_ch\n    output:\n        set val(name), file(\"*.aligned.sorted.bam\") into alignment_genome1, alignment_genome1_pmd\n        set val(name), file(\"*.unaligned.sorted.bam\") into unaligned_genome1\n        set val(name), file(\"*.stats.txt\") into align1_multiqc\n    script:\n        samfile = \"aligned_\"+params.name1+\".sam\"\n        fstat = name+\"_\"+params.name1+\".stats.txt\"\n        outfile = name+\"_\"+params.name1+\".aligned.sorted.bam\"\n        outfile_unalign = name+\"_\"+params.name1+\".unaligned.sorted.bam\"\n        if (params.collapse == true || params.single_end == true) {\n            \"\"\"\n            bowtie2 -x $bt1_index -U ${reads[0]} $bowtie_setting --threads ${task.cpus} > $samfile 2> $fstat\n            samtools view -S -b -F 4 -@ ${task.cpus} $samfile | samtools sort -@ ${task.cpus} -o $outfile\n            samtools view -S -b -f 4 -@ ${task.cpus} $samfile | samtools sort -@ ${task.cpus} -o $outfile_unalign\n            \"\"\"\n        } else if (params.collapse == false){\n            \"\"\"\n            bowtie2 -x $bt1_index -1 ${reads[0]} -2 ${reads[1]} $bowtie_setting --threads ${task.cpus} > $samfile 2> $fstat\n            samtools view -S -b -F 4 -@ ${task.cpus} $samfile | samtools sort -@ ${task.cpus} -o $outfile\n            samtools view -S -b -f 4 -@ ${task.cpus} $samfile | samtools sort -@ ${task.cpus} -o $outfile_unalign\n            \"\"\"\n        }            \n}",
        "nb_lignes_process": 32,
        "string_script": "        samfile = \"aligned_\"+params.name1+\".sam\"\n        fstat = name+\"_\"+params.name1+\".stats.txt\"\n        outfile = name+\"_\"+params.name1+\".aligned.sorted.bam\"\n        outfile_unalign = name+\"_\"+params.name1+\".unaligned.sorted.bam\"\n        if (params.collapse == true || params.single_end == true) {\n            \"\"\"\n            bowtie2 -x $bt1_index -U ${reads[0]} $bowtie_setting --threads ${task.cpus} > $samfile 2> $fstat\n            samtools view -S -b -F 4 -@ ${task.cpus} $samfile | samtools sort -@ ${task.cpus} -o $outfile\n            samtools view -S -b -f 4 -@ ${task.cpus} $samfile | samtools sort -@ ${task.cpus} -o $outfile_unalign\n            \"\"\"\n        } else if (params.collapse == false){\n            \"\"\"\n            bowtie2 -x $bt1_index -1 ${reads[0]} -2 ${reads[1]} $bowtie_setting --threads ${task.cpus} > $samfile 2> $fstat\n            samtools view -S -b -F 4 -@ ${task.cpus} $samfile | samtools sort -@ ${task.cpus} -o $outfile\n            samtools view -S -b -f 4 -@ ${task.cpus} $samfile | samtools sort -@ ${task.cpus} -o $outfile_unalign\n            \"\"\"\n        }",
        "nb_lignes_script": 16,
        "language_script": "bash",
        "tools": [
            "PFSTATS",
            "Rbowtie2",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/pfstats",
            "https://bio.tools/rbowtie2",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "PFSTATS",
                "uri": "https://bio.tools/pfstats",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0623",
                            "term": "Gene and protein families"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2269",
                            "term": "Statistics and probability"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0623",
                            "term": "Genes, gene family or system"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2479",
                                    "term": "Protein sequence analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2479",
                                    "term": "Sequence analysis (protein)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "PFSTATS is a set of programs and scripts devoted to analyze protein families using simple statistics.",
                "homepage": "http://www.biocomp.icb.ufmg.br/biocomp/?page_id=119"
            },
            {
                "name": "Rbowtie2",
                "uri": "https://bio.tools/rbowtie2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence merging"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence splicing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This package provides an R wrapper of the popular bowtie2 sequencing reads aligner and AdapterRemoval, a convenient tool for rapid adapter trimming, identification, and read merging.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/Rbowtie2.html"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "trimmed_reads_genome1",
            "bt1_ch"
        ],
        "nb_inputs": 2,
        "outputs": [
            "alignment_genome1",
            "alignment_genome1_pmd",
            "unaligned_genome1",
            "align1_multiqc"
        ],
        "nb_outputs": 4,
        "name_workflow": "maxibor__coproID",
        "directive": [
            "tag \"$name\"",
            "label 'process_medium'",
            "publishDir \"${params.outdir}/alignments/${params.name1}\", mode: 'copy', pattern: '*.sorted.bam'"
        ],
        "when": "",
        "stub": ""
    },
    "bam2fq": {
        "name_process": "bam2fq",
        "string_process": "\nprocess bam2fq {\n    tag \"$name\"\n\n    label 'process_medium'\n\n    input:\n        set val(name), file(bam) from unaligned_genome1\n    output:\n        set val(name), file(\"*.fastq\") into unmapped_humans_reads\n    script:\n        if (paired_end && params.collapse == false){\n            out1 = name+\"_\"+params.name1+\".unaligned_R1.fastq\"\n            out2 = name+\"_\"+params.name1+\".unaligned_R2.fastq\"\n            \"\"\"\n            samtools fastq -1 $out1 -2 $out2 -0 /dev/null -s /dev/null -n -F 0x900 $bam\n            \"\"\"\n        } else {\n            out = name+\"_\"+params.name1+\".unaligned.fastq\"\n            \"\"\"\n            samtools fastq $bam > $out\n            \"\"\"\n        }\n}",
        "nb_lignes_process": 22,
        "string_script": "        if (paired_end && params.collapse == false){\n            out1 = name+\"_\"+params.name1+\".unaligned_R1.fastq\"\n            out2 = name+\"_\"+params.name1+\".unaligned_R2.fastq\"\n            \"\"\"\n            samtools fastq -1 $out1 -2 $out2 -0 /dev/null -s /dev/null -n -F 0x900 $bam\n            \"\"\"\n        } else {\n            out = name+\"_\"+params.name1+\".unaligned.fastq\"\n            \"\"\"\n            samtools fastq $bam > $out\n            \"\"\"\n        }",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [
            "SAMtools",
            "Ragout"
        ],
        "tools_url": [
            "https://bio.tools/samtools",
            "https://bio.tools/ragout"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "Ragout",
                "uri": "https://bio.tools/ragout",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genome assembly"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Sequence assembly (genome assembly)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genomic assembly"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Tool for assisted assembly using multiple references. It takes a short read assembly (a set of contigs), a set of related references and a corresponding phylogenetic tree and then assembles the contigs into scaffolds.",
                "homepage": "http://fenderglass.github.io/Ragout/"
            }
        ],
        "inputs": [
            "unaligned_genome1"
        ],
        "nb_inputs": 1,
        "outputs": [
            "unmapped_humans_reads"
        ],
        "nb_outputs": 1,
        "name_workflow": "maxibor__coproID",
        "directive": [
            "tag \"$name\"",
            "label 'process_medium'"
        ],
        "when": "",
        "stub": ""
    },
    "BowtieIndexGenome2": {
        "name_process": "BowtieIndexGenome2",
        "string_process": " process BowtieIndexGenome2 {\n        tag \"${params.name2}\"\n\n        label 'process_medium'\n\n        input:\n            file(fasta) from genome2Fasta\n        output:\n            file(\"*.bt2\") into bt2_ch\n        script:\n            \"\"\"\n            bowtie2-build $fasta ${bt2_index}\n            \"\"\"\n    }",
        "nb_lignes_process": 12,
        "string_script": "            \"\"\"\n            bowtie2-build $fasta ${bt2_index}\n            \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "genome2Fasta"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bt2_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "maxibor__coproID",
        "directive": [
            "tag \"${params.name2}\"",
            "label 'process_medium'"
        ],
        "when": "",
        "stub": ""
    },
    "BowtieIndexGenome3": {
        "name_process": "BowtieIndexGenome3",
        "string_process": " process BowtieIndexGenome3 {\n        tag \"${params.name2}\"\n\n        label 'process_medium'\n\n        input:\n            file(fasta) from genome3Fasta\n        output:\n            file(\"*.bt2\") into bt3_ch\n        script:\n            \"\"\"\n            bowtie2-build $fasta ${bt3_index}\n            \"\"\"\n    }",
        "nb_lignes_process": 12,
        "string_script": "            \"\"\"\n            bowtie2-build $fasta ${bt3_index}\n            \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "genome3Fasta"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bt3_ch"
        ],
        "nb_outputs": 1,
        "name_workflow": "maxibor__coproID",
        "directive": [
            "tag \"${params.name2}\"",
            "label 'process_medium'"
        ],
        "when": "",
        "stub": ""
    },
    "AlignToGenome2": {
        "name_process": "AlignToGenome2",
        "string_process": "\nprocess AlignToGenome2 {\n    tag \"$name\"\n\n    label 'process_medium'\n\n    publishDir \"${params.outdir}/alignments/${params.name2}\", mode: 'copy', pattern: '*.sorted.bam'\n\n    input:\n        set val(name), file(reads) from trimmed_reads_genome2\n        file(index) from bt2_ch\n    output:\n        set val(name), file(\"*.aligned.sorted.bam\") into alignment_genome2, alignment_genome2_pmd\n        set val(name), file(\"*.unaligned.sorted.bam\") into unaligned_genome2\n        set val(name), file(\"*.stats.txt\") into align2_multiqc\n    script:\n        samfile = \"aligned_\"+params.name2+\".sam\"\n        fstat = name+\"_\"+params.name2+\".stats.txt\"\n        outfile = name+\"_\"+params.name2+\".aligned.sorted.bam\"\n        outfile_unalign = name+\"_\"+params.name2+\".unaligned.sorted.bam\"\n        if (params.collapse == true || params.single_end == true) {\n            \"\"\"\n            bowtie2 -x $bt2_index -U ${reads[0]} $bowtie_setting --threads ${task.cpus} > $samfile 2> $fstat\n            samtools view -S -b -F 4 -@ ${task.cpus} $samfile | samtools sort -@ ${task.cpus} -o $outfile\n            samtools view -S -b -f 4 -@ ${task.cpus} $samfile | samtools sort -@ ${task.cpus} -o $outfile_unalign\n            \"\"\"\n        } else if (params.collapse == false){\n            \"\"\"\n            bowtie2 -x $bt2_index -1 ${reads[0]} -2 ${reads[1]} $bowtie_setting --threads ${task.cpus} > $samfile 2> $fstat\n            samtools view -S -b -F 4 -@ ${task.cpus} $samfile | samtools sort -@ ${task.cpus} -o $outfile\n            samtools view -S -b -f 4 -@ ${task.cpus} $samfile | samtools sort -@ ${task.cpus} -o $outfile_unalign\n            \"\"\"\n        }            \n}",
        "nb_lignes_process": 32,
        "string_script": "        samfile = \"aligned_\"+params.name2+\".sam\"\n        fstat = name+\"_\"+params.name2+\".stats.txt\"\n        outfile = name+\"_\"+params.name2+\".aligned.sorted.bam\"\n        outfile_unalign = name+\"_\"+params.name2+\".unaligned.sorted.bam\"\n        if (params.collapse == true || params.single_end == true) {\n            \"\"\"\n            bowtie2 -x $bt2_index -U ${reads[0]} $bowtie_setting --threads ${task.cpus} > $samfile 2> $fstat\n            samtools view -S -b -F 4 -@ ${task.cpus} $samfile | samtools sort -@ ${task.cpus} -o $outfile\n            samtools view -S -b -f 4 -@ ${task.cpus} $samfile | samtools sort -@ ${task.cpus} -o $outfile_unalign\n            \"\"\"\n        } else if (params.collapse == false){\n            \"\"\"\n            bowtie2 -x $bt2_index -1 ${reads[0]} -2 ${reads[1]} $bowtie_setting --threads ${task.cpus} > $samfile 2> $fstat\n            samtools view -S -b -F 4 -@ ${task.cpus} $samfile | samtools sort -@ ${task.cpus} -o $outfile\n            samtools view -S -b -f 4 -@ ${task.cpus} $samfile | samtools sort -@ ${task.cpus} -o $outfile_unalign\n            \"\"\"\n        }",
        "nb_lignes_script": 16,
        "language_script": "bash",
        "tools": [
            "PFSTATS",
            "Rbowtie2",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/pfstats",
            "https://bio.tools/rbowtie2",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "PFSTATS",
                "uri": "https://bio.tools/pfstats",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0623",
                            "term": "Gene and protein families"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2269",
                            "term": "Statistics and probability"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0623",
                            "term": "Genes, gene family or system"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2479",
                                    "term": "Protein sequence analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2479",
                                    "term": "Sequence analysis (protein)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "PFSTATS is a set of programs and scripts devoted to analyze protein families using simple statistics.",
                "homepage": "http://www.biocomp.icb.ufmg.br/biocomp/?page_id=119"
            },
            {
                "name": "Rbowtie2",
                "uri": "https://bio.tools/rbowtie2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence merging"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence splicing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This package provides an R wrapper of the popular bowtie2 sequencing reads aligner and AdapterRemoval, a convenient tool for rapid adapter trimming, identification, and read merging.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/Rbowtie2.html"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "trimmed_reads_genome2",
            "bt2_ch"
        ],
        "nb_inputs": 2,
        "outputs": [
            "alignment_genome2",
            "alignment_genome2_pmd",
            "unaligned_genome2",
            "align2_multiqc"
        ],
        "nb_outputs": 4,
        "name_workflow": "maxibor__coproID",
        "directive": [
            "tag \"$name\"",
            "label 'process_medium'",
            "publishDir \"${params.outdir}/alignments/${params.name2}\", mode: 'copy', pattern: '*.sorted.bam'"
        ],
        "when": "",
        "stub": ""
    },
    "AlignToGenome3": {
        "name_process": "AlignToGenome3",
        "string_process": " process AlignToGenome3 {\n        tag \"$name\"\n\n        label 'process_medium'\n\n        publishDir \"${params.outdir}/alignments/${params.name1}\", mode: 'copy', pattern: '*.sorted.bam'\n\n        input:\n            set val(name), file(reads) from trimmed_reads_genome3\n            file(index) from bt3_ch\n        output:\n            set val(name), file(\"*.aligned.sorted.bam\") into alignment_genome3, alignment_genome3_pmd\n            set val(name), file(\"*.unaligned.sorted.bam\") into unaligned_genome3\n            set val(name), file(\"*.stats.txt\") into align3_multiqc\n        script:\n            samfile = \"aligned_\"+params.name3+\".sam\"\n            fstat = name+\"_\"+params.name3+\".stats.txt\"\n            outfile = name+\"_\"+params.name3+\".aligned.sorted.bam\"\n            outfile_unalign = name+\"_\"+params.name3+\".unaligned.sorted.bam\"\n            if (params.collapse == true || params.single_end == true) {\n                \"\"\"\n                bowtie2 -x $bt3_index -U ${reads[0]} $bowtie_setting --threads ${task.cpus} > $samfile 2> $fstat\n                samtools view -S -b -F 4 -@ ${task.cpus} $samfile | samtools sort -@ ${task.cpus} -o $outfile\n                samtools view -S -b -f 4 -@ ${task.cpus} $samfile | samtools sort -@ ${task.cpus} -o $outfile_unalign\n                \"\"\"\n            } else if (params.collapse == false){\n                \"\"\"\n                bowtie2 -x $bt3_index -1 ${reads[0]} -2 ${reads[1]} $bowtie_setting --threads ${task.cpus} > $samfile 2> $fstat\n                samtools view -S -b -F 4 -@ ${task.cpus} $samfile | samtools sort -@ ${task.cpus} -o $outfile\n                samtools view -S -b -f 4 -@ ${task.cpus} $samfile | samtools sort -@ ${task.cpus} -o $outfile_unalign\n                \"\"\"\n            }            \n    }",
        "nb_lignes_process": 31,
        "string_script": "            samfile = \"aligned_\"+params.name3+\".sam\"\n            fstat = name+\"_\"+params.name3+\".stats.txt\"\n            outfile = name+\"_\"+params.name3+\".aligned.sorted.bam\"\n            outfile_unalign = name+\"_\"+params.name3+\".unaligned.sorted.bam\"\n            if (params.collapse == true || params.single_end == true) {\n                \"\"\"\n                bowtie2 -x $bt3_index -U ${reads[0]} $bowtie_setting --threads ${task.cpus} > $samfile 2> $fstat\n                samtools view -S -b -F 4 -@ ${task.cpus} $samfile | samtools sort -@ ${task.cpus} -o $outfile\n                samtools view -S -b -f 4 -@ ${task.cpus} $samfile | samtools sort -@ ${task.cpus} -o $outfile_unalign\n                \"\"\"\n            } else if (params.collapse == false){\n                \"\"\"\n                bowtie2 -x $bt3_index -1 ${reads[0]} -2 ${reads[1]} $bowtie_setting --threads ${task.cpus} > $samfile 2> $fstat\n                samtools view -S -b -F 4 -@ ${task.cpus} $samfile | samtools sort -@ ${task.cpus} -o $outfile\n                samtools view -S -b -f 4 -@ ${task.cpus} $samfile | samtools sort -@ ${task.cpus} -o $outfile_unalign\n                \"\"\"\n            }",
        "nb_lignes_script": 16,
        "language_script": "bash",
        "tools": [
            "PFSTATS",
            "Rbowtie2",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/pfstats",
            "https://bio.tools/rbowtie2",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "PFSTATS",
                "uri": "https://bio.tools/pfstats",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0623",
                            "term": "Gene and protein families"
                        },
                        {
                            "uri": "http://edamontology.org/topic_2269",
                            "term": "Statistics and probability"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0623",
                            "term": "Genes, gene family or system"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2479",
                                    "term": "Protein sequence analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2479",
                                    "term": "Sequence analysis (protein)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "PFSTATS is a set of programs and scripts devoted to analyze protein families using simple statistics.",
                "homepage": "http://www.biocomp.icb.ufmg.br/biocomp/?page_id=119"
            },
            {
                "name": "Rbowtie2",
                "uri": "https://bio.tools/rbowtie2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence merging"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence splicing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This package provides an R wrapper of the popular bowtie2 sequencing reads aligner and AdapterRemoval, a convenient tool for rapid adapter trimming, identification, and read merging.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/Rbowtie2.html"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "trimmed_reads_genome3",
            "bt3_ch"
        ],
        "nb_inputs": 2,
        "outputs": [
            "alignment_genome3",
            "alignment_genome3_pmd",
            "unaligned_genome3",
            "align3_multiqc"
        ],
        "nb_outputs": 4,
        "name_workflow": "maxibor__coproID",
        "directive": [
            "tag \"$name\"",
            "label 'process_medium'",
            "publishDir \"${params.outdir}/alignments/${params.name1}\", mode: 'copy', pattern: '*.sorted.bam'"
        ],
        "when": "",
        "stub": ""
    },
    "pmdtoolsgenome1": {
        "name_process": "pmdtoolsgenome1",
        "string_process": " process pmdtoolsgenome1 {\n    tag \"$name\"\n\n    publishDir \"${params.outdir}/pmdtools/${params.name1}\", mode: 'copy', pattern: '*.pmd_filtered.bam'\n\n    input:\n        set val(name), file(bam1) from alignment_genome1_pmd\n    output:\n        set val(name), file(\"*.pmd_filtered.bam\") into pmd_aligned1\n    script:\n        outfile = name+\"_\"+params.name1+\".pmd_filtered.bam\"\n        \"\"\"\n        samtools view -h -F 4 $bam1 | pmdtools -t ${params.pmdscore} --header $library | samtools view -Sb - > $outfile\n        \"\"\"\n    }",
        "nb_lignes_process": 13,
        "string_script": "        outfile = name+\"_\"+params.name1+\".pmd_filtered.bam\"\n        \"\"\"\n        samtools view -h -F 4 $bam1 | pmdtools -t ${params.pmdscore} --header $library | samtools view -Sb - > $outfile\n        \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "alignment_genome1_pmd"
        ],
        "nb_inputs": 1,
        "outputs": [
            "pmd_aligned1"
        ],
        "nb_outputs": 1,
        "name_workflow": "maxibor__coproID",
        "directive": [
            "tag \"$name\"",
            "publishDir \"${params.outdir}/pmdtools/${params.name1}\", mode: 'copy', pattern: '*.pmd_filtered.bam'"
        ],
        "when": "",
        "stub": ""
    },
    "pmdtoolsgenome2": {
        "name_process": "pmdtoolsgenome2",
        "string_process": " process pmdtoolsgenome2 {\n        tag \"$name\"\n\n        publishDir \"${params.outdir}/pmdtools/${params.name2}\", mode: 'copy', pattern: '*.pmd_filtered.bam'\n\n        input:\n            set val(name), file(bam2) from alignment_genome2_pmd\n        output:\n            set val(name), file(\"*.pmd_filtered.bam\") into pmd_aligned2\n        script:\n            outfile = name+\"_\"+params.name2+\".pmd_filtered.bam\"\n            \"\"\"\n            samtools view -h -F 4 $bam2 | pmdtools -t ${params.pmdscore} --header $library | samtools view -Sb - > $outfile\n            \"\"\"\n    }",
        "nb_lignes_process": 13,
        "string_script": "            outfile = name+\"_\"+params.name2+\".pmd_filtered.bam\"\n            \"\"\"\n            samtools view -h -F 4 $bam2 | pmdtools -t ${params.pmdscore} --header $library | samtools view -Sb - > $outfile\n            \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "alignment_genome2_pmd"
        ],
        "nb_inputs": 1,
        "outputs": [
            "pmd_aligned2"
        ],
        "nb_outputs": 1,
        "name_workflow": "maxibor__coproID",
        "directive": [
            "tag \"$name\"",
            "publishDir \"${params.outdir}/pmdtools/${params.name2}\", mode: 'copy', pattern: '*.pmd_filtered.bam'"
        ],
        "when": "",
        "stub": ""
    },
    "pmdtoolsgenome3": {
        "name_process": "pmdtoolsgenome3",
        "string_process": " process pmdtoolsgenome3 {\n        tag \"$name\"\n\n        publishDir \"${params.outdir}/pmdtools/${params.name3}\", mode: 'copy', pattern: '*.pmd_filtered.bam'\n\n        input:\n            set val(name), file(bam3) from alignment_genome3_pmd\n        output:\n            set val(name), file(\"*.pmd_filtered.bam\") into pmd_aligned3\n        script:\n            outfile = name+\"_\"+params.name3+\".pmd_filtered.bam\"\n            \"\"\"\n            samtools view -h -F 4 $bam3 | pmdtools -t ${params.pmdscore} --header $library | samtools view -Sb - > $outfile\n            \"\"\"\n        }",
        "nb_lignes_process": 13,
        "string_script": "            outfile = name+\"_\"+params.name3+\".pmd_filtered.bam\"\n            \"\"\"\n            samtools view -h -F 4 $bam3 | pmdtools -t ${params.pmdscore} --header $library | samtools view -Sb - > $outfile\n            \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "alignment_genome3_pmd"
        ],
        "nb_inputs": 1,
        "outputs": [
            "pmd_aligned3"
        ],
        "nb_outputs": 1,
        "name_workflow": "maxibor__coproID",
        "directive": [
            "tag \"$name\"",
            "publishDir \"${params.outdir}/pmdtools/${params.name3}\", mode: 'copy', pattern: '*.pmd_filtered.bam'"
        ],
        "when": "",
        "stub": ""
    },
    "kraken2": {
        "name_process": "kraken2",
        "string_process": "\nprocess kraken2 {\n    tag \"$name\"\n\n    label 'process_medium'\n\n    input:\n        set val(name), file(reads) from unmapped_humans_reads\n        file(krakendb) from krakendb_ch\n\n\n    output:\n        set val(name), file('*.kraken.out') into kraken_out\n        set val(name), file('*.kreport') into kraken_report\n\n    script:\n        out = name+\".kraken.out\"\n        kreport = name+\".kreport\"\n        if (paired_end && params.collapse == false){\n            \"\"\"\n            kraken2 --db ${krakendb} \\\\\n                    --threads ${task.cpus} \\\\\n                    --output $out \\\\\n                    --report $kreport \\\\\n                    --paired ${reads[0]} ${reads[1]}\n            \"\"\"    \n        } else {\n            \"\"\"\n            kraken2 --db ${krakendb} \\\\\n                    --threads ${task.cpus} \\\\\n                    --output $out \\\\\n                    --report $kreport ${reads[0]}\n            \"\"\"\n        }\n        \n}",
        "nb_lignes_process": 34,
        "string_script": "        out = name+\".kraken.out\"\n        kreport = name+\".kreport\"\n        if (paired_end && params.collapse == false){\n            \"\"\"\n            kraken2 --db ${krakendb} \\\\\n                    --threads ${task.cpus} \\\\\n                    --output $out \\\\\n                    --report $kreport \\\\\n                    --paired ${reads[0]} ${reads[1]}\n            \"\"\"    \n        } else {\n            \"\"\"\n            kraken2 --db ${krakendb} \\\\\n                    --threads ${task.cpus} \\\\\n                    --output $out \\\\\n                    --report $kreport ${reads[0]}\n            \"\"\"\n        }",
        "nb_lignes_script": 17,
        "language_script": "bash",
        "tools": [
            "Ragout",
            "kraken2"
        ],
        "tools_url": [
            "https://bio.tools/ragout",
            "https://bio.tools/kraken2"
        ],
        "tools_dico": [
            {
                "name": "Ragout",
                "uri": "https://bio.tools/ragout",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genome assembly"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Sequence assembly (genome assembly)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genomic assembly"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Tool for assisted assembly using multiple references. It takes a short read assembly (a set of contigs), a set of related references and a corresponding phylogenetic tree and then assembles the contigs into scaffolds.",
                "homepage": "http://fenderglass.github.io/Ragout/"
            },
            {
                "name": "kraken2",
                "uri": "https://bio.tools/kraken2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0637",
                            "term": "Taxonomy"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3174",
                            "term": "Metagenomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3460",
                                    "term": "Taxonomic classification"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3460",
                                    "term": "Taxonomy assignment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3494",
                                "term": "DNA sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3028",
                                "term": "Taxonomy"
                            }
                        ]
                    }
                ],
                "description": "Kraken 2 is the newest version of Kraken, a taxonomic classification system using exact k-mer matches to achieve high accuracy and fast classification speeds. This classifier matches each k-mer within a query sequence to the lowest common ancestor (LCA) of all genomes containing the given k-mer. The k-mer assignments inform the classification algorithm.",
                "homepage": "https://ccb.jhu.edu/software/kraken2/"
            }
        ],
        "inputs": [
            "unmapped_humans_reads",
            "krakendb_ch"
        ],
        "nb_inputs": 2,
        "outputs": [
            "kraken_out",
            "kraken_report"
        ],
        "nb_outputs": 2,
        "name_workflow": "maxibor__coproID",
        "directive": [
            "tag \"$name\"",
            "label 'process_medium'"
        ],
        "when": "",
        "stub": ""
    },
    "kraken_parse": {
        "name_process": "kraken_parse",
        "string_process": "\nprocess kraken_parse {\n    tag \"$name\"\n\n    input:\n        set val(name), file(kraken_r) from kraken_report\n\n    output:\n        file('*.kraken_parsed.csv') into kraken_parsed\n\n    script:\n        out = name+\".kraken_parsed.csv\"\n        \"\"\"\n        kraken_parse.py -c ${params.minKraken} $kraken_r\n        \"\"\"    \n}",
        "nb_lignes_process": 14,
        "string_script": "        out = name+\".kraken_parsed.csv\"\n        \"\"\"\n        kraken_parse.py -c ${params.minKraken} $kraken_r\n        \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "Ragout"
        ],
        "tools_url": [
            "https://bio.tools/ragout"
        ],
        "tools_dico": [
            {
                "name": "Ragout",
                "uri": "https://bio.tools/ragout",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genome assembly"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Sequence assembly (genome assembly)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genomic assembly"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Tool for assisted assembly using multiple references. It takes a short read assembly (a set of contigs), a set of related references and a corresponding phylogenetic tree and then assembles the contigs into scaffolds.",
                "homepage": "http://fenderglass.github.io/Ragout/"
            }
        ],
        "inputs": [
            "kraken_report"
        ],
        "nb_inputs": 1,
        "outputs": [
            "kraken_parsed"
        ],
        "nb_outputs": 1,
        "name_workflow": "maxibor__coproID",
        "directive": [
            "tag \"$name\""
        ],
        "when": "",
        "stub": ""
    },
    "kraken_merge": {
        "name_process": "kraken_merge",
        "string_process": "\nprocess kraken_merge {\n\n    publishDir \"${params.outdir}/kraken\", mode: 'copy'\n\n    input:\n        file(csv_count) from kraken_parsed.collect()\n\n    output:\n        file('kraken_merged.csv') into kraken_merged\n\n    script:\n        out = \"kraken_merged.csv\"\n        \"\"\"\n        merge_kraken_res.py -o $out\n        \"\"\"    \n}",
        "nb_lignes_process": 15,
        "string_script": "        out = \"kraken_merged.csv\"\n        \"\"\"\n        merge_kraken_res.py -o $out\n        \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "Ragout"
        ],
        "tools_url": [
            "https://bio.tools/ragout"
        ],
        "tools_dico": [
            {
                "name": "Ragout",
                "uri": "https://bio.tools/ragout",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0196",
                            "term": "Sequence assembly"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genome assembly"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Sequence assembly (genome assembly)"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0525",
                                    "term": "Genomic assembly"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Tool for assisted assembly using multiple references. It takes a short read assembly (a set of contigs), a set of related references and a corresponding phylogenetic tree and then assembles the contigs into scaffolds.",
                "homepage": "http://fenderglass.github.io/Ragout/"
            }
        ],
        "inputs": [
            "kraken_parsed"
        ],
        "nb_inputs": 1,
        "outputs": [
            "kraken_merged"
        ],
        "nb_outputs": 1,
        "name_workflow": "maxibor__coproID",
        "directive": [
            "publishDir \"${params.outdir}/kraken\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "sourcepredict": {
        "name_process": "sourcepredict",
        "string_process": "\nprocess sourcepredict {\n\n    label 'process_high'\n\n    input:\n        file(otu_table) from kraken_merged\n        file(sp_sources) from sp_sources\n        file(sp_labels) from sp_labels\n    output:\n        file('*.sourcepredict.csv') into sourcepredict_out\n        file('*_embedding.csv') into sourcepredict_embed_out\n\n    script:\n        outfile = \"prediction.sourcepredict.csv\"\n        embed_out = \"sourcepredict_embedding.csv\"\n        \"\"\"\n        sourcepredict -di ${params.sp_dim} \\\\\n                      -kne ${params.sp_neighbors} \\\\\n                      -me ${params.sp_embed} \\\\\n                      -n ${params.sp_norm} \\\\\n                      -l ${sp_labels} \\\\\n                      -s ${sp_sources} \\\\\n                      -t ${task.cpus} \\\\\n                      -o $outfile \\\\\n                      -e $embed_out $otu_table \n        \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "        outfile = \"prediction.sourcepredict.csv\"\n        embed_out = \"sourcepredict_embedding.csv\"\n        \"\"\"\n        sourcepredict -di ${params.sp_dim} \\\\\n                      -kne ${params.sp_neighbors} \\\\\n                      -me ${params.sp_embed} \\\\\n                      -n ${params.sp_norm} \\\\\n                      -l ${sp_labels} \\\\\n                      -s ${sp_sources} \\\\\n                      -t ${task.cpus} \\\\\n                      -o $outfile \\\\\n                      -e $embed_out $otu_table \n        \"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "kraken_merged",
            "sp_sources",
            "sp_labels"
        ],
        "nb_inputs": 3,
        "outputs": [
            "sourcepredict_out",
            "sourcepredict_embed_out"
        ],
        "nb_outputs": 2,
        "name_workflow": "maxibor__coproID",
        "directive": [
            "label 'process_high'"
        ],
        "when": "",
        "stub": ""
    },
    "countBp2genomes": {
        "name_process": "countBp2genomes",
        "string_process": " process countBp2genomes{\n    tag \"$name\"\n\n    label 'process_low'\n\n    input:\n\n        set val(name), file(abam1), file(abam2), file(bam1), file(bam2) from ( (params.adna ? pmd_aligned1.join(pmd_aligned2) : alignment_genome1_pmd.join(alignment_genome2_pmd)).join(alignment_genome1).join(alignment_genome2))\n        file(genome1) from genome1Size\n        file(genome2) from genome2Size\n    output:\n        set val(name), file(\"*.bpc.csv\") into bp_count\n        set val(name), file(\"*\"+params.name1+\".ancient.filtered.bam\") optional true into ancient_filtered_bam1\n        set val(name), file(\"*\"+params.name2+\".ancient.filtered.bam\") optional true into ancient_filtered_bam2\n    script:\n        outfile = name+\".bpc.csv\"\n        organame1 = params.name1\n        organame2 = params.name2\n        obam1 = name+\"_\"+organame1+\".filtered.bam\"\n        obam2 = name+\"_\"+organame2+\".filtered.bam\"\n        if (params.adna) {\n            aobam1 = name+\"_\"+organame1+\".ancient.filtered.bam\"\n            aobam2 = name+\"_\"+organame2+\".ancient.filtered.bam\" \n            \"\"\"\n            samtools index $bam1\n            samtools index $bam2\n            samtools index $abam1\n            samtools index $abam2\n            normalizedReadCount -n $name \\\\\n                                -b1 $bam1 \\\\\n                                -ab1 $abam1 \\\\\n                                -b2 $bam2 \\\\\n                                -ab2 $abam2 \\\\\n                                -g1 $genome1 \\\\\n                                -g2 $genome2 \\\\\n                                -r1 $organame1 \\\\\n                                -r2 $organame2 \\\\\n                                -i ${params.identity} \\\\\n                                -o $outfile \\\\\n                                -ob1 $obam1 \\\\\n                                -aob1 $aobam1 \\\\\n                                -ob2 $obam2 \\\\\n                                -aob2 $aobam2 \\\\\n                                -ed1 ${params.endo1} \\\\\n                                -ed2 ${params.endo2} \\\\\n                                -p ${task.cpus}\n            \"\"\"\n        }\n        else {\n            \"\"\"\n            samtools index $bam1\n            samtools index $bam2\n            normalizedReadCount -n $name \\\\\n                                -b1 $bam1 \\\\\n                                -b2 $bam2 \\\\\n                                -g1 $genome1 \\\\\n                                -g2 $genome2 \\\\\n                                -r1 $organame1 \\\\\n                                -r2 $organame2 \\\\\n                                -i ${params.identity} \\\\\n                                -o $outfile \\\\\n                                -ob1 $obam1 \\\\\n                                -ob2 $obam2 \\\\\n                                -ed1 ${params.endo1} \\\\\n                                -ed2 ${params.endo2} \\\\\n                                -p ${task.cpus}\n            \"\"\"\n        }\n        \n    }",
        "nb_lignes_process": 68,
        "string_script": "        outfile = name+\".bpc.csv\"\n        organame1 = params.name1\n        organame2 = params.name2\n        obam1 = name+\"_\"+organame1+\".filtered.bam\"\n        obam2 = name+\"_\"+organame2+\".filtered.bam\"\n        if (params.adna) {\n            aobam1 = name+\"_\"+organame1+\".ancient.filtered.bam\"\n            aobam2 = name+\"_\"+organame2+\".ancient.filtered.bam\" \n            \"\"\"\n            samtools index $bam1\n            samtools index $bam2\n            samtools index $abam1\n            samtools index $abam2\n            normalizedReadCount -n $name \\\\\n                                -b1 $bam1 \\\\\n                                -ab1 $abam1 \\\\\n                                -b2 $bam2 \\\\\n                                -ab2 $abam2 \\\\\n                                -g1 $genome1 \\\\\n                                -g2 $genome2 \\\\\n                                -r1 $organame1 \\\\\n                                -r2 $organame2 \\\\\n                                -i ${params.identity} \\\\\n                                -o $outfile \\\\\n                                -ob1 $obam1 \\\\\n                                -aob1 $aobam1 \\\\\n                                -ob2 $obam2 \\\\\n                                -aob2 $aobam2 \\\\\n                                -ed1 ${params.endo1} \\\\\n                                -ed2 ${params.endo2} \\\\\n                                -p ${task.cpus}\n            \"\"\"\n        }\n        else {\n            \"\"\"\n            samtools index $bam1\n            samtools index $bam2\n            normalizedReadCount -n $name \\\\\n                                -b1 $bam1 \\\\\n                                -b2 $bam2 \\\\\n                                -g1 $genome1 \\\\\n                                -g2 $genome2 \\\\\n                                -r1 $organame1 \\\\\n                                -r2 $organame2 \\\\\n                                -i ${params.identity} \\\\\n                                -o $outfile \\\\\n                                -ob1 $obam1 \\\\\n                                -ob2 $obam2 \\\\\n                                -ed1 ${params.endo1} \\\\\n                                -ed2 ${params.endo2} \\\\\n                                -p ${task.cpus}\n            \"\"\"\n        }",
        "nb_lignes_script": 52,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "(params",
            "pmd_aligned2",
            "alignment_genome2_pmd",
            "alignment_genome1",
            "alignment_genome2",
            "genome1Size",
            "genome2Size"
        ],
        "nb_inputs": 7,
        "outputs": [
            "bp_count",
            "ancient_filtered_bam1",
            "ancient_filtered_bam2"
        ],
        "nb_outputs": 3,
        "name_workflow": "maxibor__coproID",
        "directive": [
            "tag \"$name\"",
            "label 'process_low'"
        ],
        "when": "",
        "stub": ""
    },
    "countBp3genomes": {
        "name_process": "countBp3genomes",
        "string_process": " process countBp3genomes{\n    tag \"$name\"\n\n    label 'process_low'\n\n    echo true\n\n    input:\n\n        set val(name), file(abam1), file(abam2), file(abam3), file(bam1), file(bam2), file(bam3) from ( (params.adna ? pmd_aligned1.join(pmd_aligned2).join(pmd_aligned3) : alignment_genome1_pmd.join(alignment_genome2_pmd).join(alignment_genome3_pmd)).join(alignment_genome1).join(alignment_genome2).join(alignment_genome3))\n        file(genome1) from genome1Size\n        file(genome2) from genome2Size\n        file(genome3) from genome3Size\n    output:\n        set val(name), file(\"*.bpc.csv\") into bp_count\n        set val(name), file(\"*\"+params.name1+\".ancient.filtered.bam\") optional true into ancient_filtered_bam1\n        set val(name), file(\"*\"+params.name2+\".ancient.filtered.bam\") optional true into ancient_filtered_bam2\n        set val(name), file(\"*\"+params.name3+\".ancient.filtered.bam\") optional true into ancient_filtered_bam3\n    script:\n        outfile = name+\".bpc.csv\"\n        organame1 = params.name1\n        organame2 = params.name2\n        organame3 = params.name3\n\n        obam1 = name+\"_\"+organame1+\".filtered.bam\"\n        obam2 = name+\"_\"+organame2+\".filtered.bam\"\n        obam3 = name+\"_\"+organame3+\".filtered.bam\"\n        if (params.adna) {\n            aobam1 = name+\"_\"+organame1+\".ancient.filtered.bam\"\n            aobam2 = name+\"_\"+organame2+\".ancient.filtered.bam\"\n            aobam3 = name+\"_\"+organame3+\".ancient.filtered.bam\"\n            \"\"\"\n            samtools index $bam1\n            samtools index $bam2\n            samtools index $bam3\n            samtools index $abam1\n            samtools index $abam2\n            samtools index $abam3\n            normalizedReadCount -n $name \\\\\n                                -b1 $bam1 \\\\\n                                -ab1 $abam1 \\\\\n                                -b2 $bam2 \\\\\n                                -ab2 $abam2 \\\\\n                                -b3 $bam3 \\\\\n                                -ab3 $abam3 \\\\\n                                -g1 $genome1 \\\\\n                                -g2 $genome2 \\\\\n                                -g3 $genome3 \\\\\n                                -r1 $organame1 \\\\\n                                -r2 $organame2 \\\\\n                                -r3 $organame3 \\\\\n                                -i ${params.identity} \\\\\n                                -o $outfile \\\\\n                                -ob1 $obam1 \\\\\n                                -aob1 $aobam1 \\\\\n                                -ob2 $obam2 \\\\\n                                -aob2 $aobam2 \\\\\n                                -ob3 $obam3 \\\\\n                                -aob3 $aobam3 \\\\\n                                -ed1 ${params.endo1} \\\\\n                                -ed2 ${params.endo2} \\\\\n                                -ed3 ${params.endo3} \\\\\n                                -p ${task.cpus}\n            \"\"\"\n\n        } else {\n            \"\"\"\n            samtools index $bam1\n            samtools index $bam2\n            samtools index $bam3\n            normalizedReadCount -n $name \\\\\n                                -b1 $bam1 \\\\\n                                -b2 $bam2 \\\\\n                                -b3 $bam3 \\\\\n                                -g1 $genome1 \\\\\n                                -g2 $genome2 \\\\\n                                -g3 $genome3 \\\\\n                                -r1 $organame1 \\\\\n                                -r2 $organame2 \\\\\n                                -r3 $organame3 \\\\\n                                -i ${params.identity} \\\\\n                                -o $outfile \\\\\n                                -ob1 $obam1 \\\\\n                                -ob2 $obam2 \\\\\n                                -ob3 $obam3 \\\\\n                                -ed1 ${params.endo1} \\\\\n                                -ed2 ${params.endo2} \\\\\n                                -ed3 ${params.endo3} \\\\\n                                -p ${task.cpus}\n            \"\"\"\n        }\n    }",
        "nb_lignes_process": 90,
        "string_script": "        outfile = name+\".bpc.csv\"\n        organame1 = params.name1\n        organame2 = params.name2\n        organame3 = params.name3\n\n        obam1 = name+\"_\"+organame1+\".filtered.bam\"\n        obam2 = name+\"_\"+organame2+\".filtered.bam\"\n        obam3 = name+\"_\"+organame3+\".filtered.bam\"\n        if (params.adna) {\n            aobam1 = name+\"_\"+organame1+\".ancient.filtered.bam\"\n            aobam2 = name+\"_\"+organame2+\".ancient.filtered.bam\"\n            aobam3 = name+\"_\"+organame3+\".ancient.filtered.bam\"\n            \"\"\"\n            samtools index $bam1\n            samtools index $bam2\n            samtools index $bam3\n            samtools index $abam1\n            samtools index $abam2\n            samtools index $abam3\n            normalizedReadCount -n $name \\\\\n                                -b1 $bam1 \\\\\n                                -ab1 $abam1 \\\\\n                                -b2 $bam2 \\\\\n                                -ab2 $abam2 \\\\\n                                -b3 $bam3 \\\\\n                                -ab3 $abam3 \\\\\n                                -g1 $genome1 \\\\\n                                -g2 $genome2 \\\\\n                                -g3 $genome3 \\\\\n                                -r1 $organame1 \\\\\n                                -r2 $organame2 \\\\\n                                -r3 $organame3 \\\\\n                                -i ${params.identity} \\\\\n                                -o $outfile \\\\\n                                -ob1 $obam1 \\\\\n                                -aob1 $aobam1 \\\\\n                                -ob2 $obam2 \\\\\n                                -aob2 $aobam2 \\\\\n                                -ob3 $obam3 \\\\\n                                -aob3 $aobam3 \\\\\n                                -ed1 ${params.endo1} \\\\\n                                -ed2 ${params.endo2} \\\\\n                                -ed3 ${params.endo3} \\\\\n                                -p ${task.cpus}\n            \"\"\"\n\n        } else {\n            \"\"\"\n            samtools index $bam1\n            samtools index $bam2\n            samtools index $bam3\n            normalizedReadCount -n $name \\\\\n                                -b1 $bam1 \\\\\n                                -b2 $bam2 \\\\\n                                -b3 $bam3 \\\\\n                                -g1 $genome1 \\\\\n                                -g2 $genome2 \\\\\n                                -g3 $genome3 \\\\\n                                -r1 $organame1 \\\\\n                                -r2 $organame2 \\\\\n                                -r3 $organame3 \\\\\n                                -i ${params.identity} \\\\\n                                -o $outfile \\\\\n                                -ob1 $obam1 \\\\\n                                -ob2 $obam2 \\\\\n                                -ob3 $obam3 \\\\\n                                -ed1 ${params.endo1} \\\\\n                                -ed2 ${params.endo2} \\\\\n                                -ed3 ${params.endo3} \\\\\n                                -p ${task.cpus}\n            \"\"\"\n        }",
        "nb_lignes_script": 71,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "(params",
            "pmd_aligned2",
            "pmd_aligned3",
            "alignment_genome2_pmd",
            "alignment_genome3_pmd",
            "alignment_genome1",
            "alignment_genome2",
            "alignment_genome3",
            "genome1Size",
            "genome2Size",
            "genome3Size"
        ],
        "nb_inputs": 11,
        "outputs": [
            "bp_count",
            "ancient_filtered_bam1",
            "ancient_filtered_bam2",
            "ancient_filtered_bam3"
        ],
        "nb_outputs": 4,
        "name_workflow": "maxibor__coproID",
        "directive": [
            "tag \"$name\"",
            "label 'process_low'",
            "echo true"
        ],
        "when": "",
        "stub": ""
    },
    "damageprofilerGenome1": {
        "name_process": "damageprofilerGenome1",
        "string_process": " process damageprofilerGenome1 {\n    tag \"$name\"\n\n    publishDir \"${params.outdir}/damageprofiler/${params.name1}\", mode: 'copy'\n\n    input:\n        set val(name), file(align) from ancient_filtered_bam1\n        file(fasta) from genome1damageprofiler\n    output:\n        file(\"*_freq.txt\") into damage_result_genome1\n        file(\"*dmgprof.json\") into dmgProf1_ch\n    script:\n        fwd_name = name+\"_otu_\"+params.name1+\".5pCtoT_freq.txt\"\n        rev_name = name+\"_otu_\"+params.name1+\".3pGtoA_freq.txt\"\n        bam_name = \"${name}_${params.name1}.bam\"\n        smp_name = \"${name}_${params.name1}\"\n        \"\"\"\n        mv $align $bam_name\n        damageprofiler -i $bam_name -r $fasta -o tmp\n        mv tmp/${smp_name}/5pCtoT_freq.txt $fwd_name\n        mv tmp/${smp_name}/3pGtoA_freq.txt $rev_name\n        mv tmp/${smp_name}/dmgprof.json ${smp_name}.dmgprof.json\n        \"\"\"\n    }",
        "nb_lignes_process": 22,
        "string_script": "        fwd_name = name+\"_otu_\"+params.name1+\".5pCtoT_freq.txt\"\n        rev_name = name+\"_otu_\"+params.name1+\".3pGtoA_freq.txt\"\n        bam_name = \"${name}_${params.name1}.bam\"\n        smp_name = \"${name}_${params.name1}\"\n        \"\"\"\n        mv $align $bam_name\n        damageprofiler -i $bam_name -r $fasta -o tmp\n        mv tmp/${smp_name}/5pCtoT_freq.txt $fwd_name\n        mv tmp/${smp_name}/3pGtoA_freq.txt $rev_name\n        mv tmp/${smp_name}/dmgprof.json ${smp_name}.dmgprof.json\n        \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ancient_filtered_bam1",
            "genome1damageprofiler"
        ],
        "nb_inputs": 2,
        "outputs": [
            "damage_result_genome1",
            "dmgProf1_ch"
        ],
        "nb_outputs": 2,
        "name_workflow": "maxibor__coproID",
        "directive": [
            "tag \"$name\"",
            "publishDir \"${params.outdir}/damageprofiler/${params.name1}\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "damageprofilerGenome2": {
        "name_process": "damageprofilerGenome2",
        "string_process": " process damageprofilerGenome2 {\n        tag \"$name\"\n\n        publishDir \"${params.outdir}/damageprofiler/${params.name2}\", mode: 'copy'\n\n        input:\n            set val(name), file(align) from ancient_filtered_bam2\n            file(fasta) from genome2damageprofiler\n        output:\n            file(\"*_freq.txt\") into damage_result_genome2\n            file(\"*dmgprof.json\") into dmgProf2_ch\n        script:\n            fwd_name = name+\"_otu_\"+params.name2+\".5pCtoT_freq.txt\"\n            rev_name = name+\"_otu_\"+params.name2+\".3pGtoA_freq.txt\"\n            bam_name = \"${name}_${params.name2}.bam\"\n            smp_name = \"${name}_${params.name2}\"\n            \"\"\"\n            mv $align $bam_name\n            damageprofiler -i $bam_name -r $fasta -o tmp\n            mv tmp/${smp_name}/5pCtoT_freq.txt $fwd_name\n            mv tmp/${smp_name}/3pGtoA_freq.txt $rev_name\n            mv tmp/${smp_name}/dmgprof.json ${smp_name}.dmgprof.json\n            \"\"\"\n    }",
        "nb_lignes_process": 22,
        "string_script": "            fwd_name = name+\"_otu_\"+params.name2+\".5pCtoT_freq.txt\"\n            rev_name = name+\"_otu_\"+params.name2+\".3pGtoA_freq.txt\"\n            bam_name = \"${name}_${params.name2}.bam\"\n            smp_name = \"${name}_${params.name2}\"\n            \"\"\"\n            mv $align $bam_name\n            damageprofiler -i $bam_name -r $fasta -o tmp\n            mv tmp/${smp_name}/5pCtoT_freq.txt $fwd_name\n            mv tmp/${smp_name}/3pGtoA_freq.txt $rev_name\n            mv tmp/${smp_name}/dmgprof.json ${smp_name}.dmgprof.json\n            \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ancient_filtered_bam2",
            "genome2damageprofiler"
        ],
        "nb_inputs": 2,
        "outputs": [
            "damage_result_genome2",
            "dmgProf2_ch"
        ],
        "nb_outputs": 2,
        "name_workflow": "maxibor__coproID",
        "directive": [
            "tag \"$name\"",
            "publishDir \"${params.outdir}/damageprofiler/${params.name2}\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "damageprofilerGenome3": {
        "name_process": "damageprofilerGenome3",
        "string_process": " process damageprofilerGenome3 {\n        tag \"$name\"\n\n        publishDir \"${params.outdir}/damageprofiler/${params.name3}\", mode: 'copy'\n\n        input:\n            set val(name), file(align) from ancient_filtered_bam3\n            file(fasta) from genome3damageprofiler\n        output:\n            file(\"*_freq.txt\") into damage_result_genome3\n            file(\"*dmgprof.json\") into dmgProf3_ch\n        script:\n            fwd_name = name+\"_otu_\"+params.name3+\".5pCtoT_freq.txt\"\n            rev_name = name+\"_otu_\"+params.name3+\".3pGtoA_freq.txt\"\n            bam_name = \"${name}_${params.name3}.bam\"\n            smp_name = \"${name}_${params.name3}\"\n            \"\"\"\n            mv $align $bam_name\n            damageprofiler -i $bam_name -r $fasta -o tmp\n            mv tmp/${smp_name}/5pCtoT_freq.txt $fwd_name\n            mv tmp/${smp_name}/3pGtoA_freq.txt $rev_name\n            mv tmp/${smp_name}/dmgprof.json ${smp_name}.dmgprof.json\n            \"\"\"\n        }",
        "nb_lignes_process": 22,
        "string_script": "            fwd_name = name+\"_otu_\"+params.name3+\".5pCtoT_freq.txt\"\n            rev_name = name+\"_otu_\"+params.name3+\".3pGtoA_freq.txt\"\n            bam_name = \"${name}_${params.name3}.bam\"\n            smp_name = \"${name}_${params.name3}\"\n            \"\"\"\n            mv $align $bam_name\n            damageprofiler -i $bam_name -r $fasta -o tmp\n            mv tmp/${smp_name}/5pCtoT_freq.txt $fwd_name\n            mv tmp/${smp_name}/3pGtoA_freq.txt $rev_name\n            mv tmp/${smp_name}/dmgprof.json ${smp_name}.dmgprof.json\n            \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ancient_filtered_bam3",
            "genome3damageprofiler"
        ],
        "nb_inputs": 2,
        "outputs": [
            "damage_result_genome3",
            "dmgProf3_ch"
        ],
        "nb_outputs": 2,
        "name_workflow": "maxibor__coproID",
        "directive": [
            "tag \"$name\"",
            "publishDir \"${params.outdir}/damageprofiler/${params.name3}\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "concatenateRatios": {
        "name_process": "concatenateRatios",
        "string_process": "\nprocess concatenateRatios {\n\n    publishDir \"${params.outdir}\", mode: 'copy', pattern: '*.csv'\n\n    input:\n        file(count) from bp_count.collect()\n        file(sp) from sourcepredict_out\n    output:\n        file(\"coproID_result.csv\") into coproid_res\n        file(\"coproID_bp.csv\") into coproid_bp_count\n    script:\n        outfile = \"coproID_result.csv\"\n        \"\"\"\n        ls -1 *.bpc.csv | head -1 | xargs head -1 > coproID_bp.csv\n        tail -q -n +2 *.bpc.csv >> coproID_bp.csv\n        merge_bp_sp.py -c coproID_bp.csv -s $sp -o $outfile\n        \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "        outfile = \"coproID_result.csv\"\n        \"\"\"\n        ls -1 *.bpc.csv | head -1 | xargs head -1 > coproID_bp.csv\n        tail -q -n +2 *.bpc.csv >> coproID_bp.csv\n        merge_bp_sp.py -c coproID_bp.csv -s $sp -o $outfile\n        \"\"\"",
        "nb_lignes_script": 5,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "bp_count",
            "sourcepredict_out"
        ],
        "nb_inputs": 2,
        "outputs": [
            "coproid_res",
            "coproid_bp_count"
        ],
        "nb_outputs": 2,
        "name_workflow": "maxibor__coproID",
        "directive": [
            "publishDir \"${params.outdir}\", mode: 'copy', pattern: '*.csv'"
        ],
        "when": "",
        "stub": ""
    },
    "generate_report_adna_3_genomes": {
        "name_process": "generate_report_adna_3_genomes",
        "string_process": " process generate_report_adna_3_genomes {\n\n            publishDir \"${params.outdir}\", mode: 'copy'\n\n            input:\n                file(copro_csv) from coproid_res\n                file(thelogo) from  \n                file(dplot1) from damage_result_genome1.collect().ifEmpty([])\n                file(dplot1) from damage_result_genome2.collect().ifEmpty([])\n                file(dplot3) from damage_result_genome3.collect().ifEmpty([])\n                file(umap) from  sourcepredict_embed_out\n                file(report) from report_template_ch\n            output:\n                file(\"*.html\") into coproid_report\n            script:\n                \"\"\"\n                echo ${workflow.manifest.version} > version.txt\n                jupyter nbconvert \\\\\n                        --TagRemovePreprocessor.remove_input_tags='{\"remove_cell\"}' \\\\\n                        --TagRemovePreprocessor.remove_all_outputs_tags='{\"remove_output\"}' \\\\\n                        --TemplateExporter.exclude_input_prompt=True \\\\\n                        --TemplateExporter.exclude_output_prompt=True \\\\\n                        --ExecutePreprocessor.timeout=200 \\\\\n                        --execute \\\\\n                        --to html_embed $report\n                \"\"\"\n        }",
        "nb_lignes_process": 25,
        "string_script": "                \"\"\"\n                echo ${workflow.manifest.version} > version.txt\n                jupyter nbconvert \\\\\n                        --TagRemovePreprocessor.remove_input_tags='{\"remove_cell\"}' \\\\\n                        --TagRemovePreprocessor.remove_all_outputs_tags='{\"remove_output\"}' \\\\\n                        --TemplateExporter.exclude_input_prompt=True \\\\\n                        --TemplateExporter.exclude_output_prompt=True \\\\\n                        --ExecutePreprocessor.timeout=200 \\\\\n                        --execute \\\\\n                        --to html_embed $report\n                \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "Jupyterhub"
        ],
        "tools_url": [
            "https://bio.tools/Jupyterhub"
        ],
        "tools_dico": [
            {
                "name": "Jupyterhub",
                "uri": "https://bio.tools/Jupyterhub",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3372",
                            "term": "Software engineering"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3372",
                            "term": "Computer programming"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3372",
                            "term": "Software development"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Jupyter notebooks in science gateways.\n\nJupyter Notebooks empower scientists to create executable documents that include text, equations, code and figures. Notebooks are a simple way to create reproducible and shareable workflows. The Jupyter developers have also released a multi-user notebook environment: Jupyterhub. Jupyterhub provides an extensible platform for handling user authentication and spawning the Notebook application to each user. I developed a plugin for Jupyterhub to spawn notebooks on a Supercomputer and integrated the authentication with CILogon and XSEDE. Scientists can authenticate on their browser and connect to a Jupyter Notebook instance running on the computing node of a Supercomputer, in my test deployment SDSC Comet. Jupyterhub can benefit Science Gateways by providing an expressive interface to a centralized environment with many software tools pre-installed and allow scientists to access Gateway functionality via web API.\n\n||| HOMEPAGE MISSING!",
                "homepage": "https://doi.org/10.7287/PEERJ.PREPRINTS.2577V2"
            }
        ],
        "inputs": [
            "coproid_res",
            "thelogo",
            "damage_result_genome1",
            "damage_result_genome2",
            "damage_result_genome3",
            "sourcepredict_embed_out",
            "report_template_ch"
        ],
        "nb_inputs": 7,
        "outputs": [
            "coproid_report"
        ],
        "nb_outputs": 1,
        "name_workflow": "maxibor__coproID",
        "directive": [
            "publishDir \"${params.outdir}\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "generate_report_adna_2_genomes": {
        "name_process": "generate_report_adna_2_genomes",
        "string_process": " process generate_report_adna_2_genomes {\n\n            publishDir \"${params.outdir}\", mode: 'copy'\n\n            input:\n                file(copro_csv) from coproid_res\n                file(thelogo) from coproid_logo\n                file(dplot1) from damage_result_genome1.collect().ifEmpty([])\n                file(dplot1) from damage_result_genome2.collect().ifEmpty([])\n                file(umap) from  sourcepredict_embed_out\n                file(report) from report_template_ch\n            output:\n                file(\"*.html\") into coproid_report\n            script:\n                \"\"\"\n                echo ${workflow.manifest.version} > version.txt\n                jupyter nbconvert \\\\\n                        --TagRemovePreprocessor.remove_input_tags='{\"remove_cell\"}' \\\\\n                        --TagRemovePreprocessor.remove_all_outputs_tags='{\"remove_output\"}' \\\\\n                        --TemplateExporter.exclude_input_prompt=True \\\\\n                        --TemplateExporter.exclude_output_prompt=True \\\\\n                        --ExecutePreprocessor.timeout=200 \\\\\n                        --execute \\\\\n                        --to html_embed $report\n                \"\"\"\n        }",
        "nb_lignes_process": 24,
        "string_script": "                \"\"\"\n                echo ${workflow.manifest.version} > version.txt\n                jupyter nbconvert \\\\\n                        --TagRemovePreprocessor.remove_input_tags='{\"remove_cell\"}' \\\\\n                        --TagRemovePreprocessor.remove_all_outputs_tags='{\"remove_output\"}' \\\\\n                        --TemplateExporter.exclude_input_prompt=True \\\\\n                        --TemplateExporter.exclude_output_prompt=True \\\\\n                        --ExecutePreprocessor.timeout=200 \\\\\n                        --execute \\\\\n                        --to html_embed $report\n                \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "Jupyterhub"
        ],
        "tools_url": [
            "https://bio.tools/Jupyterhub"
        ],
        "tools_dico": [
            {
                "name": "Jupyterhub",
                "uri": "https://bio.tools/Jupyterhub",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3372",
                            "term": "Software engineering"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3372",
                            "term": "Computer programming"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3372",
                            "term": "Software development"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Jupyter notebooks in science gateways.\n\nJupyter Notebooks empower scientists to create executable documents that include text, equations, code and figures. Notebooks are a simple way to create reproducible and shareable workflows. The Jupyter developers have also released a multi-user notebook environment: Jupyterhub. Jupyterhub provides an extensible platform for handling user authentication and spawning the Notebook application to each user. I developed a plugin for Jupyterhub to spawn notebooks on a Supercomputer and integrated the authentication with CILogon and XSEDE. Scientists can authenticate on their browser and connect to a Jupyter Notebook instance running on the computing node of a Supercomputer, in my test deployment SDSC Comet. Jupyterhub can benefit Science Gateways by providing an expressive interface to a centralized environment with many software tools pre-installed and allow scientists to access Gateway functionality via web API.\n\n||| HOMEPAGE MISSING!",
                "homepage": "https://doi.org/10.7287/PEERJ.PREPRINTS.2577V2"
            }
        ],
        "inputs": [
            "coproid_res",
            "coproid_logo",
            "damage_result_genome1",
            "damage_result_genome2",
            "sourcepredict_embed_out",
            "report_template_ch"
        ],
        "nb_inputs": 6,
        "outputs": [
            "coproid_report"
        ],
        "nb_outputs": 1,
        "name_workflow": "maxibor__coproID",
        "directive": [
            "publishDir \"${params.outdir}\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "generate_report": {
        "name_process": "generate_report",
        "string_process": " process generate_report {\n\n        publishDir \"${params.outdir}\", mode: 'copy', pattern: '*.html'\n\n        input:\n            file(copro_csv) from coproid_res\n            file(umap) from  sourcepredict_embed_out\n            file(report) from report_template_ch\n        output:\n            file(\"*.html\") into coproid_report\n        script:\n            \"\"\"\n            echo ${workflow.manifest.version} > version.txt\n            jupyter nbconvert \\\\\n                    --TagRemovePreprocessor.remove_input_tags='{\"remove_cell\"}' \\\\\n                    --TagRemovePreprocessor.remove_all_outputs_tags='{\"remove_output\"}' \\\\\n                    --TemplateExporter.exclude_input_prompt=True \\\\\n                    --TemplateExporter.exclude_output_prompt=True \\\\\n                    --ExecutePreprocessor.timeout=200 \\\\\n                    --execute \\\\\n                    --to html_embed $report\n            \"\"\"\n    }",
        "nb_lignes_process": 21,
        "string_script": "            \"\"\"\n            echo ${workflow.manifest.version} > version.txt\n            jupyter nbconvert \\\\\n                    --TagRemovePreprocessor.remove_input_tags='{\"remove_cell\"}' \\\\\n                    --TagRemovePreprocessor.remove_all_outputs_tags='{\"remove_output\"}' \\\\\n                    --TemplateExporter.exclude_input_prompt=True \\\\\n                    --TemplateExporter.exclude_output_prompt=True \\\\\n                    --ExecutePreprocessor.timeout=200 \\\\\n                    --execute \\\\\n                    --to html_embed $report\n            \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "Jupyterhub"
        ],
        "tools_url": [
            "https://bio.tools/Jupyterhub"
        ],
        "tools_dico": [
            {
                "name": "Jupyterhub",
                "uri": "https://bio.tools/Jupyterhub",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Workflows"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3372",
                            "term": "Software engineering"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0769",
                            "term": "Pipelines"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3372",
                            "term": "Computer programming"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3372",
                            "term": "Software development"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Jupyter notebooks in science gateways.\n\nJupyter Notebooks empower scientists to create executable documents that include text, equations, code and figures. Notebooks are a simple way to create reproducible and shareable workflows. The Jupyter developers have also released a multi-user notebook environment: Jupyterhub. Jupyterhub provides an extensible platform for handling user authentication and spawning the Notebook application to each user. I developed a plugin for Jupyterhub to spawn notebooks on a Supercomputer and integrated the authentication with CILogon and XSEDE. Scientists can authenticate on their browser and connect to a Jupyter Notebook instance running on the computing node of a Supercomputer, in my test deployment SDSC Comet. Jupyterhub can benefit Science Gateways by providing an expressive interface to a centralized environment with many software tools pre-installed and allow scientists to access Gateway functionality via web API.\n\n||| HOMEPAGE MISSING!",
                "homepage": "https://doi.org/10.7287/PEERJ.PREPRINTS.2577V2"
            }
        ],
        "inputs": [
            "coproid_res",
            "sourcepredict_embed_out",
            "report_template_ch"
        ],
        "nb_inputs": 3,
        "outputs": [
            "coproid_report"
        ],
        "nb_outputs": 1,
        "name_workflow": "maxibor__coproID",
        "directive": [
            "publishDir \"${params.outdir}\", mode: 'copy', pattern: '*.html'"
        ],
        "when": "",
        "stub": ""
    },
    "get_software_versions": {
        "name_process": "get_software_versions",
        "string_process": "\nprocess get_software_versions {\n    publishDir \"${params.outdir}/pipeline_info\", mode: 'copy',\n        saveAs: { filename ->\n                      if (filename.indexOf(\".csv\") > 0) filename\n                      else null\n                }\n\n    output:\n    file 'software_versions_mqc.yaml' into ch_software_versions_yaml\n    file \"software_versions.csv\"\n\n    script:\n    \"\"\"\n    echo $workflow.manifest.version > v_pipeline.txt\n    echo $workflow.nextflow.version > v_nextflow.txt\n    fastqc --version > v_fastqc.txt\n    multiqc --version > v_multiqc.txt\n    sourcepredict -h  > v_sourcepredict.txt\n    samtools --version > v_samtools.txt\n    kraken2 --version > v_kraken2.txt\n    bowtie2 --version > v_bowtie2.txt\n    python --version > v_python.txt\n    AdapterRemoval --version 2> v_adapterremoval.txt\n    scrape_software_versions.py &> software_versions_mqc.yaml\n    \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "    \"\"\"\n    echo $workflow.manifest.version > v_pipeline.txt\n    echo $workflow.nextflow.version > v_nextflow.txt\n    fastqc --version > v_fastqc.txt\n    multiqc --version > v_multiqc.txt\n    sourcepredict -h  > v_sourcepredict.txt\n    samtools --version > v_samtools.txt\n    kraken2 --version > v_kraken2.txt\n    bowtie2 --version > v_bowtie2.txt\n    python --version > v_python.txt\n    AdapterRemoval --version 2> v_adapterremoval.txt\n    scrape_software_versions.py &> software_versions_mqc.yaml\n    \"\"\"",
        "nb_lignes_script": 12,
        "language_script": "bash",
        "tools": [
            "FastQC",
            "MultiQC",
            "SAMtools",
            "kraken2",
            "Rbowtie2"
        ],
        "tools_url": [
            "https://bio.tools/fastqc",
            "https://bio.tools/multiqc",
            "https://bio.tools/samtools",
            "https://bio.tools/kraken2",
            "https://bio.tools/rbowtie2"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            },
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "kraken2",
                "uri": "https://bio.tools/kraken2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0637",
                            "term": "Taxonomy"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3174",
                            "term": "Metagenomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3460",
                                    "term": "Taxonomic classification"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3460",
                                    "term": "Taxonomy assignment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3494",
                                "term": "DNA sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3028",
                                "term": "Taxonomy"
                            }
                        ]
                    }
                ],
                "description": "Kraken 2 is the newest version of Kraken, a taxonomic classification system using exact k-mer matches to achieve high accuracy and fast classification speeds. This classifier matches each k-mer within a query sequence to the lowest common ancestor (LCA) of all genomes containing the given k-mer. The k-mer assignments inform the classification algorithm.",
                "homepage": "https://ccb.jhu.edu/software/kraken2/"
            },
            {
                "name": "Rbowtie2",
                "uri": "https://bio.tools/rbowtie2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence merging"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0232",
                                    "term": "Sequence splicing"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This package provides an R wrapper of the popular bowtie2 sequencing reads aligner and AdapterRemoval, a convenient tool for rapid adapter trimming, identification, and read merging.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/Rbowtie2.html"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [
            "ch_software_versions_yaml"
        ],
        "nb_outputs": 1,
        "name_workflow": "maxibor__coproID",
        "directive": [
            "publishDir \"${params.outdir}/pipeline_info\", mode: 'copy' , saveAs: { filename -> if (filename.indexOf(\".csv\") > 0) filename else null }"
        ],
        "when": "",
        "stub": ""
    },
    "multiqc": {
        "name_process": "multiqc",
        "string_process": "\nprocess multiqc {\n\n    publishDir \"${params.outdir}\", mode: 'copy'\n\n    input:\n        file (ar:'adapter_removal/*') from adapter_removal_results.collect()\n        file (al1: 'alignment/*') from align1_multiqc.collect()\n        file ('fastqc/*') from fastqc_results.collect()\n        file ('DamageProfiler/*') from dmgProf1_ch.collect()\n        file ('DamageProfiler/*') from dmgProf2_ch.collect()\n        file ('software_versions/*') from ch_software_versions_yaml.collect()\n        file(multiqc_conf) from ch_multiqc_config\n        file logo from coproid_logo\n    output:\n        file 'multiqc_report.html' into multiqc_report\n\n    script:\n        \"\"\"\n        multiqc -f -d adapter_removal alignment fastqc DamageProfiler software_versions software_versions -c $multiqc_conf\n        \"\"\"\n}",
        "nb_lignes_process": 20,
        "string_script": "        \"\"\"\n        multiqc -f -d adapter_removal alignment fastqc DamageProfiler software_versions software_versions -c $multiqc_conf\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [
            "adapter_removal_results",
            "align1_multiqc",
            "fastqc_results",
            "dmgProf1_ch",
            "dmgProf2_ch",
            "ch_software_versions_yaml",
            "ch_multiqc_config",
            "coproid_logo"
        ],
        "nb_inputs": 8,
        "outputs": [
            "multiqc_report"
        ],
        "nb_outputs": 1,
        "name_workflow": "maxibor__coproID",
        "directive": [
            "publishDir \"${params.outdir}\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    },
    "output_documentation": {
        "name_process": "output_documentation",
        "string_process": "\nprocess output_documentation {\n    publishDir \"${params.outdir}/pipeline_info\", mode: 'copy'\n\n    input:\n    file output_docs from ch_output_docs\n\n    output:\n    file \"results_description.html\"\n\n    script:\n    \"\"\"\n    markdown_to_html.py $output_docs -o results_description.html\n    \"\"\"\n}",
        "nb_lignes_process": 13,
        "string_script": "    \"\"\"\n    markdown_to_html.py $output_docs -o results_description.html\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_output_docs"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "maxibor__coproID",
        "directive": [
            "publishDir \"${params.outdir}/pipeline_info\", mode: 'copy'"
        ],
        "when": "",
        "stub": ""
    }
}