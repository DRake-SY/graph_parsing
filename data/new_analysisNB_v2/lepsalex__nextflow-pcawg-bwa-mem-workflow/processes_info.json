{
    "fetchFiles": {
        "name_process": "fetchFiles",
        "string_process": "\nprocess fetchFiles {\n    container 'lepsalex/minio-mc-bash'\n\n    tag \"$params.inputsBucket\"\n\n    cpus params.cpus\n    memory \"${params.mem} MB\"\n\n    output:\n                                                                                     \n                                                                             \n                                                                   \n    file \"${params.inputsBucket}/*.bam\" into bams_rh, bams_cr\n\n    \"\"\"\n    mc config host add store ${params.minioURI} ${params.minioAccessKey} ${params.minioSecretKey}\n    mc cp -r store/${params.inputsBucket} .\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "\"\"\"\n    mc config host add store ${params.minioURI} ${params.minioAccessKey} ${params.minioSecretKey}\n    mc cp -r store/${params.inputsBucket} .\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "MCF"
        ],
        "tools_url": [
            "https://bio.tools/mcf"
        ],
        "tools_dico": [
            {
                "name": "MCF",
                "uri": "https://bio.tools/mcf",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3573",
                            "term": "Freshwater biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0092",
                            "term": "Data visualisation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0610",
                            "term": "Ecology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0092",
                            "term": "Data rendering"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3443",
                                    "term": "Image analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Image segmentation algorithms and example code for automated single cell analysis.",
                "homepage": "http://www.stat.duke.edu/research/software/west/MCF/index.html"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [
            "bams_rh",
            "bams_cr"
        ],
        "nb_outputs": 2,
        "name_workflow": "lepsalex__nextflow-pcawg-bwa-mem-workflow",
        "directive": [
            "container 'lepsalex/minio-mc-bash'",
            "tag \"$params.inputsBucket\"",
            "cpus params.cpus",
            "memory \"${params.mem} MB\""
        ],
        "when": "",
        "stub": ""
    },
    "readHeader": {
        "name_process": "readHeader",
        "string_process": "\nprocess readHeader {\n\n    tag \"$bam.baseName\"\n\n    cpus params.cpus\n    memory \"${params.mem} MB\"\n\n    input:\n    file(bam) from bams_rh.flatMap()\n\n    output:\n    set val(\"${bam.baseName}\"), file(bam), file(\"${bam.baseName}_header.txt\") into headers\n\n    \"\"\"\n    samtools view -H ${bam} | \\\\\n    perl -nae 'next unless /^\\\\@RG/; s/\\\\tPI:\\\\t/\\\\t/; s/\\\\tPI:\\\\s*\\\\t/\\\\t/; s/\\\\tPI:\\\\s*\\\\z/\\\\n/; s/\\\\t/\\\\\\\\t/g; print' > \\\\\n    ${bam.baseName}_header.txt\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "\"\"\"\n    samtools view -H ${bam} | \\\\\n    perl -nae 'next unless /^\\\\@RG/; s/\\\\tPI:\\\\t/\\\\t/; s/\\\\tPI:\\\\s*\\\\t/\\\\t/; s/\\\\tPI:\\\\s*\\\\z/\\\\n/; s/\\\\t/\\\\\\\\t/g; print' > \\\\\n    ${bam.baseName}_header.txt\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "bams_rh"
        ],
        "nb_inputs": 1,
        "outputs": [
            "headers"
        ],
        "nb_outputs": 1,
        "name_workflow": "lepsalex__nextflow-pcawg-bwa-mem-workflow",
        "directive": [
            "tag \"$bam.baseName\"",
            "cpus params.cpus",
            "memory \"${params.mem} MB\""
        ],
        "when": "",
        "stub": ""
    },
    "countReads": {
        "name_process": "countReads",
        "string_process": "\nprocess countReads {\n\n    tag \"$bam.baseName\"\n\n    cpus params.cpus\n    memory \"${params.mem} MB\"\n\n    input:\n    file bam from bams_cr.flatMap()\n\n    output:\n    set val(\"${bam.baseName}\"), file(\"${bam.baseName}_read_count.txt\") into counts\n\n    \"\"\"\n    samtools view ${bam} | \\\\\n    wc -l > ${bam.baseName}_read_count.txt\n    \"\"\"\n}",
        "nb_lignes_process": 17,
        "string_script": "\"\"\"\n    samtools view ${bam} | \\\\\n    wc -l > ${bam.baseName}_read_count.txt\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "bams_cr"
        ],
        "nb_inputs": 1,
        "outputs": [
            "counts"
        ],
        "nb_outputs": 1,
        "name_workflow": "lepsalex__nextflow-pcawg-bwa-mem-workflow",
        "directive": [
            "tag \"$bam.baseName\"",
            "cpus params.cpus",
            "memory \"${params.mem} MB\""
        ],
        "when": "",
        "stub": ""
    },
    "align": {
        "name_process": "align",
        "string_process": "\nprocess align {\n\n    tag \"$bamName\"\n\n    cpus params.cpus_big\n    memory \"${params.mem_big} MB\"\n\n    input:\n    file reference_gz from reference_gz_ch\n                                                              \n                                                                                   \n    file reference_gz_fai from reference_gz_fai_ch\n    file reference_gz_amb from reference_gz_amb_ch\n    file reference_gz_ann from reference_gz_ann_ch\n    file reference_gz_bwt from reference_gz_bwt_ch\n    file reference_gz_pac from reference_gz_pac_ch\n    file reference_gz_sa from reference_gz_sa_ch\n                                                               \n    set val(bamName), file(bam), file(bamHeader), val(headerText), file(readCount) from headers.map {\n        [it[0], it[1], it[2], file(it[2]).text]\n    }.join(counts)\n\n    output:\n    set val(bamName), file(\"${bamName}_aligned.bam\"), file(bamHeader), file(readCount) into aligned_bams\n\n    \"\"\"\n    bamtofastq exclude=QCFAIL,SECONDARY,SUPPLEMENTARY T=${bamName}.t S=${bamName}.s O=${bamName}.o O2=${bamName}.o2 collate=1 tryoq=1 filename=${bam} | \\\\\n    bwa mem -p -t ${params.threads} -T 0 -R \"${headerText.trim()}\" ${reference_gz} - | \\\\\n    bamsort blockmb=${params.mem} inputformat=sam level=1 outputthreads=2 calmdnm=1 calmdnmrecompindetonly=1 calmdnmreference=${reference_gz} tmpfile=${bamName}.sorttmp O=${bamName}_aligned.bam\n    \"\"\"\n}",
        "nb_lignes_process": 30,
        "string_script": "\"\"\"\n    bamtofastq exclude=QCFAIL,SECONDARY,SUPPLEMENTARY T=${bamName}.t S=${bamName}.s O=${bamName}.o O2=${bamName}.o2 collate=1 tryoq=1 filename=${bam} | \\\\\n    bwa mem -p -t ${params.threads} -T 0 -R \"${headerText.trim()}\" ${reference_gz} - | \\\\\n    bamsort blockmb=${params.mem} inputformat=sam level=1 outputthreads=2 calmdnm=1 calmdnmrecompindetonly=1 calmdnmreference=${reference_gz} tmpfile=${bamName}.sorttmp O=${bamName}_aligned.bam\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "BWA"
        ],
        "tools_url": [
            "https://bio.tools/bwa"
        ],
        "tools_dico": [
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            }
        ],
        "inputs": [
            "reference_gz_ch",
            "reference_gz_fai_ch",
            "reference_gz_amb_ch",
            "reference_gz_ann_ch",
            "reference_gz_bwt_ch",
            "reference_gz_pac_ch",
            "reference_gz_sa_ch",
            "headers",
            "counts"
        ],
        "nb_inputs": 9,
        "outputs": [
            "aligned_bams"
        ],
        "nb_outputs": 1,
        "name_workflow": "lepsalex__nextflow-pcawg-bwa-mem-workflow",
        "directive": [
            "tag \"$bamName\"",
            "cpus params.cpus_big",
            "memory \"${params.mem_big} MB\""
        ],
        "when": "",
        "stub": ""
    },
    "bam_stats_qc": {
        "name_process": "bam_stats_qc",
        "string_process": "\nprocess bam_stats_qc {\n\n    tag \"$bamName\"\n\n    cpus params.cpus\n    memory \"${params.mem} MB\"\n\n    input:\n    set val(bamName), file(bam), file(bamHeader), file(readCount) from aligned_bams\n\n    output:\n    file \"${bamName}.bas\" into bam_stats\n    file bam into verified_bams\n\n    \"\"\"\n    bam_stats -i ${bam} -o ${bamName}.bas \\\n    && \\\n    verify_read_groups.pl --header-file ${bamHeader} --bas-file ${bamName + \".bas\"} --input-read-count-file ${readCount}\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "\"\"\"\n    bam_stats -i ${bam} -o ${bamName}.bas \\\n    && \\\n    verify_read_groups.pl --header-file ${bamHeader} --bas-file ${bamName + \".bas\"} --input-read-count-file ${readCount}\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "aligned_bams"
        ],
        "nb_inputs": 1,
        "outputs": [
            "bam_stats",
            "verified_bams"
        ],
        "nb_outputs": 2,
        "name_workflow": "lepsalex__nextflow-pcawg-bwa-mem-workflow",
        "directive": [
            "tag \"$bamName\"",
            "cpus params.cpus",
            "memory \"${params.mem} MB\""
        ],
        "when": "",
        "stub": ""
    },
    "merge_aligned": {
        "name_process": "merge_aligned",
        "string_process": "\nprocess merge_aligned {\n\n    tag \"$verified_bam_\"\n\n    cpus params.cpus_mid\n    memory \"${params.mem_mid} MB\"\n\n    input:\n                                                                   \n                                                                        \n    file(\"verified_bam_\") from verified_bams.collect()\n\n    output:\n    file \"${params.outputFilePrefix}_aligned.bam\" into mb_for_extract_ur, mb_for_extract_bru, mappedReadsOutput\n    file \"${params.outputFilePrefix}_aligned.metrics\" into merged_bam_metrics, mappedReadsMetricsOutput\n\n    \"\"\"\n    bammarkduplicates \\\n    I=${verified_bam_.join(\" I=\")} \\\n    O=${params.outputFilePrefix}_aligned.bam \\\n    M=${params.outputFilePrefix}_aligned.metrics \\\n    tmpfile=${params.outputFilePrefix}_aligned.biormdup \\\n    markthreads=${params.threads} \\\n    rewritebam=1 \\\n    rewritebamlevel=1 \\\n    index=1 \\\n    md5=1\n    \"\"\"\n}",
        "nb_lignes_process": 28,
        "string_script": "\"\"\"\n    bammarkduplicates \\\n    I=${verified_bam_.join(\" I=\")} \\\n    O=${params.outputFilePrefix}_aligned.bam \\\n    M=${params.outputFilePrefix}_aligned.metrics \\\n    tmpfile=${params.outputFilePrefix}_aligned.biormdup \\\n    markthreads=${params.threads} \\\n    rewritebam=1 \\\n    rewritebamlevel=1 \\\n    index=1 \\\n    md5=1\n    \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "verified_bams"
        ],
        "nb_inputs": 1,
        "outputs": [
            "mb_for_extract_ur",
            "mb_for_extract_bru",
            "mappedReadsOutput",
            "merged_bam_metrics",
            "mappedReadsMetricsOutput"
        ],
        "nb_outputs": 5,
        "name_workflow": "lepsalex__nextflow-pcawg-bwa-mem-workflow",
        "directive": [
            "tag \"$verified_bam_\"",
            "cpus params.cpus_mid",
            "memory \"${params.mem_mid} MB\""
        ],
        "when": "",
        "stub": ""
    },
    "extract_unaligned_reads": {
        "name_process": "extract_unaligned_reads",
        "string_process": "\nprocess extract_unaligned_reads {\n\n    tag \"$merged_bam - $f\"\n\n    cpus params.cpus\n    memory \"${params.mem} MB\"\n\n                                            \n    extract_flags = [4, 8]\n\n    input:\n    file reference_gz from reference_gz_ch\n    file reference_gz_fai from reference_gz_fai_ch\n    file merged_bam from mb_for_extract_ur\n    each f from extract_flags\n\n    output:\n    file \"${params.outputFilePrefix}_unmappedReads_f${f}.bam\" into extract_ur_unmapped\n\n                                                                                                       \n    \"\"\"\n    samtools view -h -f ${f} ${merged_bam} | \\\\\n    remove_both_ends_unmapped_reads.pl | \\\\\n    bamsort blockmb=${params.mem} inputformat=sam level=1 outputthreads=2 calmdnm=1 calmdnmrecompindetonly=1 calmdnmreference=${reference_gz} tmpfile=${params.outputFilePrefix}.sorttmp O=${params.outputFilePrefix}_unmappedReads_f${f}.bam\n    \"\"\"\n}",
        "nb_lignes_process": 25,
        "string_script": "\"\"\"\n    samtools view -h -f ${f} ${merged_bam} | \\\\\n    remove_both_ends_unmapped_reads.pl | \\\\\n    bamsort blockmb=${params.mem} inputformat=sam level=1 outputthreads=2 calmdnm=1 calmdnmrecompindetonly=1 calmdnmreference=${reference_gz} tmpfile=${params.outputFilePrefix}.sorttmp O=${params.outputFilePrefix}_unmappedReads_f${f}.bam\n    \"\"\"",
        "nb_lignes_script": 4,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "reference_gz_ch",
            "reference_gz_fai_ch",
            "mb_for_extract_ur",
            "extract_flags"
        ],
        "nb_inputs": 4,
        "outputs": [
            "extract_ur_unmapped"
        ],
        "nb_outputs": 1,
        "name_workflow": "lepsalex__nextflow-pcawg-bwa-mem-workflow",
        "directive": [
            "tag \"$merged_bam - $f\"",
            "cpus params.cpus",
            "memory \"${params.mem} MB\" extract_flags = [4, 8]"
        ],
        "when": "",
        "stub": ""
    },
    "extract_both_reads_unaligned": {
        "name_process": "extract_both_reads_unaligned",
        "string_process": "\nprocess extract_both_reads_unaligned {\n\n    tag \"$merged_bam\"\n\n    cpus params.cpus\n    memory \"${params.mem} MB\"\n\n    input:\n    file merged_bam from mb_for_extract_bru\n\n    output:\n    file \"${params.outputFilePrefix}_unmappedReads_f12.bam\" into extract_bru_unmapped\n\n    \"\"\"\n    samtools view -h -b -f 12 ${merged_bam} > \"${params.outputFilePrefix}_unmappedReads_f12.bam\"\n    \"\"\"\n}",
        "nb_lignes_process": 16,
        "string_script": "\"\"\"\n    samtools view -h -b -f 12 ${merged_bam} > \"${params.outputFilePrefix}_unmappedReads_f12.bam\"\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "mb_for_extract_bru"
        ],
        "nb_inputs": 1,
        "outputs": [
            "extract_bru_unmapped"
        ],
        "nb_outputs": 1,
        "name_workflow": "lepsalex__nextflow-pcawg-bwa-mem-workflow",
        "directive": [
            "tag \"$merged_bam\"",
            "cpus params.cpus",
            "memory \"${params.mem} MB\""
        ],
        "when": "",
        "stub": ""
    },
    "merge_unmappedReads": {
        "name_process": "merge_unmappedReads",
        "string_process": "\nprocess merge_unmappedReads {\n\n    tag \"$unmapped_\"\n\n    cpus params.cpus_mid\n    memory \"${params.mem_mid} MB\"\n    \n    input:\n                                                                   \n                                                                        \n    file(\"unmapped_\") from extract_ur_unmapped.concat(extract_bru_unmapped).collect()\n\n    output:\n    file \"${params.outputFilePrefix}_unmappedRead.bam\" into unmappedReadsOutput\n    file \"${params.outputFilePrefix}_unmappedRead.metrics\" into unmappedReadsMetricsOutput\n\n    \"\"\"\n    bammarkduplicates \\\n    I=${unmapped_.join(\" I=\")} \\\n    O=${params.outputFilePrefix}_unmappedRead.bam \\\n    M=${params.outputFilePrefix}_unmappedRead.metrics \\\n    tmpfile=${params.outputFilePrefix}_unmappedRead.biormdup \\\n    markthreads=${params.threads} \\\n    rewritebam=1 \\\n    rewritebamlevel=1 \\\n    index=1 \\\n    md5=1\n    \"\"\"\n}",
        "nb_lignes_process": 28,
        "string_script": "\"\"\"\n    bammarkduplicates \\\n    I=${unmapped_.join(\" I=\")} \\\n    O=${params.outputFilePrefix}_unmappedRead.bam \\\n    M=${params.outputFilePrefix}_unmappedRead.metrics \\\n    tmpfile=${params.outputFilePrefix}_unmappedRead.biormdup \\\n    markthreads=${params.threads} \\\n    rewritebam=1 \\\n    rewritebamlevel=1 \\\n    index=1 \\\n    md5=1\n    \"\"\"",
        "nb_lignes_script": 11,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "extract_ur_unmapped",
            "extract_bru_unmapped"
        ],
        "nb_inputs": 2,
        "outputs": [
            "unmappedReadsOutput",
            "unmappedReadsMetricsOutput"
        ],
        "nb_outputs": 2,
        "name_workflow": "lepsalex__nextflow-pcawg-bwa-mem-workflow",
        "directive": [
            "tag \"$unmapped_\"",
            "cpus params.cpus_mid",
            "memory \"${params.mem_mid} MB\""
        ],
        "when": "",
        "stub": ""
    },
    "outputMappedResults": {
        "name_process": "outputMappedResults",
        "string_process": "\nprocess outputMappedResults {\n    \n    cpus params.cpus\n    memory \"${params.mem} MB\"\n\n    container 'lepsalex/minio-mc-bash'\n\n    input:\n    file output from mappedReadsOutput\n\n    \"\"\"\n    mc config host add store ${params.minioURI} ${params.minioAccessKey} ${params.minioSecretKey}\n    mc cp ${output} store/${params.outputBucket}\n    \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "\"\"\"\n    mc config host add store ${params.minioURI} ${params.minioAccessKey} ${params.minioSecretKey}\n    mc cp ${output} store/${params.outputBucket}\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "MCF"
        ],
        "tools_url": [
            "https://bio.tools/mcf"
        ],
        "tools_dico": [
            {
                "name": "MCF",
                "uri": "https://bio.tools/mcf",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3573",
                            "term": "Freshwater biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0092",
                            "term": "Data visualisation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0610",
                            "term": "Ecology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0092",
                            "term": "Data rendering"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3443",
                                    "term": "Image analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Image segmentation algorithms and example code for automated single cell analysis.",
                "homepage": "http://www.stat.duke.edu/research/software/west/MCF/index.html"
            }
        ],
        "inputs": [
            "mappedReadsOutput"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "lepsalex__nextflow-pcawg-bwa-mem-workflow",
        "directive": [
            "cpus params.cpus",
            "memory \"${params.mem} MB\"",
            "container 'lepsalex/minio-mc-bash'"
        ],
        "when": "",
        "stub": ""
    },
    "outputMappedMetricsResults": {
        "name_process": "outputMappedMetricsResults",
        "string_process": "\nprocess outputMappedMetricsResults {\n    \n    cpus params.cpus\n    memory \"${params.mem} MB\"\n\n    container 'lepsalex/minio-mc-bash'\n\n    input:\n    file output from mappedReadsMetricsOutput\n\n    \"\"\"\n    mc config host add store ${params.minioURI} ${params.minioAccessKey} ${params.minioSecretKey}\n    mc cp ${output} store/${params.outputBucket}\n    \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "\"\"\"\n    mc config host add store ${params.minioURI} ${params.minioAccessKey} ${params.minioSecretKey}\n    mc cp ${output} store/${params.outputBucket}\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "MCF"
        ],
        "tools_url": [
            "https://bio.tools/mcf"
        ],
        "tools_dico": [
            {
                "name": "MCF",
                "uri": "https://bio.tools/mcf",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3573",
                            "term": "Freshwater biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0092",
                            "term": "Data visualisation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0610",
                            "term": "Ecology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0092",
                            "term": "Data rendering"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3443",
                                    "term": "Image analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Image segmentation algorithms and example code for automated single cell analysis.",
                "homepage": "http://www.stat.duke.edu/research/software/west/MCF/index.html"
            }
        ],
        "inputs": [
            "mappedReadsMetricsOutput"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "lepsalex__nextflow-pcawg-bwa-mem-workflow",
        "directive": [
            "cpus params.cpus",
            "memory \"${params.mem} MB\"",
            "container 'lepsalex/minio-mc-bash'"
        ],
        "when": "",
        "stub": ""
    },
    "outputUnmappedResults": {
        "name_process": "outputUnmappedResults",
        "string_process": "\nprocess outputUnmappedResults {\n    \n    cpus params.cpus\n    memory \"${params.mem} MB\"\n\n    container 'lepsalex/minio-mc-bash'\n\n    input:\n    file output from unmappedReadsOutput\n\n    \"\"\"\n    mc config host add store ${params.minioURI} ${params.minioAccessKey} ${params.minioSecretKey}\n    mc cp ${output} store/${params.outputBucket}\n    \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "\"\"\"\n    mc config host add store ${params.minioURI} ${params.minioAccessKey} ${params.minioSecretKey}\n    mc cp ${output} store/${params.outputBucket}\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "MCF"
        ],
        "tools_url": [
            "https://bio.tools/mcf"
        ],
        "tools_dico": [
            {
                "name": "MCF",
                "uri": "https://bio.tools/mcf",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3573",
                            "term": "Freshwater biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0092",
                            "term": "Data visualisation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0610",
                            "term": "Ecology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0092",
                            "term": "Data rendering"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3443",
                                    "term": "Image analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Image segmentation algorithms and example code for automated single cell analysis.",
                "homepage": "http://www.stat.duke.edu/research/software/west/MCF/index.html"
            }
        ],
        "inputs": [
            "unmappedReadsOutput"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "lepsalex__nextflow-pcawg-bwa-mem-workflow",
        "directive": [
            "cpus params.cpus",
            "memory \"${params.mem} MB\"",
            "container 'lepsalex/minio-mc-bash'"
        ],
        "when": "",
        "stub": ""
    },
    "outputUnmappedMetricsResults": {
        "name_process": "outputUnmappedMetricsResults",
        "string_process": "\nprocess outputUnmappedMetricsResults {\n    \n    cpus params.cpus\n    memory \"${params.mem} MB\"\n\n    container 'lepsalex/minio-mc-bash'\n\n    input:\n    file output from unmappedReadsMetricsOutput\n\n    \"\"\"\n    mc config host add store ${params.minioURI} ${params.minioAccessKey} ${params.minioSecretKey}\n    mc cp ${output} store/${params.outputBucket}\n    \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "\"\"\"\n    mc config host add store ${params.minioURI} ${params.minioAccessKey} ${params.minioSecretKey}\n    mc cp ${output} store/${params.outputBucket}\n    \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [
            "MCF"
        ],
        "tools_url": [
            "https://bio.tools/mcf"
        ],
        "tools_dico": [
            {
                "name": "MCF",
                "uri": "https://bio.tools/mcf",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3573",
                            "term": "Freshwater biology"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0092",
                            "term": "Data visualisation"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0610",
                            "term": "Ecology"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0092",
                            "term": "Data rendering"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3443",
                                    "term": "Image analysis"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Image segmentation algorithms and example code for automated single cell analysis.",
                "homepage": "http://www.stat.duke.edu/research/software/west/MCF/index.html"
            }
        ],
        "inputs": [
            "unmappedReadsMetricsOutput"
        ],
        "nb_inputs": 1,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "lepsalex__nextflow-pcawg-bwa-mem-workflow",
        "directive": [
            "cpus params.cpus",
            "memory \"${params.mem} MB\"",
            "container 'lepsalex/minio-mc-bash'"
        ],
        "when": "",
        "stub": ""
    }
}