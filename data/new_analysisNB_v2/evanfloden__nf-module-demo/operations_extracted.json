{
    "OPERATION_1": {
        "string": "Channel\n    .fromFilePairs( params.reads, size: -1 )\n    .ifEmpty { error \"Cannot find any reads matching: ${params.reads}\" }\n    .into { read_filesA; read_filesB }",
        "origin": [
            [
                "params.reads, size: -1",
                "A"
            ]
        ],
        "gives": [
            [
                "read_filesA",
                "P"
            ],
            [
                "read_filesB",
                "P"
            ]
        ]
    },
    "OPERATION_2": {
        "string": "indexes\n    .combine(read_filesA)\n    .set { read_files_and_index }",
        "origin": [
            [
                "indexes",
                "P"
            ],
            [
                "read_filesA",
                "P"
            ]
        ],
        "gives": [
            [
                "read_files_and_index",
                "P"
            ]
        ]
    },
    "OPERATION_3": {
        "string": "quantification_multiQC_ch\n  .mix(fastqc_multiQC_ch)\n  .collect()\n  .set {multiQC_ch}",
        "origin": [
            [
                "quantification_multiQC_ch",
                "P"
            ],
            [
                "fastqc_multiQC_ch",
                "P"
            ]
        ],
        "gives": [
            [
                "multiQC_ch",
                "P"
            ]
        ]
    }
}