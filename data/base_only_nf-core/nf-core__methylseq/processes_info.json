{
    "get_software_versions": {
        "name_process": "get_software_versions",
        "string_process": "\nprocess get_software_versions {\n    publishDir \"${params.outdir}/pipeline_info\", mode: params.publish_dir_mode,\n        saveAs: { filename ->\n                      if (filename.indexOf('.csv') > 0) filename\n                      else null\n        }\n\n    output:\n    file 'software_versions_mqc.yaml' into ch_software_versions_yaml_for_multiqc\n    file \"software_versions.csv\"\n\n    script:\n    \"\"\"\n    echo \"$workflow.manifest.version\" &> v_pipeline.txt\n    echo \"$workflow.nextflow.version\" &> v_nextflow.txt\n    bismark_genome_preparation --version &> v_bismark_genome_preparation.txt\n    fastqc --version &> v_fastqc.txt\n    cutadapt --version &> v_cutadapt.txt\n    trim_galore --version &> v_trim_galore.txt\n    bismark --version &> v_bismark.txt\n    deduplicate_bismark --version &> v_deduplicate_bismark.txt\n    bismark_methylation_extractor --version &> v_bismark_methylation_extractor.txt\n    bismark2report --version &> v_bismark2report.txt\n    bismark2summary --version &> v_bismark2summary.txt\n    samtools --version &> v_samtools.txt\n    hisat2 --version &> v_hisat2.txt\n    bwa &> v_bwa.txt 2>&1 || true\n    bwameth.py --version &> v_bwameth.txt\n    picard MarkDuplicates --version &> v_picard_markdups.txt 2>&1 || true\n    MethylDackel --version &> v_methyldackel.txt\n    qualimap --version &> v_qualimap.txt || true\n    preseq &> v_preseq.txt\n    multiqc --version &> v_multiqc.txt\n    scrape_software_versions.py &> software_versions_mqc.yaml\n    \"\"\"\n}",
        "nb_lignes_process": 35,
        "string_script": "    \"\"\"\n    echo \"$workflow.manifest.version\" &> v_pipeline.txt\n    echo \"$workflow.nextflow.version\" &> v_nextflow.txt\n    bismark_genome_preparation --version &> v_bismark_genome_preparation.txt\n    fastqc --version &> v_fastqc.txt\n    cutadapt --version &> v_cutadapt.txt\n    trim_galore --version &> v_trim_galore.txt\n    bismark --version &> v_bismark.txt\n    deduplicate_bismark --version &> v_deduplicate_bismark.txt\n    bismark_methylation_extractor --version &> v_bismark_methylation_extractor.txt\n    bismark2report --version &> v_bismark2report.txt\n    bismark2summary --version &> v_bismark2summary.txt\n    samtools --version &> v_samtools.txt\n    hisat2 --version &> v_hisat2.txt\n    bwa &> v_bwa.txt 2>&1 || true\n    bwameth.py --version &> v_bwameth.txt\n    picard MarkDuplicates --version &> v_picard_markdups.txt 2>&1 || true\n    MethylDackel --version &> v_methyldackel.txt\n    qualimap --version &> v_qualimap.txt || true\n    preseq &> v_preseq.txt\n    multiqc --version &> v_multiqc.txt\n    scrape_software_versions.py &> software_versions_mqc.yaml\n    \"\"\"",
        "nb_lignes_script": 22,
        "language_script": "bash",
        "tools": [
            "FastQC",
            "Cutadapt",
            "Bismark",
            "SAMtools",
            "HISAT2",
            "BWA",
            "Picard",
            "QualiMap",
            "preseq",
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc",
            "https://bio.tools/cutadapt",
            "https://bio.tools/bismark",
            "https://bio.tools/samtools",
            "https://bio.tools/hisat2",
            "https://bio.tools/bwa",
            "https://bio.tools/picard_tools",
            "https://bio.tools/qualimap",
            "https://bio.tools/preseq",
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            },
            {
                "name": "Cutadapt",
                "uri": "https://bio.tools/cutadapt",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0632",
                            "term": "Probes and primers"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Sequence trimming"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3192",
                                    "term": "Trimming"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_3495",
                                "term": "RNA sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_3495",
                                "term": "RNA sequence"
                            }
                        ]
                    }
                ],
                "description": "Find and remove adapter sequences, primers, poly-A tails and other types of unwanted sequence from your high-throughput sequencing reads.",
                "homepage": "https://pypi.python.org/pypi/cutadapt"
            },
            {
                "name": "Bismark",
                "uri": "https://bio.tools/bismark",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3295",
                            "term": "Epigenetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3173",
                            "term": "Epigenomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3186",
                                    "term": "Bisulfite mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3204",
                                    "term": "Methylation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3186",
                                    "term": "Bisulfite sequence mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3186",
                                    "term": "Bisulfite sequence alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3186",
                                    "term": "Bisulfite read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3204",
                                    "term": "Methylation profile analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Bismark is a tool to map bisulfite treated sequencing reads and perform methylation calling in a quick and easy-to-use fashion.",
                "homepage": "https://github.com/FelixKrueger/Bismark"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "HISAT2",
                "uri": "https://bio.tools/hisat2",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Alignment program for mapping next-generation sequencing reads (both DNA and RNA) to a population of human genomes (as well as to a single reference genome).",
                "homepage": "https://ccb.jhu.edu/software/hisat2/index.shtml"
            },
            {
                "name": "BWA",
                "uri": "https://bio.tools/bwa",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3211",
                                    "term": "Genome indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3429",
                                    "term": "Construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0863",
                                "term": "Sequence alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_2012",
                                "term": "Sequence coordinates"
                            },
                            {
                                "uri": "http://edamontology.org/data_1916",
                                "term": "Alignment"
                            },
                            {
                                "uri": "http://edamontology.org/data_3210",
                                "term": "Genome index"
                            }
                        ]
                    }
                ],
                "description": "Fast, accurate, memory-efficient aligner for short and long sequencing reads",
                "homepage": "http://bio-bwa.sourceforge.net"
            },
            {
                "name": "Picard",
                "uri": "https://bio.tools/picard_tools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A set of command line tools for manipulating high-throughput sequencing (HTS) data in formats such as SAM/BAM/CRAM and VCF. Available as a standalone program or within the GATK4 program.",
                "homepage": "https://github.com/broadinstitute/picard"
            },
            {
                "name": "QualiMap",
                "uri": "https://bio.tools/qualimap",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Platform-independent application written in Java and R that provides both a Graphical User Inteface (GUI) and a command-line interface to facilitate the quality control of alignment sequencing data.",
                "homepage": "http://qualimap.bioinfo.cipf.es/"
            },
            {
                "name": "preseq",
                "uri": "https://bio.tools/preseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2423",
                                    "term": "Prediction and recognition"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This package is aimed at predicting and number of distinct reads and how many will be expected from additional sequencing using an initial sequencing experiment. The estimates can then be used to examine the utility of further sequencing, optimize the sequencing depth, or to screen multiple libraries to avoid low complexity samples.",
                "homepage": "http://smithlabresearch.org/software/preseq/"
            },
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [],
        "nb_inputs": 0,
        "outputs": [
            "ch_software_versions_yaml_for_multiqc"
        ],
        "nb_outputs": 1,
        "name_workflow": "nf-core__methylseq",
        "directive": [
            "publishDir \"${params.outdir}/pipeline_info\", mode: params.publish_dir_mode , saveAs: { filename -> if (filename.indexOf('.csv') > 0) filename else null }"
        ],
        "when": "",
        "stub": ""
    },
    "makeBismarkIndex": {
        "name_process": "makeBismarkIndex",
        "string_process": " process makeBismarkIndex {\n        publishDir path: { params.save_reference ? \"${params.outdir}/reference_genome\" : params.outdir },\n                   saveAs: { params.save_reference ? it : null }, mode: params.publish_dir_mode\n\n        input:\n        file fasta from ch_fasta_for_makeBismarkIndex\n\n        output:\n        file \"BismarkIndex\" into ch_bismark_index_for_bismark_align, ch_bismark_index_for_bismark_methXtract\n\n        script:\n        aligner = params.aligner == 'bismark_hisat' ? '--hisat2' : '--bowtie2'\n        slam = params.slamseq ? '--slam' : ''\n        \"\"\"\n        mkdir BismarkIndex\n        cp $fasta BismarkIndex/\n        bismark_genome_preparation $aligner $slam BismarkIndex\n        \"\"\"\n    }",
        "nb_lignes_process": 17,
        "string_script": "        aligner = params.aligner == 'bismark_hisat' ? '--hisat2' : '--bowtie2'\n        slam = params.slamseq ? '--slam' : ''\n        \"\"\"\n        mkdir BismarkIndex\n        cp $fasta BismarkIndex/\n        bismark_genome_preparation $aligner $slam BismarkIndex\n        \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [
            "Maligner",
            "ORB-SLAM"
        ],
        "tools_url": [
            "https://bio.tools/maligner",
            "https://bio.tools/ORB-SLAM"
        ],
        "tools_dico": [
            {
                "name": "Maligner",
                "uri": "https://bio.tools/maligner",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acids"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acid bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acid informatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Tool for aligning molecular or insilico restriction maps to a reference map.",
                "homepage": "https://github.com/LeeMendelowitz/maligner"
            },
            {
                "name": "ORB-SLAM",
                "uri": "https://bio.tools/ORB-SLAM",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3382",
                            "term": "Imaging"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0749",
                            "term": "Transcription factors and regulatory sites"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3435",
                                    "term": "Standardisation and normalisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Mapping"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2429",
                                    "term": "Cartography"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Accurate and Robust Monocular SLAM with Omnidirectional Cameras.\n\nA real-time robust monocular visual SLAM system based on ORB-SLAM for fisheye cameras, without rectifying or cropping the input images.\n\nWe develop an improved monocular visual SLAM system by using omnidirectional cameras. Our method extends the ORB-SLAM2 framework with the enhanced unified camera model (EUCM) as a projection function, which can be applied to catadioptric systems and wide-angle fisheye cameras. Without rectifying or cropping the input images, the proposed system can use the full area of the images even with strong distortion.",
                "homepage": "https://github.com/lsyads/fisheye-ORB-SLAM"
            }
        ],
        "inputs": [
            "ch_fasta_for_makeBismarkIndex"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_bismark_index_for_bismark_align",
            "ch_bismark_index_for_bismark_methXtract"
        ],
        "nb_outputs": 2,
        "name_workflow": "nf-core__methylseq",
        "directive": [
            "publishDir path: { params.save_reference ? \"${params.outdir}/reference_genome\" : params.outdir } , saveAs: { params.save_reference ? it : null }, mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "makeBwaMemIndex": {
        "name_process": "makeBwaMemIndex",
        "string_process": " process makeBwaMemIndex {\n        tag \"$fasta\"\n        publishDir path: \"${params.outdir}/reference_genome\", saveAs: { params.save_reference ? it : null }, mode: params.publish_dir_mode\n\n        input:\n        file fasta from ch_fasta_for_makeBwaMemIndex\n\n        output:\n        file \"${fasta}*\" into ch_bwa_meth_indices_for_bwamem_align\n        file fasta\n\n        script:\n        \"\"\"\n        bwameth.py index $fasta\n        \"\"\"\n    }",
        "nb_lignes_process": 14,
        "string_script": "        \"\"\"\n        bwameth.py index $fasta\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_fasta_for_makeBwaMemIndex"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_bwa_meth_indices_for_bwamem_align",
            "fasta"
        ],
        "nb_outputs": 2,
        "name_workflow": "nf-core__methylseq",
        "directive": [
            "tag \"$fasta\"",
            "publishDir path: \"${params.outdir}/reference_genome\", saveAs: { params.save_reference ? it : null }, mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "makeFastaIndex": {
        "name_process": "makeFastaIndex",
        "string_process": " process makeFastaIndex {\n        tag \"$fasta\"\n        publishDir path: \"${params.outdir}/reference_genome\", saveAs: { params.save_reference ? it : null }, mode: params.publish_dir_mode\n\n        input:\n        file fasta from ch_fasta_for_makeFastaIndex\n\n        output:\n        file \"${fasta}.fai\" into ch_fasta_index_for_methyldackel\n\n        script:\n        \"\"\"\n        samtools faidx $fasta\n        \"\"\"\n    }",
        "nb_lignes_process": 13,
        "string_script": "        \"\"\"\n        samtools faidx $fasta\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "ch_fasta_for_makeFastaIndex"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_fasta_index_for_methyldackel"
        ],
        "nb_outputs": 1,
        "name_workflow": "nf-core__methylseq",
        "directive": [
            "tag \"$fasta\"",
            "publishDir path: \"${params.outdir}/reference_genome\", saveAs: { params.save_reference ? it : null }, mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "fastqc": {
        "name_process": "fastqc",
        "string_process": "\nprocess fastqc {\n    tag \"$name\"\n    label 'process_medium'\n    publishDir \"${params.outdir}/fastqc\", mode: params.publish_dir_mode,\n        saveAs: { filename ->\n                      filename.indexOf('.zip') > 0 ? \"zips/$filename\" : \"$filename\"\n        }\n\n    input:\n    set val(name), file(reads) from ch_read_files_fastqc\n\n    output:\n    file '*_fastqc.{zip,html}' into ch_fastqc_results_for_multiqc\n\n    script:\n    \"\"\"\n    fastqc --quiet --threads $task.cpus $reads\n    \"\"\"\n}",
        "nb_lignes_process": 18,
        "string_script": "    \"\"\"\n    fastqc --quiet --threads $task.cpus $reads\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [
            "FastQC"
        ],
        "tools_url": [
            "https://bio.tools/fastqc"
        ],
        "tools_dico": [
            {
                "name": "FastQC",
                "uri": "https://bio.tools/fastqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0236",
                                    "term": "Sequence composition calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0848",
                                "term": "Raw sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2955",
                                "term": "Sequence report"
                            }
                        ]
                    }
                ],
                "description": "This tool aims to provide a QC report which can spot problems or biases which originate either in the sequencer or in the starting library material. It can be run in one of two modes. It can either run as a stand alone interactive application for the immediate analysis of small numbers of FastQ files, or it can be run in a non-interactive mode where it would be suitable for integrating into a larger analysis pipeline for the systematic processing of large numbers of files.",
                "homepage": "http://www.bioinformatics.babraham.ac.uk/projects/fastqc/"
            }
        ],
        "inputs": [
            "ch_read_files_fastqc"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_fastqc_results_for_multiqc"
        ],
        "nb_outputs": 1,
        "name_workflow": "nf-core__methylseq",
        "directive": [
            "tag \"$name\"",
            "label 'process_medium'",
            "publishDir \"${params.outdir}/fastqc\", mode: params.publish_dir_mode , saveAs: { filename -> filename.indexOf('.zip') > 0 ? \"zips/$filename\" : \"$filename\" }"
        ],
        "when": "",
        "stub": ""
    },
    "trim_galore": {
        "name_process": "trim_galore",
        "string_process": " process trim_galore {\n        tag \"$name\"\n        publishDir \"${params.outdir}/trim_galore\", mode: params.publish_dir_mode,\n            saveAs: {filename ->\n                if( filename.indexOf(\"_fastqc\") > 0 ) \"FastQC/$filename\"\n                else if( filename.indexOf(\"trimming_report.txt\" ) > 0) \"logs/$filename\"\n                else if( !params.save_trimmed && filename == \"where_are_my_files.txt\" ) filename\n                else if( params.save_trimmed && filename != \"where_are_my_files.txt\" ) filename\n                else null\n            }\n\n        input:\n        set val(name), file(reads) from ch_read_files_trimming\n        file wherearemyfiles from ch_wherearemyfiles_for_trimgalore.collect()\n\n        output:\n        set val(name), file('*fq.gz') into ch_trimmed_reads_for_alignment\n        file \"*trimming_report.txt\" into ch_trim_galore_results_for_multiqc\n        file \"*_fastqc.{zip,html}\"\n        file \"where_are_my_files.txt\"\n\n        script:\n        def c_r1 = clip_r1 > 0 ? \"--clip_r1 $clip_r1\" : ''\n        def c_r2 = clip_r2 > 0 ? \"--clip_r2 $clip_r2\" : ''\n        def tpc_r1 = three_prime_clip_r1 > 0 ? \"--three_prime_clip_r1 $three_prime_clip_r1\" : ''\n        def tpc_r2 = three_prime_clip_r2 > 0 ? \"--three_prime_clip_r2 $three_prime_clip_r2\" : ''\n        def rrbs = params.rrbs ? \"--rrbs\" : ''\n        def cores = 1\n        if(task.cpus){\n            cores = (task.cpus as int) - 4\n            if (params.single_end) cores = (task.cpus as int) - 3\n            if (cores < 1) cores = 1\n            if (cores > 4) cores = 4\n        }\n        if( params.single_end ) {\n            \"\"\"\n            trim_galore --fastqc --gzip $reads \\\n              $rrbs $c_r1 $tpc_r1 --cores $cores\n            \"\"\"\n        } else {\n            \"\"\"\n            trim_galore --fastqc --gzip --paired $reads \\\n              $rrbs $c_r1 $c_r2 $tpc_r1 $tpc_r2 --cores $cores\n            \"\"\"\n        }\n    }",
        "nb_lignes_process": 44,
        "string_script": "        def c_r1 = clip_r1 > 0 ? \"--clip_r1 $clip_r1\" : ''\n        def c_r2 = clip_r2 > 0 ? \"--clip_r2 $clip_r2\" : ''\n        def tpc_r1 = three_prime_clip_r1 > 0 ? \"--three_prime_clip_r1 $three_prime_clip_r1\" : ''\n        def tpc_r2 = three_prime_clip_r2 > 0 ? \"--three_prime_clip_r2 $three_prime_clip_r2\" : ''\n        def rrbs = params.rrbs ? \"--rrbs\" : ''\n        def cores = 1\n        if(task.cpus){\n            cores = (task.cpus as int) - 4\n            if (params.single_end) cores = (task.cpus as int) - 3\n            if (cores < 1) cores = 1\n            if (cores > 4) cores = 4\n        }\n        if( params.single_end ) {\n            \"\"\"\n            trim_galore --fastqc --gzip $reads \\\n              $rrbs $c_r1 $tpc_r1 --cores $cores\n            \"\"\"\n        } else {\n            \"\"\"\n            trim_galore --fastqc --gzip --paired $reads \\\n              $rrbs $c_r1 $c_r2 $tpc_r1 $tpc_r2 --cores $cores\n            \"\"\"\n        }",
        "nb_lignes_script": 22,
        "language_script": "bash",
        "tools": [
            "CoreSlicer"
        ],
        "tools_url": [
            "https://bio.tools/CoreSlicer"
        ],
        "tools_dico": [
            {
                "name": "CoreSlicer",
                "uri": "https://bio.tools/CoreSlicer",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3384",
                            "term": "Medical imaging"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3452",
                            "term": "Tomography"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3444",
                            "term": "MRI"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3452",
                            "term": "CT"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3452",
                            "term": "Computed tomography"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3452",
                            "term": "TDM"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3444",
                            "term": "Nuclear magnetic resonance imaging"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3444",
                            "term": "Magnetic resonance imaging"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3444",
                            "term": "MRT"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3444",
                            "term": "Magnetic resonance tomography"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3444",
                            "term": "NMRI"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Enables extraction of morphomic markers from CT images by non-technically skilled clinicians.",
                "homepage": "https://coreslicer.com/"
            }
        ],
        "inputs": [
            "ch_read_files_trimming",
            "ch_wherearemyfiles_for_trimgalore"
        ],
        "nb_inputs": 2,
        "outputs": [
            "ch_trimmed_reads_for_alignment",
            "ch_trim_galore_results_for_multiqc"
        ],
        "nb_outputs": 2,
        "name_workflow": "nf-core__methylseq",
        "directive": [
            "tag \"$name\"",
            "publishDir \"${params.outdir}/trim_galore\", mode: params.publish_dir_mode , saveAs: {filename -> if( filename.indexOf(\"_fastqc\") > 0 ) \"FastQC/$filename\" else if( filename.indexOf(\"trimming_report.txt\" ) > 0) \"logs/$filename\" else if( !params.save_trimmed && filename == \"where_are_my_files.txt\" ) filename else if( params.save_trimmed && filename != \"where_are_my_files.txt\" ) filename else null }"
        ],
        "when": "",
        "stub": ""
    },
    "bismark_align": {
        "name_process": "bismark_align",
        "string_process": " process bismark_align {\n        tag \"$name\"\n        publishDir \"${params.outdir}/bismark_alignments\", mode: params.publish_dir_mode,\n            saveAs: {filename ->\n                if( filename.indexOf(\".fq.gz\") > 0 ) \"unmapped/$filename\"\n                else if( filename.indexOf(\"report.txt\") > 0 ) \"logs/$filename\"\n                else if( (!params.save_align_intermeds && !params.skip_deduplication && !params.rrbs).every() && filename == \"where_are_my_files.txt\" ) filename\n                else if( (params.save_align_intermeds || params.skip_deduplication || params.rrbs).any() && filename != \"where_are_my_files.txt\" ) filename\n                else null\n            }\n\n        input:\n        set val(name), file(reads) from ch_trimmed_reads_for_alignment\n        file index from ch_bismark_index_for_bismark_align.collect()\n        file wherearemyfiles from ch_wherearemyfiles_for_bismark_align.collect()\n        file knownsplices from ch_splicesites_for_bismark_hisat_align.collect().ifEmpty([])\n\n        output:\n        set val(name), file(\"*.bam\") into ch_bam_for_bismark_deduplicate, ch_bam_for_bismark_summary, ch_bam_for_preseq\n        set val(name), file(\"*report.txt\") into ch_bismark_align_log_for_bismark_report, ch_bismark_align_log_for_bismark_summary, ch_bismark_align_log_for_multiqc\n        file \"*.fq.gz\" optional true\n        file \"where_are_my_files.txt\"\n\n        script:\n                                               \n        input = params.single_end ? reads : \"-1 ${reads[0]} -2 ${reads[1]}\"\n\n                                 \n        aligner = params.aligner == \"bismark_hisat\" ? \"--hisat2\" : \"--bowtie2\"\n\n                                            \n        splicesites = params.aligner == \"bismark_hisat\" && params.known_splices ? \"--known-splicesite-infile <(hisat2_extract_splice_sites.py ${knownsplices})\" : ''\n        pbat = params.pbat ? \"--pbat\" : ''\n        non_directional = params.single_cell || params.zymo || params.non_directional ? \"--non_directional\" : ''\n        unmapped = params.unmapped ? \"--unmapped\" : ''\n        mismatches = params.relax_mismatches ? \"--score_min L,0,-${params.num_mismatches}\" : ''\n        soft_clipping = params.local_alignment ? \"--local\" : ''\n        minins = bismark_minins ? \"--minins $bismark_minins\" : ''\n        maxins = bismark_maxins ? \"--maxins $bismark_maxins\" : ''\n\n                                                                                           \n        multicore = ''\n        if( task.cpus ){\n                                                                                  \n            if( params.single_cell || params.zymo || params.non_directional ){\n                cpu_per_multicore = 5\n                mem_per_multicore = (18.GB).toBytes()\n            } else {\n                cpu_per_multicore = 3\n                mem_per_multicore = (13.GB).toBytes()\n            }\n                                                                       \n            if(params.bismark_align_cpu_per_multicore) {\n                cpu_per_multicore = (params.bismark_align_cpu_per_multicore as int)\n            }\n            if(params.bismark_align_mem_per_multicore) {\n                mem_per_multicore = (params.bismark_align_mem_per_multicore as nextflow.util.MemoryUnit).toBytes()\n            }\n                                                                             \n            ccore = ((task.cpus as int) / cpu_per_multicore) as int\n                                                                                                                \n            try {\n                tmem = (task.memory as nextflow.util.MemoryUnit).toBytes()\n                mcore = (tmem / mem_per_multicore) as int\n                ccore = Math.min(ccore, mcore)\n            } catch (all) {\n                log.debug \"Warning: Not able to define bismark align multicore based on available memory\"\n            }\n            if( ccore > 1 ){\n              multicore = \"--multicore $ccore\"\n            }\n        }\n\n                       \n        \"\"\"\n        bismark $input \\\\\n            $aligner \\\\\n            --bam $pbat $non_directional $unmapped $mismatches $multicore $minins $maxins \\\\\n            --genome $index \\\\\n            $soft_clipping \\\\\n            $splicesites\n        \"\"\"\n    }",
        "nb_lignes_process": 81,
        "string_script": "        input = params.single_end ? reads : \"-1 ${reads[0]} -2 ${reads[1]}\"\n\n                                 \n        aligner = params.aligner == \"bismark_hisat\" ? \"--hisat2\" : \"--bowtie2\"\n\n                                            \n        splicesites = params.aligner == \"bismark_hisat\" && params.known_splices ? \"--known-splicesite-infile <(hisat2_extract_splice_sites.py ${knownsplices})\" : ''\n        pbat = params.pbat ? \"--pbat\" : ''\n        non_directional = params.single_cell || params.zymo || params.non_directional ? \"--non_directional\" : ''\n        unmapped = params.unmapped ? \"--unmapped\" : ''\n        mismatches = params.relax_mismatches ? \"--score_min L,0,-${params.num_mismatches}\" : ''\n        soft_clipping = params.local_alignment ? \"--local\" : ''\n        minins = bismark_minins ? \"--minins $bismark_minins\" : ''\n        maxins = bismark_maxins ? \"--maxins $bismark_maxins\" : ''\n\n                                                                                           \n        multicore = ''\n        if( task.cpus ){\n                                                                                  \n            if( params.single_cell || params.zymo || params.non_directional ){\n                cpu_per_multicore = 5\n                mem_per_multicore = (18.GB).toBytes()\n            } else {\n                cpu_per_multicore = 3\n                mem_per_multicore = (13.GB).toBytes()\n            }\n                                                                       \n            if(params.bismark_align_cpu_per_multicore) {\n                cpu_per_multicore = (params.bismark_align_cpu_per_multicore as int)\n            }\n            if(params.bismark_align_mem_per_multicore) {\n                mem_per_multicore = (params.bismark_align_mem_per_multicore as nextflow.util.MemoryUnit).toBytes()\n            }\n                                                                             \n            ccore = ((task.cpus as int) / cpu_per_multicore) as int\n                                                                                                                \n            try {\n                tmem = (task.memory as nextflow.util.MemoryUnit).toBytes()\n                mcore = (tmem / mem_per_multicore) as int\n                ccore = Math.min(ccore, mcore)\n            } catch (all) {\n                log.debug \"Warning: Not able to define bismark align multicore based on available memory\"\n            }\n            if( ccore > 1 ){\n              multicore = \"--multicore $ccore\"\n            }\n        }\n\n                       \n        \"\"\"\n        bismark $input \\\\\n            $aligner \\\\\n            --bam $pbat $non_directional $unmapped $mismatches $multicore $minins $maxins \\\\\n            --genome $index \\\\\n            $soft_clipping \\\\\n            $splicesites\n        \"\"\"",
        "nb_lignes_script": 56,
        "language_script": "bash",
        "tools": [
            "wossinput",
            "Maligner",
            "spliceSites",
            "PBAT",
            "PhosTryp",
            "SplitMEM",
            "Bismark"
        ],
        "tools_url": [
            "https://bio.tools/wossinput",
            "https://bio.tools/maligner",
            "https://bio.tools/splicesites",
            "https://bio.tools/pbat",
            "https://bio.tools/phostryp",
            "https://bio.tools/splitmem",
            "https://bio.tools/bismark"
        ],
        "tools_dico": [
            {
                "name": "wossinput",
                "uri": "https://bio.tools/wossinput",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0219",
                            "term": "Data submission, annotation and curation"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data retrieval"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Data extraction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2422",
                                    "term": "Retrieval"
                                }
                            ]
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0958",
                                "term": "Tool metadata"
                            }
                        ]
                    }
                ],
                "description": "Find programs by EDAM input data.",
                "homepage": "http://emboss.open-bio.org/rel/rel6/apps/wossinput.html"
            },
            {
                "name": "Maligner",
                "uri": "https://bio.tools/maligner",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acids"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acid bioinformatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0077",
                            "term": "Nucleic acid informatics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0292",
                                    "term": "Sequence alignment construction"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Tool for aligning molecular or insilico restriction maps to a reference map.",
                "homepage": "https://github.com/LeeMendelowitz/maligner"
            },
            {
                "name": "spliceSites",
                "uri": "https://bio.tools/splicesites",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3320",
                            "term": "RNA splicing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Gene expression"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3320",
                            "term": "Alternative splicing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Transcriptome profiling"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA-Seq analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small RNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Small-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "Whole transcriptome shotgun sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "RNA sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3170",
                            "term": "WTSS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0203",
                            "term": "Expression"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3223",
                                    "term": "Differential gene expression profiling"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2499",
                                    "term": "Splicing analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3223",
                                    "term": "Differential gene analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3223",
                                    "term": "Differentially expressed gene identification"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3223",
                                    "term": "Differential expression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3223",
                                    "term": "Differential gene expression analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2499",
                                    "term": "Splicing model analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Performs splice centered analysis on RNA-seq data.",
                "homepage": "http://bioconductor.org/packages/release/bioc/html/spliceSites.html"
            },
            {
                "name": "PBAT",
                "uri": "https://bio.tools/pbat",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS study"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "GWAS"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3517",
                            "term": "Genome-wide association study"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical calculation"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Significance testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical testing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical test"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2238",
                                    "term": "Statistical analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "PBAT is an interactive software package for the design of genetic family-based association studies. It provides analytical power calculations for family-based association tests.",
                "homepage": "https://www.hsph.harvard.edu/pbat"
            },
            {
                "name": "PhosTryp",
                "uri": "https://bio.tools/phostryp",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0160",
                            "term": "Sequence sites, features and motifs"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3092",
                                    "term": "Protein feature detection"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3092",
                                    "term": "Protein feature prediction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3092",
                                    "term": "Protein feature recognition"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A phosphorylation site predictor specific for parasitic protozoa of the family trypanosomatidae.",
                "homepage": "http://phostryp.bio.uniroma2.it"
            },
            {
                "name": "SplitMEM",
                "uri": "https://bio.tools/splitmem",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0524",
                                    "term": "De-novo assembly"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0524",
                                    "term": "De Bruijn graph"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0524",
                                    "term": "Sequence assembly (de-novo assembly)"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "An algorithm that directly constructs the compressed de Bruijn graph in time and space linear to the total number of genomes for a given maximum genome size.",
                "homepage": "http://sourceforge.net/projects/splitmem/"
            },
            {
                "name": "Bismark",
                "uri": "https://bio.tools/bismark",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3295",
                            "term": "Epigenetics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3173",
                            "term": "Epigenomics"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3186",
                                    "term": "Bisulfite mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3204",
                                    "term": "Methylation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment construction"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment generation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Oligonucleotide alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short sequence read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3198",
                                    "term": "Short read alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3186",
                                    "term": "Bisulfite sequence mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3186",
                                    "term": "Bisulfite sequence alignment"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3186",
                                    "term": "Bisulfite read mapping"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3204",
                                    "term": "Methylation profile analysis"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Bismark is a tool to map bisulfite treated sequencing reads and perform methylation calling in a quick and easy-to-use fashion.",
                "homepage": "https://github.com/FelixKrueger/Bismark"
            }
        ],
        "inputs": [
            "ch_trimmed_reads_for_alignment",
            "ch_bismark_index_for_bismark_align",
            "ch_wherearemyfiles_for_bismark_align",
            "ch_splicesites_for_bismark_hisat_align"
        ],
        "nb_inputs": 4,
        "outputs": [
            "ch_bam_for_bismark_deduplicate",
            "ch_bam_for_bismark_summary",
            "ch_bam_for_preseq",
            "ch_bismark_align_log_for_bismark_report",
            "ch_bismark_align_log_for_bismark_summary",
            "ch_bismark_align_log_for_multiqc"
        ],
        "nb_outputs": 6,
        "name_workflow": "nf-core__methylseq",
        "directive": [
            "tag \"$name\"",
            "publishDir \"${params.outdir}/bismark_alignments\", mode: params.publish_dir_mode , saveAs: {filename -> if( filename.indexOf(\".fq.gz\") > 0 ) \"unmapped/$filename\" else if( filename.indexOf(\"report.txt\") > 0 ) \"logs/$filename\" else if( (!params.save_align_intermeds && !params.skip_deduplication && !params.rrbs).every() && filename == \"where_are_my_files.txt\" ) filename else if( (params.save_align_intermeds || params.skip_deduplication || params.rrbs).any() && filename != \"where_are_my_files.txt\" ) filename else null }"
        ],
        "when": "",
        "stub": ""
    },
    "bismark_deduplicate": {
        "name_process": "bismark_deduplicate",
        "string_process": " process bismark_deduplicate {\n            tag \"$name\"\n            publishDir \"${params.outdir}/bismark_deduplicated\", mode: params.publish_dir_mode,\n                saveAs: {filename -> filename.indexOf(\".bam\") == -1 ? \"logs/$filename\" : \"$filename\"}\n\n            input:\n            set val(name), file(bam) from ch_bam_for_bismark_deduplicate\n\n            output:\n            set val(name), file(\"*.deduplicated.bam\") into ch_bam_dedup_for_bismark_methXtract, ch_bam_dedup_for_qualimap\n            set val(name), file(\"*.deduplication_report.txt\") into ch_bismark_dedup_log_for_bismark_report, ch_bismark_dedup_log_for_bismark_summary, ch_bismark_dedup_log_for_multiqc\n\n            script:\n            fq_type = params.single_end ? '-s' : '-p'\n            \"\"\"\n            deduplicate_bismark $fq_type --bam $bam\n            \"\"\"\n        }",
        "nb_lignes_process": 16,
        "string_script": "            fq_type = params.single_end ? '-s' : '-p'\n            \"\"\"\n            deduplicate_bismark $fq_type --bam $bam\n            \"\"\"",
        "nb_lignes_script": 3,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_bam_for_bismark_deduplicate"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_bam_dedup_for_bismark_methXtract",
            "ch_bam_dedup_for_qualimap",
            "ch_bismark_dedup_log_for_bismark_report",
            "ch_bismark_dedup_log_for_bismark_summary",
            "ch_bismark_dedup_log_for_multiqc"
        ],
        "nb_outputs": 5,
        "name_workflow": "nf-core__methylseq",
        "directive": [
            "tag \"$name\"",
            "publishDir \"${params.outdir}/bismark_deduplicated\", mode: params.publish_dir_mode , saveAs: {filename -> filename.indexOf(\".bam\") == -1 ? \"logs/$filename\" : \"$filename\"}"
        ],
        "when": "",
        "stub": ""
    },
    "bismark_methXtract": {
        "name_process": "bismark_methXtract",
        "string_process": " process bismark_methXtract {\n        tag \"$name\"\n        publishDir \"${params.outdir}/bismark_methylation_calls\", mode: params.publish_dir_mode,\n            saveAs: {filename ->\n                if( filename.indexOf(\"splitting_report.txt\" ) > 0 ) \"logs/$filename\"\n                else if( filename.indexOf(\"M-bias\" ) > 0) \"m-bias/$filename\"\n                else if( filename.indexOf(\".cov\" ) > 0 ) \"methylation_coverage/$filename\"\n                else if( filename.indexOf(\"bedGraph\" ) > 0 ) \"bedGraph/$filename\"\n                else if( filename.indexOf(\"CpG_report\" ) > 0 ) \"stranded_CpG_report/$filename\"\n                else \"methylation_calls/$filename\"\n            }\n\n        input:\n        set val(name), file(bam) from ch_bam_dedup_for_bismark_methXtract\n        file index from ch_bismark_index_for_bismark_methXtract.collect()\n\n        output:\n        set val(name), file(\"*splitting_report.txt\") into ch_bismark_splitting_report_for_bismark_report, ch_bismark_splitting_report_for_bismark_summary, ch_bismark_splitting_report_for_multiqc\n        set val(name), file(\"*.M-bias.txt\") into ch_bismark_mbias_for_bismark_report, ch_bismark_mbias_for_bismark_summary, ch_bismark_mbias_for_multiqc\n        file '*.{png,gz}'\n\n        script:\n        comprehensive = params.comprehensive ? '--comprehensive --merge_non_CpG' : ''\n        cytosine_report = params.cytosine_report ? \"--cytosine_report --genome_folder ${index} \" : ''\n        meth_cutoff = params.meth_cutoff ? \"--cutoff ${params.meth_cutoff}\" : ''\n        multicore = ''\n        if( task.cpus ){\n                                            \n            ccore = ((task.cpus as int) / 3) as int\n            if( ccore > 1 ){\n              multicore = \"--multicore $ccore\"\n            }\n        }\n        buffer = ''\n        if( task.memory ){\n            mbuffer = (task.memory as nextflow.util.MemoryUnit) - 2.GB\n                                                          \n            if( mbuffer.compareTo(4.GB) == 1 ){\n              buffer = \"--buffer_size ${mbuffer.toGiga()}G\"\n            }\n        }\n        if(params.single_end) {\n            \"\"\"\n            bismark_methylation_extractor $comprehensive $meth_cutoff \\\\\n                $multicore $buffer $cytosine_report \\\\\n                --bedGraph \\\\\n                --counts \\\\\n                --gzip \\\\\n                -s \\\\\n                --report \\\\\n                $bam\n            \"\"\"\n        } else {\n            \"\"\"\n            bismark_methylation_extractor $comprehensive $meth_cutoff \\\\\n                $multicore $buffer $cytosine_report \\\\\n                --ignore_r2 2 \\\\\n                --ignore_3prime_r2 2 \\\\\n                --bedGraph \\\\\n                --counts \\\\\n                --gzip \\\\\n                -p \\\\\n                --no_overlap \\\\\n                --report \\\\\n                $bam\n            \"\"\"\n        }\n    }",
        "nb_lignes_process": 66,
        "string_script": "        comprehensive = params.comprehensive ? '--comprehensive --merge_non_CpG' : ''\n        cytosine_report = params.cytosine_report ? \"--cytosine_report --genome_folder ${index} \" : ''\n        meth_cutoff = params.meth_cutoff ? \"--cutoff ${params.meth_cutoff}\" : ''\n        multicore = ''\n        if( task.cpus ){\n                                            \n            ccore = ((task.cpus as int) / 3) as int\n            if( ccore > 1 ){\n              multicore = \"--multicore $ccore\"\n            }\n        }\n        buffer = ''\n        if( task.memory ){\n            mbuffer = (task.memory as nextflow.util.MemoryUnit) - 2.GB\n                                                          \n            if( mbuffer.compareTo(4.GB) == 1 ){\n              buffer = \"--buffer_size ${mbuffer.toGiga()}G\"\n            }\n        }\n        if(params.single_end) {\n            \"\"\"\n            bismark_methylation_extractor $comprehensive $meth_cutoff \\\\\n                $multicore $buffer $cytosine_report \\\\\n                --bedGraph \\\\\n                --counts \\\\\n                --gzip \\\\\n                -s \\\\\n                --report \\\\\n                $bam\n            \"\"\"\n        } else {\n            \"\"\"\n            bismark_methylation_extractor $comprehensive $meth_cutoff \\\\\n                $multicore $buffer $cytosine_report \\\\\n                --ignore_r2 2 \\\\\n                --ignore_3prime_r2 2 \\\\\n                --bedGraph \\\\\n                --counts \\\\\n                --gzip \\\\\n                -p \\\\\n                --no_overlap \\\\\n                --report \\\\\n                $bam\n            \"\"\"\n        }",
        "nb_lignes_script": 44,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_bam_dedup_for_bismark_methXtract",
            "ch_bismark_index_for_bismark_methXtract"
        ],
        "nb_inputs": 2,
        "outputs": [
            "ch_bismark_splitting_report_for_bismark_report",
            "ch_bismark_splitting_report_for_bismark_summary",
            "ch_bismark_splitting_report_for_multiqc",
            "ch_bismark_mbias_for_bismark_report",
            "ch_bismark_mbias_for_bismark_summary",
            "ch_bismark_mbias_for_multiqc"
        ],
        "nb_outputs": 6,
        "name_workflow": "nf-core__methylseq",
        "directive": [
            "tag \"$name\"",
            "publishDir \"${params.outdir}/bismark_methylation_calls\", mode: params.publish_dir_mode , saveAs: {filename -> if( filename.indexOf(\"splitting_report.txt\" ) > 0 ) \"logs/$filename\" else if( filename.indexOf(\"M-bias\" ) > 0) \"m-bias/$filename\" else if( filename.indexOf(\".cov\" ) > 0 ) \"methylation_coverage/$filename\" else if( filename.indexOf(\"bedGraph\" ) > 0 ) \"bedGraph/$filename\" else if( filename.indexOf(\"CpG_report\" ) > 0 ) \"stranded_CpG_report/$filename\" else \"methylation_calls/$filename\" }"
        ],
        "when": "",
        "stub": ""
    },
    "bismark_report": {
        "name_process": "bismark_report",
        "string_process": " process bismark_report {\n        tag \"$name\"\n        publishDir \"${params.outdir}/bismark_reports\", mode: params.publish_dir_mode\n\n        input:\n        set val(name), file(align_log), file(dedup_log), file(splitting_report), file(mbias) from ch_bismark_logs_for_bismark_report\n\n        output:\n        file '*{html,txt}' into ch_bismark_reports_results_for_multiqc\n\n        script:\n        \"\"\"\n        bismark2report \\\\\n            --alignment_report $align_log \\\\\n            --dedup_report $dedup_log \\\\\n            --splitting_report $splitting_report \\\\\n            --mbias_report $mbias\n        \"\"\"\n    }",
        "nb_lignes_process": 17,
        "string_script": "        \"\"\"\n        bismark2report \\\\\n            --alignment_report $align_log \\\\\n            --dedup_report $dedup_log \\\\\n            --splitting_report $splitting_report \\\\\n            --mbias_report $mbias\n        \"\"\"",
        "nb_lignes_script": 6,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_bismark_logs_for_bismark_report"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_bismark_reports_results_for_multiqc"
        ],
        "nb_outputs": 1,
        "name_workflow": "nf-core__methylseq",
        "directive": [
            "tag \"$name\"",
            "publishDir \"${params.outdir}/bismark_reports\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "bismark_summary": {
        "name_process": "bismark_summary",
        "string_process": " process bismark_summary {\n        publishDir \"${params.outdir}/bismark_summary\", mode: params.publish_dir_mode\n\n        input:\n        file ('*') from ch_bam_for_bismark_summary.collect()\n        file ('*') from ch_bismark_align_log_for_bismark_summary.collect()\n        file ('*') from ch_bismark_dedup_log_for_bismark_summary.collect()\n        file ('*') from ch_bismark_splitting_report_for_bismark_summary.collect()\n        file ('*') from ch_bismark_mbias_for_bismark_summary.collect()\n\n        output:\n        file '*{html,txt}' into ch_bismark_summary_results_for_multiqc\n\n        script:\n        \"\"\"\n        bismark2summary\n        \"\"\"\n    }",
        "nb_lignes_process": 16,
        "string_script": "        \"\"\"\n        bismark2summary\n        \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_bam_for_bismark_summary",
            "ch_bismark_align_log_for_bismark_summary",
            "ch_bismark_dedup_log_for_bismark_summary",
            "ch_bismark_splitting_report_for_bismark_summary",
            "ch_bismark_mbias_for_bismark_summary"
        ],
        "nb_inputs": 5,
        "outputs": [
            "ch_bismark_summary_results_for_multiqc"
        ],
        "nb_outputs": 1,
        "name_workflow": "nf-core__methylseq",
        "directive": [
            "publishDir \"${params.outdir}/bismark_summary\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "bwamem_align": {
        "name_process": "bwamem_align",
        "string_process": " process bwamem_align {\n        tag \"$name\"\n        publishDir \"${params.outdir}/bwa-mem_alignments\", mode: params.publish_dir_mode,\n            saveAs: {filename ->\n                if( !params.save_align_intermeds && filename == \"where_are_my_files.txt\" ) filename\n                else if( params.save_align_intermeds && filename != \"where_are_my_files.txt\" ) filename\n                else null\n            }\n\n        input:\n        set val(name), file(reads) from ch_trimmed_reads_for_alignment\n        file bwa_meth_indices from ch_bwa_meth_indices_for_bwamem_align.collect()\n        file wherearemyfiles from ch_wherearemyfiles_for_bwamem_align.collect()\n\n        output:\n        set val(name), file('*.bam') into ch_bam_for_samtools_sort_index_flagstat, ch_bam_for_preseq\n        file \"where_are_my_files.txt\"\n\n        script:\n        fasta = bwa_meth_indices[0].toString() - '.bwameth' - '.c2t' - '.amb' - '.ann' - '.bwt' - '.pac' - '.sa'\n        prefix = reads[0].toString() - ~/(_R1)?(_trimmed)?(_val_1)?(\\.fq)?(\\.fastq)?(\\.gz)?$/\n        \"\"\"\n        bwameth.py \\\\\n            --threads ${task.cpus} \\\\\n            --reference $fasta \\\\\n            $reads | samtools view -bS - > ${prefix}.bam\n        \"\"\"\n    }",
        "nb_lignes_process": 26,
        "string_script": "        fasta = bwa_meth_indices[0].toString() - '.bwameth' - '.c2t' - '.amb' - '.ann' - '.bwt' - '.pac' - '.sa'\n        prefix = reads[0].toString() - ~/(_R1)?(_trimmed)?(_val_1)?(\\.fq)?(\\.fastq)?(\\.gz)?$/\n        \"\"\"\n        bwameth.py \\\\\n            --threads ${task.cpus} \\\\\n            --reference $fasta \\\\\n            $reads | samtools view -bS - > ${prefix}.bam\n        \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "FASTA",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/fasta",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "FASTA",
                "uri": "https://bio.tools/fasta",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "Gene transcripts"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0157",
                            "term": "Sequence composition, complexity and repeats"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3512",
                            "term": "mRNA features"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0346",
                                    "term": "Sequence similarity search"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_2451",
                                    "term": "Sequence comparison"
                                }
                            ],
                            []
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_2044",
                                "term": "Sequence"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0857",
                                "term": "Sequence search results"
                            }
                        ]
                    }
                ],
                "description": "The FASTA programs find regions of local or global similarity between protein or DNA sequences, either by searching protein or DNA databases, or by identifying local duplications within a sequence. Like BLAST, FASTA can be used to infer functional and evolutionary relationships between sequences as well as help identify members of gene families.",
                "homepage": "http://fasta.bioch.virginia.edu/"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "ch_trimmed_reads_for_alignment",
            "ch_bwa_meth_indices_for_bwamem_align",
            "ch_wherearemyfiles_for_bwamem_align"
        ],
        "nb_inputs": 3,
        "outputs": [
            "ch_bam_for_samtools_sort_index_flagstat",
            "ch_bam_for_preseq"
        ],
        "nb_outputs": 2,
        "name_workflow": "nf-core__methylseq",
        "directive": [
            "tag \"$name\"",
            "publishDir \"${params.outdir}/bwa-mem_alignments\", mode: params.publish_dir_mode , saveAs: {filename -> if( !params.save_align_intermeds && filename == \"where_are_my_files.txt\" ) filename else if( params.save_align_intermeds && filename != \"where_are_my_files.txt\" ) filename else null }"
        ],
        "when": "",
        "stub": ""
    },
    "samtools_sort_index_flagstat": {
        "name_process": "samtools_sort_index_flagstat",
        "string_process": " process samtools_sort_index_flagstat {\n        tag \"$name\"\n        publishDir \"${params.outdir}/bwa-mem_alignments\", mode: params.publish_dir_mode,\n            saveAs: {filename ->\n                if(filename.indexOf(\"report.txt\") > 0) \"logs/$filename\"\n                else if( (!params.save_align_intermeds && !params.skip_deduplication && !params.rrbs).every() && filename == \"where_are_my_files.txt\") filename\n                else if( (params.save_align_intermeds || params.skip_deduplication || params.rrbs).any() && filename != \"where_are_my_files.txt\") filename\n                else null\n            }\n\n        input:\n        set val(name), file(bam) from ch_bam_for_samtools_sort_index_flagstat\n        file wherearemyfiles from ch_wherearemyfiles_for_samtools_sort_index_flagstat.collect()\n\n        output:\n        set val(name), file(\"${bam.baseName}.sorted.bam\") into ch_bam_sorted_for_markDuplicates\n        set val(name), file(\"${bam.baseName}.sorted.bam.bai\") into ch_bam_index\n        file \"${bam.baseName}_flagstat_report.txt\" into ch_flagstat_results_for_multiqc\n        file \"${bam.baseName}_stats_report.txt\" into ch_samtools_stats_results_for_multiqc\n        file \"where_are_my_files.txt\"\n\n        script:\n        def avail_mem = task.memory ? ((task.memory.toGiga() - 6) / task.cpus).trunc() : false\n        def sort_mem = avail_mem && avail_mem > 2 ? \"-m ${avail_mem}G\" : ''\n        \"\"\"\n        samtools sort $bam \\\\\n            -@ ${task.cpus} $sort_mem \\\\\n            -o ${bam.baseName}.sorted.bam\n        samtools index ${bam.baseName}.sorted.bam\n        samtools flagstat ${bam.baseName}.sorted.bam > ${bam.baseName}_flagstat_report.txt\n        samtools stats ${bam.baseName}.sorted.bam > ${bam.baseName}_stats_report.txt\n        \"\"\"\n    }",
        "nb_lignes_process": 31,
        "string_script": "        def avail_mem = task.memory ? ((task.memory.toGiga() - 6) / task.cpus).trunc() : false\n        def sort_mem = avail_mem && avail_mem > 2 ? \"-m ${avail_mem}G\" : ''\n        \"\"\"\n        samtools sort $bam \\\\\n            -@ ${task.cpus} $sort_mem \\\\\n            -o ${bam.baseName}.sorted.bam\n        samtools index ${bam.baseName}.sorted.bam\n        samtools flagstat ${bam.baseName}.sorted.bam > ${bam.baseName}_flagstat_report.txt\n        samtools stats ${bam.baseName}.sorted.bam > ${bam.baseName}_stats_report.txt\n        \"\"\"",
        "nb_lignes_script": 9,
        "language_script": "bash",
        "tools": [
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "ch_bam_for_samtools_sort_index_flagstat",
            "ch_wherearemyfiles_for_samtools_sort_index_flagstat"
        ],
        "nb_inputs": 2,
        "outputs": [
            "ch_bam_sorted_for_markDuplicates",
            "ch_bam_index",
            "ch_flagstat_results_for_multiqc",
            "ch_samtools_stats_results_for_multiqc"
        ],
        "nb_outputs": 4,
        "name_workflow": "nf-core__methylseq",
        "directive": [
            "tag \"$name\"",
            "publishDir \"${params.outdir}/bwa-mem_alignments\", mode: params.publish_dir_mode , saveAs: {filename -> if(filename.indexOf(\"report.txt\") > 0) \"logs/$filename\" else if( (!params.save_align_intermeds && !params.skip_deduplication && !params.rrbs).every() && filename == \"where_are_my_files.txt\") filename else if( (params.save_align_intermeds || params.skip_deduplication || params.rrbs).any() && filename != \"where_are_my_files.txt\") filename else null }"
        ],
        "when": "",
        "stub": ""
    },
    "markDuplicates": {
        "name_process": "markDuplicates",
        "string_process": " process markDuplicates {\n            tag \"$name\"\n            publishDir \"${params.outdir}/bwa-mem_markDuplicates\", mode: params.publish_dir_mode,\n                saveAs: {filename -> filename.indexOf(\".bam\") == -1 ? \"logs/$filename\" : \"$filename\"}\n\n            input:\n            set val(name), file(bam) from ch_bam_sorted_for_markDuplicates\n\n            output:\n            set val(name), file(\"${bam.baseName}.markDups.bam\") into ch_bam_dedup_for_methyldackel, ch_bam_dedup_for_qualimap\n            set val(name), file(\"${bam.baseName}.markDups.bam.bai\") into ch_bam_index_for_methyldackel                                                              \n            file \"${bam.baseName}.markDups_metrics.txt\" into ch_markDups_results_for_multiqc\n\n            script:\n            if( !task.memory ){\n                log.info \"[Picard MarkDuplicates] Available memory not known - defaulting to 3GB. Specify process memory requirements to change this.\"\n                avail_mem = 3\n            } else {\n                avail_mem = task.memory.toGiga()\n            }\n            \"\"\"\n            picard -Xmx${avail_mem}g MarkDuplicates \\\\\n                INPUT=$bam \\\\\n                OUTPUT=${bam.baseName}.markDups.bam \\\\\n                METRICS_FILE=${bam.baseName}.markDups_metrics.txt \\\\\n                REMOVE_DUPLICATES=false \\\\\n                ASSUME_SORTED=true \\\\\n                PROGRAM_RECORD_ID='null' \\\\\n                VALIDATION_STRINGENCY=LENIENT\n            samtools index ${bam.baseName}.markDups.bam\n            \"\"\"\n        }",
        "nb_lignes_process": 30,
        "string_script": "            if( !task.memory ){\n                log.info \"[Picard MarkDuplicates] Available memory not known - defaulting to 3GB. Specify process memory requirements to change this.\"\n                avail_mem = 3\n            } else {\n                avail_mem = task.memory.toGiga()\n            }\n            \"\"\"\n            picard -Xmx${avail_mem}g MarkDuplicates \\\\\n                INPUT=$bam \\\\\n                OUTPUT=${bam.baseName}.markDups.bam \\\\\n                METRICS_FILE=${bam.baseName}.markDups_metrics.txt \\\\\n                REMOVE_DUPLICATES=false \\\\\n                ASSUME_SORTED=true \\\\\n                PROGRAM_RECORD_ID='null' \\\\\n                VALIDATION_STRINGENCY=LENIENT\n            samtools index ${bam.baseName}.markDups.bam\n            \"\"\"",
        "nb_lignes_script": 16,
        "language_script": "bash",
        "tools": [
            "Picard",
            "SAMtools"
        ],
        "tools_url": [
            "https://bio.tools/picard_tools",
            "https://bio.tools/samtools"
        ],
        "tools_dico": [
            {
                "name": "Picard",
                "uri": "https://bio.tools/picard_tools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Biological databases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Data management"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3071",
                            "term": "Databases and information systems"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation analysis"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Sequence variation analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Variant analysis"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3197",
                                    "term": "Genetic variation annotation"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "A set of command line tools for manipulating high-throughput sequencing (HTS) data in formats such as SAM/BAM/CRAM and VCF. Available as a standalone program or within the GATK4 program.",
                "homepage": "https://github.com/broadinstitute/picard"
            },
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            }
        ],
        "inputs": [
            "ch_bam_sorted_for_markDuplicates"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_bam_dedup_for_methyldackel",
            "ch_bam_dedup_for_qualimap",
            "ch_bam_index_for_methyldackel",
            "ch_markDups_results_for_multiqc"
        ],
        "nb_outputs": 4,
        "name_workflow": "nf-core__methylseq",
        "directive": [
            "tag \"$name\"",
            "publishDir \"${params.outdir}/bwa-mem_markDuplicates\", mode: params.publish_dir_mode , saveAs: {filename -> filename.indexOf(\".bam\") == -1 ? \"logs/$filename\" : \"$filename\"}"
        ],
        "when": "",
        "stub": ""
    },
    "methyldackel": {
        "name_process": "methyldackel",
        "string_process": " process methyldackel {\n        tag \"$name\"\n        publishDir \"${params.outdir}/MethylDackel\", mode: params.publish_dir_mode\n\n        input:\n        set val(name),\n            file(bam),\n            file(bam_index),\n            file(fasta),\n            file(fasta_index) from ch_bam_dedup_for_methyldackel\n            .join(ch_bam_index_for_methyldackel)\n            .combine(ch_fasta_for_methyldackel)\n            .combine(ch_fasta_index_for_methyldackel)\n\n\n        output:\n        file \"${bam.baseName}*\" into ch_methyldackel_results_for_multiqc\n\n        script:\n        all_contexts = params.comprehensive ? '--CHG --CHH' : ''\n        min_depth = params.min_depth > 0 ? \"--minDepth ${params.min_depth}\" : ''\n        ignore_flags = params.ignore_flags ? \"--ignoreFlags\" : ''\n        methyl_kit = params.methyl_kit ? \"--methylKit\" : ''\n        \"\"\"\n        MethylDackel extract $all_contexts $ignore_flags $methyl_kit $min_depth $fasta $bam\n        MethylDackel mbias $all_contexts $ignore_flags $fasta $bam ${bam.baseName} --txt > ${bam.baseName}_methyldackel.txt\n        \"\"\"\n    }",
        "nb_lignes_process": 26,
        "string_script": "        all_contexts = params.comprehensive ? '--CHG --CHH' : ''\n        min_depth = params.min_depth > 0 ? \"--minDepth ${params.min_depth}\" : ''\n        ignore_flags = params.ignore_flags ? \"--ignoreFlags\" : ''\n        methyl_kit = params.methyl_kit ? \"--methylKit\" : ''\n        \"\"\"\n        MethylDackel extract $all_contexts $ignore_flags $methyl_kit $min_depth $fasta $bam\n        MethylDackel mbias $all_contexts $ignore_flags $fasta $bam ${bam.baseName} --txt > ${bam.baseName}_methyldackel.txt\n        \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_bam_dedup_for_methyldackel",
            "ch_bam_index_for_methyldackel",
            "ch_fasta_for_methyldackel",
            "ch_fasta_index_for_methyldackel"
        ],
        "nb_inputs": 4,
        "outputs": [
            "ch_methyldackel_results_for_multiqc"
        ],
        "nb_outputs": 1,
        "name_workflow": "nf-core__methylseq",
        "directive": [
            "tag \"$name\"",
            "publishDir \"${params.outdir}/MethylDackel\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "qualimap": {
        "name_process": "qualimap",
        "string_process": "\nprocess qualimap {\n    tag \"$name\"\n    publishDir \"${params.outdir}/qualimap\", mode: params.publish_dir_mode\n\n    input:\n    set val(name), file(bam) from ch_bam_dedup_for_qualimap\n\n    output:\n    file \"${bam.baseName}_qualimap\" into ch_qualimap_results_for_multiqc\n\n    script:\n    gcref = params.genome.toString().startsWith('GRCh') ? '-gd HUMAN' : ''\n    gcref = params.genome.toString().startsWith('GRCm') ? '-gd MOUSE' : ''\n    def avail_mem = task.memory ? ((task.memory.toGiga() - 6) / task.cpus).trunc() : false\n    def sort_mem = avail_mem && avail_mem > 2 ? \"-m ${avail_mem}G\" : ''\n    \"\"\"\n    samtools sort $bam \\\\\n        -@ ${task.cpus} $sort_mem \\\\\n        -o ${bam.baseName}.sorted.bam\n    qualimap bamqc $gcref \\\\\n        -bam ${bam.baseName}.sorted.bam \\\\\n        -outdir ${bam.baseName}_qualimap \\\\\n        --collect-overlap-pairs \\\\\n        --java-mem-size=${task.memory.toGiga()}G \\\\\n        -nt ${task.cpus}\n    \"\"\"\n}",
        "nb_lignes_process": 26,
        "string_script": "    gcref = params.genome.toString().startsWith('GRCh') ? '-gd HUMAN' : ''\n    gcref = params.genome.toString().startsWith('GRCm') ? '-gd MOUSE' : ''\n    def avail_mem = task.memory ? ((task.memory.toGiga() - 6) / task.cpus).trunc() : false\n    def sort_mem = avail_mem && avail_mem > 2 ? \"-m ${avail_mem}G\" : ''\n    \"\"\"\n    samtools sort $bam \\\\\n        -@ ${task.cpus} $sort_mem \\\\\n        -o ${bam.baseName}.sorted.bam\n    qualimap bamqc $gcref \\\\\n        -bam ${bam.baseName}.sorted.bam \\\\\n        -outdir ${bam.baseName}_qualimap \\\\\n        --collect-overlap-pairs \\\\\n        --java-mem-size=${task.memory.toGiga()}G \\\\\n        -nt ${task.cpus}\n    \"\"\"",
        "nb_lignes_script": 14,
        "language_script": "bash",
        "tools": [
            "SAMtools",
            "QualiMap"
        ],
        "tools_url": [
            "https://bio.tools/samtools",
            "https://bio.tools/qualimap"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "QualiMap",
                "uri": "https://bio.tools/qualimap",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3572",
                            "term": "Data quality management"
                        }
                    ],
                    []
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality control"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing QC"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_3218",
                                    "term": "Sequencing quality assessment"
                                }
                            ]
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "Platform-independent application written in Java and R that provides both a Graphical User Inteface (GUI) and a command-line interface to facilitate the quality control of alignment sequencing data.",
                "homepage": "http://qualimap.bioinfo.cipf.es/"
            }
        ],
        "inputs": [
            "ch_bam_dedup_for_qualimap"
        ],
        "nb_inputs": 1,
        "outputs": [
            "ch_qualimap_results_for_multiqc"
        ],
        "nb_outputs": 1,
        "name_workflow": "nf-core__methylseq",
        "directive": [
            "tag \"$name\"",
            "publishDir \"${params.outdir}/qualimap\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "preseq": {
        "name_process": "preseq",
        "string_process": "\nprocess preseq {\n    tag \"$name\"\n    publishDir \"${params.outdir}/preseq\", mode: params.publish_dir_mode\n\n    input:\n    set val(name), file(bam) from ch_bam_for_preseq\n\n    output:\n    file \"${bam.baseName}.ccurve.txt\" into preseq_results\n\n    script:\n    def avail_mem = task.memory ? ((task.memory.toGiga() - 6) / task.cpus).trunc() : false\n    def sort_mem = avail_mem && avail_mem > 2 ? \"-m ${avail_mem}G\" : ''\n    \"\"\"\n    samtools sort $bam \\\\\n        -@ ${task.cpus} $sort_mem \\\\\n        -o ${bam.baseName}.sorted.bam\n    preseq lc_extrap -v -B ${bam.baseName}.sorted.bam -o ${bam.baseName}.ccurve.txt\n    \"\"\"\n}",
        "nb_lignes_process": 19,
        "string_script": "    def avail_mem = task.memory ? ((task.memory.toGiga() - 6) / task.cpus).trunc() : false\n    def sort_mem = avail_mem && avail_mem > 2 ? \"-m ${avail_mem}G\" : ''\n    \"\"\"\n    samtools sort $bam \\\\\n        -@ ${task.cpus} $sort_mem \\\\\n        -o ${bam.baseName}.sorted.bam\n    preseq lc_extrap -v -B ${bam.baseName}.sorted.bam -o ${bam.baseName}.ccurve.txt\n    \"\"\"",
        "nb_lignes_script": 7,
        "language_script": "bash",
        "tools": [
            "SAMtools",
            "preseq"
        ],
        "tools_url": [
            "https://bio.tools/samtools",
            "https://bio.tools/preseq"
        ],
        "tools_dico": [
            {
                "name": "SAMtools",
                "uri": "https://bio.tools/samtools",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "Rare diseases"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequence analysis"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0102",
                            "term": "Mapping"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_3325",
                            "term": "https://en.wikipedia.org/wiki/Rare_disease"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0080",
                            "term": "Sequences"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_3096",
                                    "term": "Editing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Parsing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Indexing"
                                }
                            ],
                            [
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Data visualisation"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0337",
                                    "term": "Rendering"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Data loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_1812",
                                    "term": "Loading"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File format conversion"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "File formatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0335",
                                    "term": "Reformatting"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Data indexing"
                                },
                                {
                                    "uri": "http://edamontology.org/operation_0227",
                                    "term": "Database indexing"
                                }
                            ]
                        ],
                        "input": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_0924",
                                "term": "Sequence trace"
                            }
                        ]
                    }
                ],
                "description": "A software package with various utilities for processing alignments in the SAM format, including variant calling and alignment viewing.",
                "homepage": "http://www.htslib.org/"
            },
            {
                "name": "preseq",
                "uri": "https://bio.tools/preseq",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0622",
                            "term": "Genomics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0654",
                            "term": "DNA analysis"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2423",
                                    "term": "Prediction and recognition"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": []
                    }
                ],
                "description": "This package is aimed at predicting and number of distinct reads and how many will be expected from additional sequencing using an initial sequencing experiment. The estimates can then be used to examine the utility of further sequencing, optimize the sequencing depth, or to screen multiple libraries to avoid low complexity samples.",
                "homepage": "http://smithlabresearch.org/software/preseq/"
            }
        ],
        "inputs": [
            "ch_bam_for_preseq"
        ],
        "nb_inputs": 1,
        "outputs": [
            "preseq_results"
        ],
        "nb_outputs": 1,
        "name_workflow": "nf-core__methylseq",
        "directive": [
            "tag \"$name\"",
            "publishDir \"${params.outdir}/preseq\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "multiqc": {
        "name_process": "multiqc",
        "string_process": "\nprocess multiqc {\n    publishDir \"${params.outdir}/MultiQC\", mode: params.publish_dir_mode\n\n    input:\n    file (multiqc_config) from ch_multiqc_config\n    file (mqc_custom_config) from ch_multiqc_custom_config.collect().ifEmpty([])\n    file ('fastqc/*') from ch_fastqc_results_for_multiqc.collect().ifEmpty([])\n    file ('trimgalore/*') from ch_trim_galore_results_for_multiqc.collect().ifEmpty([])\n    file ('bismark/*') from ch_bismark_align_log_for_multiqc.collect().ifEmpty([])\n    file ('bismark/*') from ch_bismark_dedup_log_for_multiqc.collect().ifEmpty([])\n    file ('bismark/*') from ch_bismark_splitting_report_for_multiqc.collect().ifEmpty([])\n    file ('bismark/*') from ch_bismark_mbias_for_multiqc.collect().ifEmpty([])\n    file ('bismark/*') from ch_bismark_reports_results_for_multiqc.collect().ifEmpty([])\n    file ('bismark/*') from ch_bismark_summary_results_for_multiqc.collect().ifEmpty([])\n    file ('samtools/*') from ch_flagstat_results_for_multiqc.flatten().collect().ifEmpty([])\n    file ('samtools/*') from ch_samtools_stats_results_for_multiqc.flatten().collect().ifEmpty([])\n    file ('picard/*') from ch_markDups_results_for_multiqc.flatten().collect().ifEmpty([])\n    file ('methyldackel/*') from ch_methyldackel_results_for_multiqc.flatten().collect().ifEmpty([])\n    file ('qualimap/*') from ch_qualimap_results_for_multiqc.collect().ifEmpty([])\n    file ('preseq/*') from preseq_results.collect().ifEmpty([])\n    file ('software_versions/*') from ch_software_versions_yaml_for_multiqc.collect()\n    file workflow_summary from ch_workflow_summary.collectFile(name: \"workflow_summary_mqc.yaml\")\n\n    output:\n    file \"*multiqc_report.html\" into ch_multiqc_report\n    file \"*_data\"\n    file \"multiqc_plots\"\n\n    script:\n    rtitle = ''\n    rfilename = ''\n    if (!(workflow.runName ==~ /[a-z]+_[a-z]+/)) {\n        rtitle = \"--title \\\"${workflow.runName}\\\"\"\n        rfilename = \"--filename \" + workflow.runName.replaceAll('\\\\W','_').replaceAll('_+','_') + \"_multiqc_report\"\n    }\n    custom_config_file = params.multiqc_config ? \"--config $mqc_custom_config\" : ''\n    \"\"\"\n    multiqc -f $rtitle $rfilename $custom_config_file . \\\\\n        -m custom_content -m picard -m qualimap -m bismark -m samtools -m preseq -m cutadapt -m fastqc\n    \"\"\"\n}",
        "nb_lignes_process": 40,
        "string_script": "    rtitle = ''\n    rfilename = ''\n    if (!(workflow.runName ==~ /[a-z]+_[a-z]+/)) {\n        rtitle = \"--title \\\"${workflow.runName}\\\"\"\n        rfilename = \"--filename \" + workflow.runName.replaceAll('\\\\W','_').replaceAll('_+','_') + \"_multiqc_report\"\n    }\n    custom_config_file = params.multiqc_config ? \"--config $mqc_custom_config\" : ''\n    \"\"\"\n    multiqc -f $rtitle $rfilename $custom_config_file . \\\\\n        -m custom_content -m picard -m qualimap -m bismark -m samtools -m preseq -m cutadapt -m fastqc\n    \"\"\"",
        "nb_lignes_script": 10,
        "language_script": "bash",
        "tools": [
            "MultiQC"
        ],
        "tools_url": [
            "https://bio.tools/multiqc"
        ],
        "tools_dico": [
            {
                "name": "MultiQC",
                "uri": "https://bio.tools/multiqc",
                "topic": [
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "Sequencing"
                        },
                        {
                            "uri": "http://edamontology.org/topic_0091",
                            "term": "Bioinformatics"
                        }
                    ],
                    [
                        {
                            "uri": "http://edamontology.org/topic_3168",
                            "term": "DNA-Seq"
                        }
                    ]
                ],
                "function": [
                    {
                        "operation": [
                            [
                                {
                                    "uri": "http://edamontology.org/operation_2428",
                                    "term": "Validation"
                                }
                            ],
                            []
                        ],
                        "input": [],
                        "output": [
                            {
                                "uri": "http://edamontology.org/data_2048",
                                "term": "Report"
                            }
                        ]
                    }
                ],
                "description": "MultiQC aggregates results from multiple bioinformatics analyses across many samples into a single report. It searches a given directory for analysis logs and compiles a HTML report. It's a general use tool, perfect for summarising the output from numerous bioinformatics tools.",
                "homepage": "http://multiqc.info/"
            }
        ],
        "inputs": [
            "ch_multiqc_config",
            "ch_multiqc_custom_config",
            "ch_fastqc_results_for_multiqc",
            "ch_trim_galore_results_for_multiqc",
            "ch_bismark_align_log_for_multiqc",
            "ch_bismark_dedup_log_for_multiqc",
            "ch_bismark_splitting_report_for_multiqc",
            "ch_bismark_mbias_for_multiqc",
            "ch_bismark_reports_results_for_multiqc",
            "ch_bismark_summary_results_for_multiqc",
            "ch_flagstat_results_for_multiqc",
            "ch_samtools_stats_results_for_multiqc",
            "ch_markDups_results_for_multiqc",
            "ch_methyldackel_results_for_multiqc",
            "ch_qualimap_results_for_multiqc",
            "preseq_results",
            "ch_software_versions_yaml_for_multiqc",
            "ch_workflow_summary"
        ],
        "nb_inputs": 18,
        "outputs": [
            "ch_multiqc_report"
        ],
        "nb_outputs": 1,
        "name_workflow": "nf-core__methylseq",
        "directive": [
            "publishDir \"${params.outdir}/MultiQC\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    },
    "output_documentation": {
        "name_process": "output_documentation",
        "string_process": "\nprocess output_documentation {\n    publishDir \"${params.outdir}/pipeline_info\", mode: params.publish_dir_mode\n\n    input:\n    file output_docs from ch_output_docs\n    file images from ch_output_docs_images\n\n    output:\n    file 'results_description.html'\n\n    script:\n    \"\"\"\n    markdown_to_html.py $output_docs -o results_description.html\n    \"\"\"\n}",
        "nb_lignes_process": 14,
        "string_script": "    \"\"\"\n    markdown_to_html.py $output_docs -o results_description.html\n    \"\"\"",
        "nb_lignes_script": 2,
        "language_script": "bash",
        "tools": [],
        "tools_url": [],
        "tools_dico": [],
        "inputs": [
            "ch_output_docs",
            "ch_output_docs_images"
        ],
        "nb_inputs": 2,
        "outputs": [],
        "nb_outputs": 0,
        "name_workflow": "nf-core__methylseq",
        "directive": [
            "publishDir \"${params.outdir}/pipeline_info\", mode: params.publish_dir_mode"
        ],
        "when": "",
        "stub": ""
    }
}